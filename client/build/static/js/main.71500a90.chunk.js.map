{"version":3,"sources":["component/Appointment/legend.svg","component/Navigation/logo.png","component/Home/img/chat.png","component/Home/img/f1.png","component/Home/img/f2.png","component/Home/img/f3.png","component/Home/img/f4.png","component/Consultation/legend.svg","component/StudyHub/legend.svg","component/About/img/about.png","component/About/img/background.svg","component/Methods.js","component/Navigation/AppBar.jsx","component/Login/MyField.jsx","component/Login/loginForm.jsx","component/Login/login.jsx","component/Signup/stepper.jsx","component/Signup/subjects.jsx","component/Signup/stepCard.jsx","component/Signup/signupForm.jsx","component/Home/waveBorder.jsx","component/Signup/Signup.jsx","component/Home/header.jsx","component/Home/featureCard.jsx","component/Home/stepper.jsx","component/Home/features.jsx","component/Home/home.jsx","component/Navigation/Loading.jsx","component/Navigation/Layout.jsx","component/Timetable.jsx","component/Appointment/StudentHeader.jsx","component/Appointment/StudentContent.jsx","component/Appointment/StudentQuery.jsx","component/Appointment/TimetableBar.jsx","component/Appointment/Student.jsx","component/Appointment/StaffHeader.jsx","component/Appointment/Staff.jsx","component/Appointment/Appointment.jsx","component/Consultation/StudentHeader.jsx","component/Consultation/StudentContent.jsx","component/Consultation/Student.jsx","component/Consultation/ConsultDialog.jsx","component/Consultation/StaffHeader.jsx","component/Consultation/StaffContent.jsx","component/Consultation/Staff.jsx","component/Consultation/Consultation.jsx","component/Setting/Add.jsx","component/Setting/Student.jsx","component/Setting/Create.jsx","component/Setting/Staff.jsx","component/Setting/Setting.jsx","component/StudyHub/HubCard.jsx","component/StudyHub/CreateDialog.jsx","component/StudyHub/Student.jsx","component/StudyHub/Hub.jsx","component/Analytic/Staff.jsx","component/Analytic/Analytic.jsx","component/About/About.jsx","App.js","index.js"],"names":["module","exports","myFetch","url","method","body","a","fetch","JSON","stringify","headers","Cookies","get","res","json","msg","AuthApi","createContext","UserContext","StaffContext","StudentContext","useStyles","makeStyles","theme","logo","maxHeight","link","marginLeft","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","background","palette","default","appBarShift","width","enteringScreen","menuButton","marginRight","hide","display","menuItem","fontWeight","noDecoration","textDecoration","spacing","withWidth","openDrawer","handleDrawerOpen","logOut","aboutBar","classes","useContext","loginEl","setLoginEl","auth","setOpenLogin","setLoadingRoute","history","useHistory","location","useLocation","handleClose","open","Boolean","id","undefined","AppBar","position","className","clsx","Toolbar","IconButton","aria-label","onClick","edge","Button","pathname","push","src","logoImage","alt","to","style","fontSize","color","fontFamily","textTransform","isWidthDown","event","currentTarget","Avatar","Menu","anchorEl","onClose","keepMounted","MenuItem","label","required","variant","setState","type","error","TextField","margin","fullWidth","autoComplete","onChange","e","target","value","paper","flexDirection","alignItems","height","marginTop","avatar","form","submit","signUpButton","flexGrow","text","cancel","warn","close","right","top","grey","closeLoginWindow","useState","email","setEmail","password","setPassword","userType","setUserType","setError","setAuth","login","preventDefault","success","set","token","setTimeout","Paper","elevation","Grow","in","Card","Alert","severity","onSubmit","MyField","FormControl","component","FormLabel","RadioGroup","row","name","FormControlLabel","control","Radio","size","root","maxWidth","openLogin","Dialog","aria-labelledby","Grid","container","justify","item","xs","Close","ColorlibConnector","withStyles","alternativeLabel","line","border","backgroundColor","borderRadius","completed","backgroundImage","StepConnector","useColorlibStepIconStyles","justifyContent","active","boxShadow","ColorlibStepIcon","props","icons","1","2","3","4","5","String","icon","activeStep","getSteps","steps","Stepper","connector","map","index","Step","key","StepLabel","StepIconComponent","setChosenSubjects","allSubjects","Autocomplete","multiple","options","getOptionLabel","option","defaultValue","renderTags","getTagProps","Chip","renderInput","params","breakpoints","down","buttons","staff","minHeight","student","largeIcon","SchoolIcon","handleNext","handleBack","cardID","handleSubmit","setFirstName","setLasName","setConformPassword","status","Collapse","timeout","Container","Typography","align","newValue","getField","Fab","disabled","getButton","stepper","button","actionsContainer","marginBottom","resetContainer","padding","firstName","lastName","confirmPassword","chosenSubjects","setStatus","React","setActiveStep","loading","setLoading","setAllSubjects","useEffect","subjectList","fetchSubjects","includes","prevActiveStep","HandleStatus","signUp","subjects","isWidthUp","title","waves","from","transform","parallax","animation","animationDelay","animationNegativeDelay","Math","random","lowerColor","upperColor","rest","xmlns","xlink","viewBox","preserveAspectRatio","shapeRendering","d","href","x","y","fill","c1","c2","secondary","light","useTheme","image","images","about","getStarted","minWidth","fixed","direction","md","startIcon","headerImage","cover","card","headline","maxSteps","CardContent","content","features","nonLinear","step","StepButton","AutoPlaySwipeableViews","autoPlay","SwipeableViews","f1","f2","f3","f4","length","axis","onChangeIndex","enableMouseEvents","swipe","interval","element","primary","BorderLinearProgress","lighten","bar","LinearProgress","up","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","toolbar","mixins","between","bottom","largeScreen","selectedRoute","alert","closeAlert","setUser","loadingRoute","setOpen","handleRouting","newRoute","handleDrawerClose","remove","CssBaseline","Snackbar","autoHideDuration","message","Drawer","List","ListItem","selected","ListItemIcon","ListItemText","Divider","Loading","ToolbarWithLoading","toolbarRoot","progress","left","children","restProps","Root","resources","fieldName","instances","green","blue","red","amber","data","currentDate","setCurrentDate","header","mainResourceName","halfScreen","filter","each","subjectCode","loadSubjectResources","onCurrentDateChange","excludedDays","startDayHour","endDayHour","cellDuration","headerComponent","contentComponent","cyan","teal","lime","rootComponent","action","textCenter","textAlign","backgroundSize","appointmentData","setCancelAppointment","Header","showCloseButton","showOpenButton","onOpenButtonClick","StatusIcon","getCommentTitle","pending","approved","declined","scroll","overflow","openComments","setOpenComments","Content","dense","unmountOnExit","disablePadding","comments","mail","getStatusStyle","disableTouchRipple","disableRipple","closeButton","delete","select","skeleton","marks","getDuration","startDate","endDate","getEndDate","start","end","Date","setMinutes","getMinutes","CreateDialog","staffInfo","toggle","createAppointment","setStartDate","setEndDate","setLocation","setComments","DialogTitle","DialogContent","dividers","utils","MomentUtils","date","DialogContentText","Slider","valueLabelDisplay","getAriaValueText","max","Send","multiline","rowsMax","DialogActions","ButtonGroup","then","userInfo","currentSubject","setCurrentSubject","staffs","setStaffs","setStaffInfo","detectAlert","setAlert","fetchStaffs","staffsInfo","staffId","_id","comment","Select","subject","ListItemAvatar","Skeleton","currentStatus","setCurrentStatus","setMainResourceName","Tabs","indicatorColor","textColor","scrollButtons","Tab","fab","getContrastText","query","table","legend","CancelDialog","cancelAppointment","setData","user","reloadUser","fetchAppoint","appointments","appoints","appointment","formatData","Provider","Fade","noStyle","StudentQuery","TimetableBar","setPendAppointment","approve","decline","PendDialog","pendAppointment","pend","setSelectedRoute","fetchUser","Layout","Student","Staff","booking","commandButton","book","checkBooked","registeredConsult","Badge","badgeContent","slotsAvailable","showZero","totalStudent","simpleReload","fetchConsult","consultations","getBookingStatus","consultation","consults","studentRegistered","viewChange","changeMainResource","SlotSlider","thumb","valueLabel","track","rail","DeleteButton","edit","editingAppointment","setEditingAppointment","api","setSubjectCode","slot","setSlot","createTime","editTime","deleteTime","setEditOpen","createOpen","setCreateOpen","editOpen","ConsultDialog","context","Zoom","handleDialogClose","fetchAllSubject","GetField","join","setMySubjects","mySubjects","fetchMySubject","leave","subjectsInfo","subjectName","ListItemSecondaryAction","Tooltip","setSubjectName","setAdded","test","fetchSubject","openJoin","setOpenJoin","openCreate","setOpenCreate","openSpeed","setOpenSpeed","newName","setNewName","SpeedDial","ariaLabel","SpeedDialIcon","onOpen","SpeedDialAction","tooltipTitle","subjectInfo","setSubjectInfo","fetchData","cardHeader","registered","normal","lightBlue","getAction","hub","setDeleteHub","creator","time","setHubs","fetchHubs","openStudent","setOpenStudent","subjectHubs","CardHeader","summary","subheader","charAt","students","day","openTo","setDuration","setSummary","setDay","media","DeleteDialog","leaveHub","deleteing","hubs","HubCard","fetchAnalytic","consultTable","console","log","factory","scaleBand","valueField","argumentField","borderColor","aboutImg","HomeRoute","Component","render","ProtectedRoute","checkAuth","succeed","info","exact","path","Consultation","Hub","Analytic","Appointment","Setting","Home","About","Signup","createMuiTheme","main","dark","lightGreen","A200","typography","h1","h2","h3","h4","h5","subtitle1","shape","responsiveFontSizes","ReactDOM","App","document","getElementById"],"mappings":"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","file":"static/js/main.71500a90.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/legend.a4c8a91f.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.bcec5f9e.png\";","module.exports = __webpack_public_path__ + \"static/media/chat.77ff7adb.png\";","module.exports = __webpack_public_path__ + \"static/media/f1.ac70137d.png\";","module.exports = __webpack_public_path__ + \"static/media/f2.536d31bc.png\";","module.exports = __webpack_public_path__ + \"static/media/f3.6751975b.png\";","module.exports = __webpack_public_path__ + \"static/media/f4.3322bc49.png\";","module.exports = __webpack_public_path__ + \"static/media/legend.8484dbfe.svg\";","module.exports = __webpack_public_path__ + \"static/media/legend.abb19013.svg\";","module.exports = __webpack_public_path__ + \"static/media/about.eb5f65ec.png\";","module.exports = __webpack_public_path__ + \"static/media/background.20f98efe.svg\";","import { createContext } from \"react\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nconst myFetch = async (url, method, body) => {\r\n  const res = await fetch(\"https://meetute.herokuapp.com\"+url, {\r\n    method: method,\r\n    body: JSON.stringify(body),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"meetute-token\": Cookies.get(\"meetute\"),\r\n    },\r\n  });\r\n\r\n  const msg = await res.json();\r\n  return msg;\r\n};\r\n\r\nconst AuthApi = createContext();\r\n\r\nconst UserContext = createContext();\r\n\r\nconst StaffContext = createContext();\r\n\r\nconst StudentContext = createContext();\r\n\r\nexport { AuthApi, UserContext, myFetch, StaffContext, StudentContext };\r\n","import React, { useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n    Avatar,\r\n    AppBar,\r\n    Toolbar,\r\n    Button,\r\n    IconButton,\r\n    Menu,\r\n    MenuItem,\r\n} from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport withWidth, { isWidthDown } from \"@material-ui/core/withWidth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AuthApi, UserContext } from \"../Methods\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport logoImage from \"./logo.png\";\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n    logo: {\r\n        maxHeight: \"3rem\",\r\n    },\r\n    link: {\r\n        marginLeft: \"auto\",\r\n    },\r\n\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create([\"width\", \"margin\"], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        background: theme.palette.background.default,\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create([\"width\", \"margin\"], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 10,\r\n    },\r\n    hide: {\r\n        display: \"none\",\r\n    },\r\n    menuItem: {\r\n        fontWeight: 900,\r\n    },\r\n    noDecoration: {\r\n        textDecoration: \"none !important\",\r\n        marginLeft: theme.spacing(3),\r\n    },\r\n}));\r\n\r\n/***\r\n * The App Bar at the top.\r\n */\r\nexport default withWidth()(\r\n    ({ openDrawer, handleDrawerOpen, logOut, width, aboutBar }) => {\r\n        const classes = useStyles();\r\n\r\n        const { loginEl, setLoginEl, auth, setOpenLogin } = useContext(AuthApi);\r\n\r\n        const { setLoadingRoute } = useContext(UserContext);\r\n        const history = useHistory();\r\n        const location = useLocation();\r\n\r\n        //Opening the avatar menu.\r\n        const handleClick = (event) => {\r\n            if (aboutBar) return history.push(\"/\");\r\n            setLoginEl(event.currentTarget);\r\n        };\r\n\r\n        //Closing the avatar menu.\r\n        const handleClose = () => {\r\n            setLoginEl(null);\r\n        };\r\n\r\n        const open = Boolean(loginEl);\r\n        const id = open ? \"simple-popover\" : undefined;\r\n\r\n        return (\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: openDrawer,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    {auth && !aboutBar ? (\r\n                        <IconButton\r\n                            aria-label=\"open drawer\"\r\n                            onClick={handleDrawerOpen}\r\n                            edge=\"start\"\r\n                            className={clsx(classes.menuButton, {\r\n                                [classes.hide]: openDrawer,\r\n                            })}\r\n                        >\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                    ) : null}\r\n\r\n                    <Button\r\n                        onClick={() => {\r\n                            if (\r\n                                location.pathname === \"/Settings\" ||\r\n                                location.pathname === \"/settings\"\r\n                            )\r\n                                return;\r\n                            setLoadingRoute(true);\r\n                            history.push(\"/Settings\");\r\n                        }}\r\n                    >\r\n                        <img\r\n                            className={classes.logo}\r\n                            src={logoImage}\r\n                            alt=\"meetute\"\r\n                        />\r\n                    </Button>\r\n\r\n                    <Link className={classes.noDecoration} to={\"/about\"}>\r\n                        <Button\r\n                            style={{\r\n                                fontSize: \"18px\",\r\n                                color: \"#616161\",\r\n                                fontWeight: 530,\r\n                                fontFamily: \"Arial\",\r\n                                textTransform: \"none\",\r\n                            }}\r\n                        >\r\n                            About {isWidthDown(\"sm\", width) ? \"\" : \" us\"}\r\n                        </Button>\r\n                    </Link>\r\n\r\n                    <div className={classes.link}>\r\n                        <Button className={classes.link} onClick={handleClick}>\r\n                            <Avatar />\r\n                        </Button>\r\n                        <Menu\r\n                            id={id}\r\n                            open={open}\r\n                            anchorEl={loginEl}\r\n                            onClose={handleClose}\r\n                            keepMounted\r\n                        >\r\n                            {auth ? (\r\n                                <MenuItem\r\n                                    onClick={() => {\r\n                                        logOut();\r\n                                        handleClose();\r\n                                    }}\r\n                                    className={classes.menuItem}\r\n                                >\r\n                                    Logout\r\n                                </MenuItem>\r\n                            ) : (\r\n                                <div>\r\n                                    <MenuItem\r\n                                        onClick={() => {\r\n                                            setOpenLogin(true);\r\n                                            handleClose();\r\n                                        }}\r\n                                        className={classes.menuItem}\r\n                                    >\r\n                                        Login\r\n                                    </MenuItem>\r\n                                    <MenuItem\r\n                                        onClick={() => {\r\n                                            handleClose();\r\n                                            history.push(\"/signup\");\r\n                                        }}\r\n                                        className={classes.menuItem}\r\n                                    >\r\n                                        Sign Up\r\n                                    </MenuItem>\r\n                                </div>\r\n                            )}\r\n                        </Menu>\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n        );\r\n    }\r\n);\r\n","import React from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\n\r\n/***\r\n * Login field.\r\n */\r\nexport default ({ label, required, variant, setState, type, error }) => {\r\n\tlet style = \"filled\";\r\n\tif (variant != null) style = \"variant\";\r\n\r\n\treturn (\r\n\t\t<TextField\r\n\t\t\tvariant={style}\r\n\t\t\tmargin=\"normal\"\r\n\t\t\trequired={required}\r\n\t\t\tfullWidth\r\n\t\t\tid={label}\r\n\t\t\tlabel={label}\r\n\t\t\tautoComplete={label}\r\n\t\t\ttype={type}\r\n\t\t\tonChange={(e) => {\r\n\t\t\t\tsetState(e.target.value);\r\n\t\t\t}}\r\n\t\t\terror={error !== \"\" ? true : false}\r\n\t\t/>\r\n\t);\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n\tAvatar,\r\n\tButton,\r\n\tFormControlLabel,\r\n\tFormControl,\r\n\tRadioGroup,\r\n\tFormLabel,\r\n\tRadio,\r\n\tCard,\r\n\tPaper,\r\n\tGrow,\r\n} from \"@material-ui/core\";\r\nimport MyField from \"./MyField\";\r\n\r\nimport { AuthApi } from \"./../Methods\";\r\nimport Cookies from \"js-cookie\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { myFetch } from \"../Methods\";\r\n\r\n// Extension Styles\r\nconst useStyles = makeStyles((theme) => ({\r\n\tpaper: {\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t\talignItems: \"center\",\r\n\t\twidth: \"90%\",\r\n\t\theight: \"90%\",\r\n\t},\r\n\terror: {\r\n\t\tmarginTop: theme.spacing(2),\r\n\t},\r\n\tavatar: {\r\n\t\twidth: theme.spacing(10),\r\n\t\theight: theme.spacing(10),\r\n\t},\r\n\tform: {\r\n\t\tmarginTop: theme.spacing(3),\r\n\t},\r\n\tsubmit: {\r\n\t\tmargin: theme.spacing(2, 0, 0),\r\n\t},\r\n\tsignUpButton: {\r\n\t\ttextTransform: \"none\",\r\n\t\tflexGrow: \"1\",\r\n\t\tcolor: \"#31a065\",\r\n\t},\r\n\ttext: {\r\n\t\tfontWeight: \"500\",\r\n\t\tmargin: \"auto\",\r\n\t},\r\n\tcancel: {\r\n\t\tmarginTop: theme.spacing(1.4),\r\n\t},\r\n\twarn: {\r\n\t\tmarginTop: theme.spacing(0.8),\r\n\t},\r\n\tclose: {\r\n\t\tposition: \"absolute\",\r\n\t\tright: theme.spacing(1),\r\n\t\ttop: theme.spacing(1),\r\n\t\tcolor: theme.palette.grey[500],\r\n\t},\r\n}));\r\n\r\n/***\r\n * Login Form in login dialog.\r\n */\r\nexport default ({ closeLoginWindow }) => {\r\n\tconst history = useHistory();\r\n\tconst classes = useStyles();\r\n\tconst [email, setEmail] = useState(\"\");\r\n\tconst [password, setPassword] = useState(\"\");\r\n\tconst [userType, setUserType] = useState(\"student\");\r\n\tconst [error, setError] = useState(\"\");\r\n\tconst { setAuth } = useContext(AuthApi);\r\n\r\n\t//fetch login API.\r\n\tconst login = async (e) => {\r\n\t\te.preventDefault();\r\n\t\tsetError(\"\");\r\n\t\tconst msg = await myFetch(\"/api/shared/users/login\", \"POST\", {\r\n\t\t\temail: email,\r\n\t\t\tpassword: password,\r\n\t\t\tuserType: userType,\r\n\t\t});\r\n\t\tif (msg.success) {\r\n\t\t\t//Set up cookie with response token.\r\n\t\t\tCookies.set(\"meetute\", msg.token);\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsetAuth(true);\r\n\t\t\t\thistory.push(\"/settings\");\r\n\t\t\t}, 100);\r\n\t\t} else {\r\n\t\t\tsetError(msg.error);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Paper elevation={0} className={classes.paper}>\r\n\t\t\t<Avatar className={classes.avatar}></Avatar>\r\n\t\t\t{error !== \"\" ? (\r\n\t\t\t\t<Grow in={true}>\r\n\t\t\t\t\t<Card className={classes.error}>\r\n\t\t\t\t\t\t<Alert\r\n\t\t\t\t\t\t\tseverity=\"error\"\r\n\t\t\t\t\t\t\tonClose={() => {\r\n\t\t\t\t\t\t\t\tsetError(\"\");\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{error}\r\n\t\t\t\t\t\t</Alert>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</Grow>\r\n\t\t\t) : null}\r\n\r\n\t\t\t<form className={classes.form} onSubmit={login}>\r\n\t\t\t\t<MyField\r\n\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\tsetState={setEmail}\r\n\t\t\t\t\trequired={true}\r\n\t\t\t\t\terror={error}\r\n\t\t\t\t/>\r\n\t\t\t\t<MyField\r\n\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\tsetState={setPassword}\r\n\t\t\t\t\trequired={true}\r\n\t\t\t\t\ttype={\"password\"}\r\n\t\t\t\t\terror={error}\r\n\t\t\t\t/>\r\n\t\t\t\t<FormControl component=\"fieldset\">\r\n\t\t\t\t\t<FormLabel component=\"legend\">login as</FormLabel>\r\n\t\t\t\t\t<RadioGroup\r\n\t\t\t\t\t\trow\r\n\t\t\t\t\t\taria-label=\"position\"\r\n\t\t\t\t\t\tname=\"position\"\r\n\t\t\t\t\t\tvalue={userType}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\tvalue=\"student\"\r\n\t\t\t\t\t\t\tcontrol={<Radio color=\"primary\" />}\r\n\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\tsetUserType(event.target.value);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tlabel=\"Student\"\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\tvalue=\"staff\"\r\n\t\t\t\t\t\t\tcontrol={<Radio color=\"primary\" />}\r\n\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\tsetUserType(event.target.value);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tlabel=\"Staff\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</RadioGroup>\r\n\t\t\t\t</FormControl>\r\n\t\t\t\t<Button\r\n\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\tclassName={classes.submit}\r\n\t\t\t\t\tsize=\"large\"\r\n\t\t\t\t>\r\n\t\t\t\t\tLogin In\r\n\t\t\t\t</Button>\r\n\t\t\t</form>\r\n\t\t\t<br />\r\n\t\t\t<Button\r\n\t\t\t\tsize=\"small\"\r\n\t\t\t\tcolor=\"primary\"\r\n\t\t\t\tclassName={classes.signUpButton}\r\n\t\t\t\tfullWidth\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tcloseLoginWindow();\r\n\t\t\t\t\thistory.push(\"/signup\");\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\tDon't have an account? Sign Up\r\n\t\t\t</Button>\r\n\t\t\t<br />\r\n\t\t</Paper>\r\n\t);\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { Grid, Dialog, IconButton } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport LoginForm from \"./loginForm.jsx\";\r\nimport { AuthApi } from \"./../Methods\";\r\nimport { Close } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tmargin: \"auto\",\r\n\t\tmaxWidth: theme.spacing(55),\r\n\t},\r\n\tclose: {\r\n\t\tmarginTop: theme.spacing(1),\r\n\t},\r\n}));\r\n\r\n/***\r\n * Login dialog\r\n */\r\nexport default () => {\r\n\tconst classes = useStyles();\r\n\tconst { setLoginEl, openLogin, setOpenLogin } = useContext(AuthApi);\r\n\r\n\tconst closeLoginWindow = () => {\r\n\t\tsetOpenLogin(false);\r\n\t\tsetLoginEl(null);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Dialog\r\n\t\t\tonClose={closeLoginWindow}\r\n\t\t\taria-labelledby=\"customized-dialog-title\"\r\n\t\t\topen={openLogin}\r\n\t\t\tclassName={classes.root}\r\n\t\t>\r\n\t\t\t<Grid container justify=\"flex-end\">\r\n\t\t\t\t<Grid item xs={2}>\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tclassName={classes.close}\r\n\t\t\t\t\t\tonClick={closeLoginWindow}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Close />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\r\n\t\t\t<Grid container justify=\"center\">\r\n\t\t\t\t<LoginForm closeLoginWindow={closeLoginWindow} />\r\n\t\t\t</Grid>\r\n\t\t</Dialog>\r\n\t);\r\n};\r\n","import React from \"react\";\r\nimport {\r\n\tStepConnector,\r\n\tStepper,\r\n\tStep,\r\n\tStepLabel,\r\n\tGrow,\r\n} from \"@material-ui/core\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\n\r\n/***\r\n * Customized step connector.\r\n */\r\nconst ColorlibConnector = withStyles({\r\n\talternativeLabel: {\r\n\t\ttop: 22,\r\n\t},\r\n\tline: {\r\n\t\theight: 3,\r\n\t\tborder: 0,\r\n\t\tbackgroundColor: \"#eaeaf0\",\r\n\t\tborderRadius: 1,\r\n\t},\r\n\r\n\tcompleted: {\r\n\t\t\"& $line\": {\r\n\t\t\tbackgroundImage:\r\n\t\t\t\t\"linear-gradient(to right, #47cc89 0%, #47cc89 100%)\",\r\n\t\t},\r\n\t},\r\n})(StepConnector);\r\n\r\nconst useColorlibStepIconStyles = makeStyles({\r\n\troot: {\r\n\t\tbackgroundColor: \"#ccc\",\r\n\t\tzIndex: 1,\r\n\t\tcolor: \"#fff\",\r\n\t\twidth: 50,\r\n\t\theight: 50,\r\n\t\tdisplay: \"flex\",\r\n\t\tborderRadius: \"50%\",\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t},\r\n\tactive: {\r\n\t\tbackgroundImage: \"linear-gradient(to right, #47cc89 0%, #47cc89 100%)\",\r\n\t\tboxShadow: \"0 4px 10px 0 rgba(0,0,0,.25)\",\r\n\t},\r\n\tcompleted: {\r\n\t\tbackgroundImage: \"linear-gradient(to right, #47cc89 0%, #47cc89 100%)\",\r\n\t},\r\n});\r\n\r\n/***\r\n * Customized step icons for each step.\r\n */\r\nconst ColorlibStepIcon = (props) => {\r\n\tconst classes = useColorlibStepIconStyles();\r\n\tconst { active, completed } = props;\r\n\r\n\tconst icons = {\r\n\t\t1: <LockOutlinedIcon />,\r\n\t\t2: <LockOutlinedIcon />,\r\n\t\t3: <LockOutlinedIcon />,\r\n\t\t4: <LockOutlinedIcon />,\r\n\t\t5: <LockOutlinedIcon />,\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={clsx(classes.root, {\r\n\t\t\t\t[classes.active]: active,\r\n\t\t\t\t[classes.completed]: completed,\r\n\t\t\t})}\r\n\t\t>\r\n\t\t\t{icons[String(props.icon)]}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tbackground: theme.background,\r\n\t},\r\n}));\r\n\r\n/***\r\n * The stepper in sign up page.\r\n */\r\nexport default ({ activeStep, getSteps }) => {\r\n\tconst classes = useStyles();\r\n\tconst steps = getSteps();\r\n\r\n\treturn (\r\n\t\t<Grow in>\r\n\t\t\t<Stepper\r\n\t\t\t\tconnector={<ColorlibConnector />}\r\n\t\t\t\talternativeLabel\r\n\t\t\t\tactiveStep={activeStep}\r\n\t\t\t\tclassName={classes.root}\r\n\t\t\t>\r\n\t\t\t\t{steps.map((label, index) => (\r\n\t\t\t\t\t<Step key={label}>\r\n\t\t\t\t\t\t<StepLabel StepIconComponent={ColorlibStepIcon}>\r\n\t\t\t\t\t\t\t{label}\r\n\t\t\t\t\t\t</StepLabel>\r\n\t\t\t\t\t</Step>\r\n\t\t\t\t))}\r\n\t\t\t</Stepper>\r\n\t\t</Grow>\r\n\t);\r\n};\r\n","import React from \"react\";\r\nimport Autocomplete from \"@material-ui/lab/autocomplete\";\r\nimport { TextField, Chip } from \"@material-ui/core\";\r\n\r\n/***\r\n * Subjects field in stepper card.\r\n */\r\nexport default ({ setChosenSubjects, allSubjects }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Autocomplete\r\n\t\t\t\tmultiple\r\n\t\t\t\tid=\"size-small-filled-multi\"\r\n\t\t\t\tsize=\"small\"\r\n\t\t\t\toptions={allSubjects}\r\n\t\t\t\tgetOptionLabel={(option) => option}\r\n\t\t\t\tdefaultValue={[allSubjects[1]]}\r\n\t\t\t\trenderTags={(value, getTagProps) =>\r\n\t\t\t\t\tvalue.map((option, index) => (\r\n\t\t\t\t\t\t<Chip\r\n\t\t\t\t\t\t\tlabel={option}\r\n\t\t\t\t\t\t\tsize=\"medium\"\r\n\t\t\t\t\t\t\t{...getTagProps({ index })}\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\tvariant=\"default\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))\r\n\t\t\t\t}\r\n\t\t\t\tonChange={(event, value) => setChosenSubjects(value)}\r\n\t\t\t\trenderInput={(params) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t{...params}\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\tlabel=\"Subjects\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React from \"react\";\r\nimport {\r\n    Grid,\r\n    Paper,\r\n    Typography,\r\n    Collapse,\r\n    Button,\r\n    Fab,\r\n    Container,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport NextIcon from \"@material-ui/icons/ArrowForward\";\r\nimport BackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport SchoolIcon from \"@material-ui/icons/School\";\r\nimport MyField from \"../Login/MyField\";\r\nimport Subjects from \"./subjects\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        background: theme.background,\r\n\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            marginTop: theme.spacing(8),\r\n        },\r\n    },\r\n    buttons: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    staff: {\r\n        minHeight: \"4rem\",\r\n        background: \"linear-gradient(to right, #f7985d 0%, #f7985d 100%)\",\r\n        borderRadius: 30,\r\n    },\r\n    student: {\r\n        minHeight: \"4rem\",\r\n        background: \"linear-gradient(to right, #f7985d 0%, #f7985d 100%)\",\r\n        borderRadius: 30,\r\n    },\r\n    largeIcon: {\r\n        width: 30,\r\n        height: 30,\r\n    },\r\n    noDecoration: {\r\n        textDecoration: \"none !important\",\r\n    },\r\n    SchoolIcon: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n}));\r\n\r\n/***\r\n * The step card in sign up page.\r\n */\r\nexport default (props) => {\r\n    const classes = useStyles();\r\n\r\n    //props for handling steps.\r\n    const {\r\n        activeStep,\r\n        handleNext,\r\n        handleBack,\r\n        text,\r\n        cardID,\r\n        handleSubmit,\r\n    } = props;\r\n\r\n    //props for handling sign up information.\r\n    const {\r\n        setEmail,\r\n        userType,\r\n        setUserType,\r\n        setFirstName,\r\n        setLasName,\r\n        setPassword,\r\n        setConformPassword,\r\n        status,\r\n        setChosenSubjects,\r\n        allSubjects,\r\n    } = props;\r\n\r\n    //Buttons for each step.\r\n    const getButton = (cardID) => {\r\n        switch (cardID) {\r\n            case 5:\r\n                return (\r\n                    <Grid container justify=\"space-between\" alignItems=\"center\">\r\n                        <Grid item xs={12}>\r\n                            <Grid container justify=\"center\">\r\n                                <Link to=\"/\" className={classes.noDecoration}>\r\n                                    <Fab\r\n                                        variant=\"extended\"\r\n                                        color=\"primary\"\r\n                                        aria-label=\"add\"\r\n                                    >\r\n                                        <SchoolIcon\r\n                                            className={classes.SchoolIcon}\r\n                                        />\r\n                                        Start your meetute life\r\n                                    </Fab>\r\n                                </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                );\r\n\r\n            case 4:\r\n                return (\r\n                    <Grid container justify=\"space-between\" alignItems=\"center\">\r\n                        <Grid item xs={3}>\r\n                            <Button\r\n                                disabled={cardID === 0}\r\n                                onClick={handleBack}\r\n                                size=\"large\"\r\n                                fullWidth\r\n                            >\r\n                                <BackIcon />\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <Button\r\n                                onClick={handleSubmit}\r\n                                size=\"large\"\r\n                                fullWidth\r\n                            >\r\n                                Submit\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                );\r\n\r\n            default:\r\n                return (\r\n                    <Grid container justify=\"space-between\" alignItems=\"center\">\r\n                        <Grid item xs={3}>\r\n                            <Button\r\n                                disabled={cardID === 0}\r\n                                onClick={handleBack}\r\n                                size=\"large\"\r\n                                fullWidth\r\n                            >\r\n                                <BackIcon />\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <Button\r\n                                onClick={handleNext}\r\n                                size=\"large\"\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                            >\r\n                                <NextIcon />\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                );\r\n        }\r\n    };\r\n\r\n    //Fields for each step.\r\n    const getField = (cardID) => {\r\n        switch (cardID) {\r\n            case 0:\r\n                return (\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={[\"student\", \"staff\"]}\r\n                        defaultValue=\"student\"\r\n                        getOptionLabel={(option) => option}\r\n                        value={userType}\r\n                        onChange={(event, newValue) => {\r\n                            setUserType(newValue);\r\n                        }}\r\n                        renderInput={(params) => {\r\n                            return (\r\n                                <TextField\r\n                                    {...params}\r\n                                    label=\"I'm a\"\r\n                                    variant=\"filled\"\r\n                                    required\r\n                                />\r\n                            );\r\n                        }}\r\n                    />\r\n                );\r\n            case 2:\r\n                return (\r\n                    <MyField\r\n                        label=\"Please Enter your Email\"\r\n                        setState={setEmail}\r\n                        required={true}\r\n                        type=\"email\"\r\n                        error={\r\n                            status === \"Error! email cannot be blank\"\r\n                                ? status\r\n                                : \"\"\r\n                        }\r\n                    />\r\n                );\r\n            case 3:\r\n                return (\r\n                    <div>\r\n                        <MyField\r\n                            label=\"Set Password\"\r\n                            setState={setPassword}\r\n                            required={true}\r\n                            type={\"password\"}\r\n                            error={\r\n                                status === \"Error! password cannot be blank\"\r\n                                    ? status\r\n                                    : \"\"\r\n                            }\r\n                        />\r\n                        <MyField\r\n                            label=\"Confirm Password\"\r\n                            setState={setConformPassword}\r\n                            required={true}\r\n                            type={\"password\"}\r\n                            error={\r\n                                status === \"Error! password cannot be blank\"\r\n                                    ? status\r\n                                    : \"\"\r\n                            }\r\n                        />\r\n                    </div>\r\n                );\r\n            case 4:\r\n                return (\r\n                    <Subjects\r\n                        allSubjects={allSubjects}\r\n                        setChosenSubjects={setChosenSubjects}\r\n                    />\r\n                );\r\n            case 1:\r\n                return (\r\n                    <div>\r\n                        <MyField\r\n                            label=\"First Name\"\r\n                            setState={setFirstName}\r\n                            required={true}\r\n                            error={\r\n                                status === \"Error! FirstName cannot be blank\"\r\n                                    ? status\r\n                                    : \"\"\r\n                            }\r\n                        />\r\n\r\n                        <MyField\r\n                            label=\"Last Name\"\r\n                            setState={setLasName}\r\n                            required={true}\r\n                            error={\r\n                                status === \"Error! lastName cannot be blank\"\r\n                                    ? status\r\n                                    : \"\"\r\n                            }\r\n                        />\r\n                    </div>\r\n                );\r\n\r\n            default:\r\n                return null;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Collapse in={activeStep === cardID} timeout={500}>\r\n                <Paper\r\n                    variant=\"elevation\"\r\n                    elevation={0}\r\n                    className={classes.paper}\r\n                >\r\n                    <Container maxWidth=\"md\">\r\n                        <Typography align=\"center\" variant=\"h4\">\r\n                            {text}\r\n                            <br />\r\n                            <br />\r\n                        </Typography>\r\n\r\n                        <Container className={classes.buttons} maxWidth=\"sm\">\r\n                            <form\r\n                                onSubmit={(event) => {\r\n                                    event.preventDefault();\r\n                                }}\r\n                            >\r\n                                {getField(cardID)}\r\n                                <br />\r\n                                {getButton(cardID)}\r\n                            </form>\r\n                        </Container>\r\n                    </Container>\r\n                </Paper>\r\n            </Collapse>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport {\r\n    Typography,\r\n    Container,\r\n    Grow,\r\n    Paper,\r\n    Collapse,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { AuthApi } from \"./../Methods\";\r\nimport Cookies from \"js-cookie\";\r\nimport withWidth, { isWidthUp } from \"@material-ui/core/withWidth\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Stepper from \"./stepper\";\r\nimport StepCard from \"./stepCard\";\r\nimport { myFetch } from \"../Methods\";\r\n\r\nfunction getSteps() {\r\n    return [\"User Type\", \"Name\", \"Email\", \"Password\", \"Subjects\"];\r\n}\r\n\r\nconst steps = [\r\n    {\r\n        text: \"Sign up as...\",\r\n        cardID: 0,\r\n    },\r\n    {\r\n        text: \"What's your name?\",\r\n        cardID: 1,\r\n    },\r\n\r\n    {\r\n        text: \"Please enter your email:\",\r\n        cardID: 2,\r\n    },\r\n\r\n    {\r\n        text: \"Set your password:\",\r\n        cardID: 3,\r\n    },\r\n    {\r\n        text: \"Subjects you would like to pick?\",\r\n        cardID: 4,\r\n    },\r\n    {\r\n        text: \"We are all set! enjoy meeting tutors!\",\r\n        cardID: 5,\r\n    },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: \"100%\",\r\n        background: theme.background,\r\n    },\r\n    stepper: {\r\n        background: theme.background,\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    actionsContainer: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    resetContainer: {\r\n        padding: theme.spacing(3),\r\n    },\r\n}));\r\n\r\n/***\r\n * Sign up form\r\n */\r\nexport default withWidth()(({ width }) => {\r\n    const classes = useStyles();\r\n\r\n    //Sign up information.\r\n    const [email, setEmail] = useState(\"\");\r\n    const [userType, setUserType] = useState(\"student\");\r\n    const [firstName, setFirstName] = useState(\"\");\r\n    const [lastName, setLasName] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmPassword, setConformPassword] = useState(\"\");\r\n    const [chosenSubjects, setChosenSubjects] = useState([\"INFO30005\"]);\r\n\r\n    //Feedback from backend.\r\n    const [status, setStatus] = useState(\"\");\r\n    //Steps states\r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n\r\n    //loading data.\r\n    const [loading, setLoading] = useState(true);\r\n    const [allSubjects, setAllSubjects] = useState([]);\r\n\r\n    const { setAuth } = useContext(AuthApi);\r\n\r\n    //Loading subjects from database.\r\n    useEffect(() => {\r\n        const fetchSubjects = async () => {\r\n            const { subjectList } = await myFetch(\r\n                \"/api/shared/users/allSubjects\",\r\n                \"GET\"\r\n            );\r\n            setAllSubjects(subjectList);\r\n            setLoading(false);\r\n        };\r\n        fetchSubjects();\r\n    }, [status]);\r\n\r\n    const handleNext = () => {\r\n        switch (activeStep) {\r\n            case 1:\r\n                if (firstName === \"\" || lastName === \"\") {\r\n                    return;\r\n                }\r\n                break;\r\n            case 2:\r\n                if (email === \"\" || !email.includes(\"@\")) {\r\n                    return;\r\n                }\r\n                break;\r\n            case 3:\r\n                if (password === \"\" || confirmPassword === \"\") {\r\n                    return;\r\n                }\r\n                if (password !== confirmPassword) {\r\n                    setStatus(\"Sorry password does not match\");\r\n                    return;\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    };\r\n\r\n    //Handling feedback from backend.\r\n    const HandleStatus = () => {\r\n        if (status === \"success\") {\r\n            return (\r\n                <Alert variant=\"filled\" elevation={6} severity=\"success\">\r\n                    You are good to go!\r\n                </Alert>\r\n            );\r\n        }\r\n        return (\r\n            <Alert\r\n                severity=\"error\"\r\n                variant=\"filled\"\r\n                elevation={6}\r\n                onClose={() => {\r\n                    setStatus(\"\");\r\n                }}\r\n            >\r\n                {status}\r\n            </Alert>\r\n        );\r\n    };\r\n\r\n    //Fetch sign up API.\r\n    const signUp = async (e) => {\r\n        setStatus(\"\");\r\n        const msg = await myFetch(\"/api/shared/users/signup\", \"POST\", {\r\n            email: email,\r\n            password: password,\r\n            firstName: firstName,\r\n            lastName: lastName,\r\n            subjects: chosenSubjects,\r\n            userType: userType,\r\n        });\r\n\r\n        if (msg.success) {\r\n            setStatus(\"success\");\r\n            handleNext();\r\n            Cookies.set(\"meetute\", msg.token);\r\n            setAuth(true);\r\n        } else {\r\n            setStatus(msg.error);\r\n            if (msg.error.includes(\"ype\")) {\r\n                setActiveStep(0);\r\n            }\r\n            if (msg.error.includes(\"Name\")) {\r\n                setActiveStep(1);\r\n            }\r\n            if (msg.error.includes(\"email\")) {\r\n                setActiveStep(2);\r\n            }\r\n            if (msg.error.includes(\"password\")) {\r\n                setActiveStep(3);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Typography variant=\"h1\">\r\n                <br />\r\n            </Typography>\r\n            {isWidthUp(\"sm\", width) ? (\r\n                <Stepper activeStep={activeStep} getSteps={getSteps} />\r\n            ) : null}\r\n\r\n            <Container maxWidth=\"md\">\r\n                <Grow in={status !== \"\"}>\r\n                    <Paper elevation={0}>\r\n                        <HandleStatus />\r\n                    </Paper>\r\n                </Grow>\r\n                <br />\r\n            </Container>\r\n            <Collapse in={!loading} timeout={1000}>\r\n                {loading ? null : (\r\n                    <div>\r\n                        {steps.map(({ title, text, cardID }) => (\r\n                            <StepCard\r\n                                cardID={cardID}\r\n                                title={title}\r\n                                text={text}\r\n                                handleBack={handleBack}\r\n                                handleNext={handleNext}\r\n                                activeStep={activeStep}\r\n                                userType={userType}\r\n                                setUserType={setUserType}\r\n                                setEmail={setEmail}\r\n                                setFirstName={setFirstName}\r\n                                setLasName={setLasName}\r\n                                setPassword={setPassword}\r\n                                setConformPassword={setConformPassword}\r\n                                status={status}\r\n                                setChosenSubjects={setChosenSubjects}\r\n                                handleSubmit={signUp}\r\n                                key={cardID}\r\n                                allSubjects={allSubjects}\r\n                            ></StepCard>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </Collapse>\r\n            <Typography variant=\"h1\">\r\n                <br />\r\n            </Typography>\r\n        </div>\r\n    );\r\n});\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core\";\r\n\r\nconst styles = {\r\n\twaves: {\r\n\t\tposition: \"relative\",\r\n\t\twidth: \"100%\",\r\n\t\tmarginBottom: -7,\r\n\t\theight: \"7vw\",\r\n\t\tminHeight: \"7vw\",\r\n\t},\r\n\t\"@keyframes moveForever\": {\r\n\t\tfrom: { transform: \"translate3d(-90px, 0, 0)\" },\r\n\t\tto: { transform: \"translate3d(85px, 0, 0)\" },\r\n\t},\r\n\tparallax: {\r\n\t\t\"& > use\": {\r\n\t\t\tanimation:\r\n\t\t\t\t\"$moveForever 4s cubic-bezier(0.62, 0.5, 0.38, 0.5) infinite\",\r\n\t\t\tanimationDelay: (props) => `-${props.animationNegativeDelay}s`,\r\n\t\t},\r\n\t},\r\n};\r\n\r\n/**\r\n *  https://codepen.io/csspoints/pen/WNeOEqd\r\n */\r\nfunction WaveBorder(props) {\r\n\tconst id = String(Math.random());\r\n\tconst {\r\n\t\tclassName,\r\n\t\tlowerColor,\r\n\t\tupperColor,\r\n\t\tclasses,\r\n\t\tanimationNegativeDelay,\r\n\t\t...rest\r\n\t} = props;\r\n\treturn (\r\n\t\t<div className={className} style={{ background: upperColor }} {...rest}>\r\n\t\t\t<svg\r\n\t\t\t\tclassName={classes.waves}\r\n\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\txlink=\"http://www.w3.org/1999/xlink\"\r\n\t\t\t\tviewBox=\"0 24 150 28\"\r\n\t\t\t\tpreserveAspectRatio=\"none\"\r\n\t\t\t\tshapeRendering=\"auto\"\r\n\t\t\t>\r\n\t\t\t\t<defs>\r\n\t\t\t\t\t<path\r\n\t\t\t\t\t\tid={id}\r\n\t\t\t\t\t\td=\"M-160 44c30 0 58-18 88-18s 58 18 88 18 58-18 88-18 58 18 88 18 v44h-352z\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</defs>\r\n\t\t\t\t<g className={classes.parallax}>\r\n\t\t\t\t\t<use href={`#${id}`} x=\"48\" y=\"0\" fill={lowerColor} />\r\n\t\t\t\t</g>\r\n\t\t\t</svg>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nWaveBorder.propTypes = {\r\n\tlowerColor: PropTypes.string.isRequired,\r\n\tupperColor: PropTypes.string.isRequired,\r\n\tclasses: PropTypes.object.isRequired,\r\n\tanimationNegativeDelay: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(WaveBorder);\r\n","import React, { useState } from \"react\";\r\n\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nimport AppBar from \"../Navigation/AppBar\";\r\n\r\nimport Login from \"../Login/login\";\r\n\r\nimport SignupForm from \"./signupForm\";\r\n\r\nimport WaveBorder from \"../Home/waveBorder\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    c1: {\r\n        background: theme.background,\r\n        maxWidth: \"100WH\",\r\n    },\r\n    c2: {\r\n        background: theme.palette.secondary.light,\r\n        height: \"80VH\",\r\n    },\r\n}));\r\n\r\n/***\r\n * The sign up page for student.\r\n */\r\nexport default () => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [openLogin, setOpenLogin] = useState(false);\r\n\r\n    return (\r\n        <div>\r\n            <AppBar setOpenLogin={setOpenLogin} />\r\n            <Login open={openLogin} setOpenLogin={setOpenLogin} />\r\n\r\n            <div className={classes.c1}>\r\n                <SignupForm />\r\n            </div>\r\n            <div className={classes.c2}>\r\n                <WaveBorder\r\n                    upperColor={theme.background}\r\n                    lowerColor={theme.palette.secondary.light}\r\n                    animationNegativeDelay={100}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n\tGrid,\r\n\tContainer,\r\n\tHidden,\r\n\tTypography,\r\n\tGrow,\r\n\tButton,\r\n} from \"@material-ui/core\";\r\nimport withWidth, { isWidthUp } from \"@material-ui/core/withWidth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport headerImage from \"./img/chat.png\";\r\nimport ChatBubbleOutlineIcon from \"@material-ui/icons/VpnKey\";\r\nimport FaceIcon from \"@material-ui/icons/Face\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\timage: {\r\n\t\tmaxHeight: \"70%\",\r\n\t\tmaxWidth: \"100%\",\r\n\t},\r\n\r\n\troot: {\r\n\t\tminHeight: \"70%\",\r\n\t\tbackground: theme.background,\r\n\t},\r\n\timages: {\r\n\t\tminHeight: \"70%\",\r\n\t},\r\n\tbackground: {\r\n\t\tbackground: theme.background,\r\n\t},\r\n\ttitle: {\r\n\t\tbackground: theme.background,\r\n\t},\r\n\tbody: {\r\n\t\tcolor: \"#595e53\",\r\n\t},\r\n\tabout: {\r\n\t\tminHeight: \"4rem\",\r\n\t\tbackground:\r\n\t\t\t\"linear-gradient(45deg, #ff9a9e 0%, #fad0c4 99%, #fad0c4 100%)\",\r\n\t\tborderRadius: 30,\r\n\t},\r\n\tgetStarted: {\r\n\t\tminHeight: \"4rem\",\r\n\t\tbackground: \"linear-gradient(to right, #92fe9d 0%, #00c9ff 100%)\",\r\n\t\tborderRadius: 30,\r\n\t},\r\n\tlargeIcon: {\r\n\t\twidth: 30,\r\n\t\theight: 30,\r\n\t},\r\n\tnoDecoration: {\r\n\t\ttextDecoration: \"none !important\",\r\n\t\tfontSize: \"\",\r\n\t\tfontWeight: 0,\r\n\t\tminWidth: \"100%\",\r\n\t},\r\n}));\r\n\r\n/***\r\n * The header section in home page.\r\n */\r\nexport default withWidth()(({ setOpenLogin, width }) => {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<Container fixed>\r\n\t\t\t\t<Grid\r\n\t\t\t\t\tcontainer\r\n\t\t\t\t\tjustify=\"center\"\r\n\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\tdirection=\"row\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<Grid item xs={12} md={6}>\r\n\t\t\t\t\t\t<Grow in timeout=\"auto\">\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\t\t\tdirection=\"column\"\r\n\t\t\t\t\t\t\t\tjustify=\"center\"\r\n\t\t\t\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Typography variant=\"h2\">\r\n\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<Grid item xs={8}>\r\n\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\tvariant={\r\n\t\t\t\t\t\t\t\t\t\t\tisWidthUp(\"sm\", width) ? \"h3\" : \"h4\"\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\talign=\"center\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tAsk your questions today, for an easier\r\n\t\t\t\t\t\t\t\t\t\tlife tomorrow.\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t\t<Grid item xs={8}>\r\n\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.body}\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"h5\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\tMeeTute wants to make consultation and\r\n\t\t\t\t\t\t\t\t\t\tsupport services more accessible for\r\n\t\t\t\t\t\t\t\t\t\tstudents and more manageable for\r\n\t\t\t\t\t\t\t\t\t\tteaching staff.\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\t\t\t\t\tdirection=\"row\"\r\n\t\t\t\t\t\t\t\t\t\tjustify=\"center\"\r\n\t\t\t\t\t\t\t\t\t\tspacing={3}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid container justify=\"center\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tto={\"/signup\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclasses.noDecoration\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"large\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclasses.getStarted\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstartIcon={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisWidthUp(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"sm\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ChatBubbleOutlineIcon\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclasses.largeIcon\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : null\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{isWidthUp(\"sm\", width)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? \"get started\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"sign up\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid container justify=\"center\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"large\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.about}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstartIcon={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tisWidthUp(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"sm\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t) ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FaceIcon\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclasses.largeIcon\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : null\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetOpenLogin(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tLogin\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grow>\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<Grid item xs={12} md={6}>\r\n\t\t\t\t\t\t<Typography variant=\"h1\">\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Grow in>\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\t\t\tjustify=\"center\"\r\n\t\t\t\t\t\t\t\talignItems=\"flex-end\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\tsrc={headerImage}\r\n\t\t\t\t\t\t\t\t\tclassName={classes.image}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grow>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<Typography variant=\"h5\">\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Container>\r\n\t\t</div>\r\n\t);\r\n});\r\n","import React from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport {\r\n    Grid,\r\n    CardContent,\r\n    Typography,\r\n    Button,\r\n    Paper,\r\n} from \"@material-ui/core\";\r\nimport withWidth, { isWidthUp } from \"@material-ui/core/withWidth\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    cover: {\r\n        maxWidth: \"100%\",\r\n    },\r\n    card: {\r\n        marginTop: theme.spacing(3),\r\n        backgroundColor: theme.palette.secondary.light,\r\n    },\r\n    text: {\r\n        color: \"#6984aa\",\r\n        fontWeight: 500,\r\n    },\r\n    headline: {\r\n        color: \"#33456b\",\r\n        fontWeight: 900,\r\n    },\r\n}));\r\n\r\n/***\r\n * Feature card in home page.\r\n */\r\nexport default withWidth()((props) => {\r\n    const theme = useTheme();\r\n    const {\r\n        setActiveStep,\r\n        activeStep,\r\n        headline,\r\n        text,\r\n        maxSteps,\r\n        image,\r\n        width,\r\n    } = props;\r\n\r\n    const handleNext = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    };\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <Grid container justify=\"center\" alignItems=\"center\">\r\n            <Grid item xs={1}>\r\n                <Grid container justify=\"center\">\r\n                    <Button\r\n                        size=\"small\"\r\n                        onClick={handleBack}\r\n                        disabled={activeStep === 0}\r\n                        className={classes.button}\r\n                    >\r\n                        {theme.direction === \"rtl\" ? (\r\n                            <KeyboardArrowRight />\r\n                        ) : (\r\n                            <KeyboardArrowLeft />\r\n                        )}\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={8}>\r\n                <Paper elevation={0} className={classes.card}>\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"space-around\"\r\n                        alignItems=\"center\"\r\n                    >\r\n                        <Grid item xs={isWidthUp(\"sm\", width) ? 4 : 12}>\r\n                            <Grid\r\n                                container\r\n                                direction=\"column\"\r\n                                justify=\"center\"\r\n                                alignItems=\"center\"\r\n                            >\r\n                                <img\r\n                                    className={classes.cover}\r\n                                    src={image}\r\n                                    alt=\"Live from space album cover\"\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={isWidthUp(\"sm\", width) ? 6 : 12}>\r\n                            <CardContent className={classes.content}>\r\n                                <Typography\r\n                                    className={classes.headline}\r\n                                    variant={\r\n                                        isWidthUp(\"sm\", width) ? \"h4\" : \"h5\"\r\n                                    }\r\n                                >\r\n                                    {headline}\r\n                                </Typography>\r\n                                <Typography\r\n                                    className={classes.text}\r\n                                    variant=\"h5\"\r\n                                >\r\n                                    <br />\r\n                                    {text}\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </Grid>\r\n\r\n            <Grid item xs={1}>\r\n                <Grid container justify=\"center\">\r\n                    <Button\r\n                        size=\"small\"\r\n                        onClick={handleNext}\r\n                        disabled={activeStep === maxSteps - 1}\r\n                        className={classes.button}\r\n                    >\r\n                        {theme.direction === \"rtl\" ? (\r\n                            <KeyboardArrowLeft />\r\n                        ) : (\r\n                            <KeyboardArrowRight />\r\n                        )}\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n});\r\n","import React from \"react\";\r\nimport { makeStyles, withStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport {\r\n    Stepper,\r\n    Step,\r\n    StepButton,\r\n    StepLabel,\r\n    StepConnector,\r\n} from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport withWidth, { isWidthUp } from \"@material-ui/core/withWidth\";\r\n\r\nimport TodayIcon from \"@material-ui/icons/Today\";\r\nimport AlarmIcon from \"@material-ui/icons/Alarm\";\r\nimport GroupAddIcon from \"@material-ui/icons/GroupAdd\";\r\nimport TimelineIcon from \"@material-ui/icons/Timeline\";\r\n\r\nconst ColorlibConnector = withStyles({\r\n    alternativeLabel: {\r\n        top: 22,\r\n    },\r\n    line: {\r\n        height: 3,\r\n        border: 0,\r\n        backgroundColor: \"#eaeaf0\",\r\n        borderRadius: 1,\r\n    },\r\n})(StepConnector);\r\n\r\nconst useColorlibStepIconStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: \"#ccc\",\r\n        zIndex: 1,\r\n        color: \"#fff\",\r\n        width: 50,\r\n        height: 50,\r\n\r\n        display: \"flex\",\r\n        borderRadius: \"50%\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n    active: {\r\n        backgroundImage: \"linear-gradient(to top, #0a6aab 0%, #0a6aab 100%)\",\r\n        boxShadow: \"0 4px 10px 0 rgba(0,0,0,.25)\",\r\n    },\r\n    icon: {\r\n        width: 10,\r\n        height: 10,\r\n    },\r\n}));\r\n\r\nfunction ColorlibStepIcon(props) {\r\n    const classes = useColorlibStepIconStyles();\r\n    const { active, completed } = props;\r\n\r\n    const icons = {\r\n        1: <TodayIcon />,\r\n        2: <AlarmIcon />,\r\n        3: <GroupAddIcon />,\r\n        4: <TimelineIcon />,\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className={clsx(classes.root, {\r\n                [classes.active]: active,\r\n                [classes.completed]: completed,\r\n            })}\r\n        >\r\n            {icons[String(props.icon)]}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: theme.palette.secondary.light,\r\n        width: \"60%\",\r\n        margin: \"auto\",\r\n    },\r\n}));\r\n\r\n/***\r\n * The stepper in home page (feature section).\r\n */\r\nexport default ({ activeStep, setActiveStep, features, width }) => {\r\n    const classes = useStyles();\r\n\r\n    const handleStep = (step) => () => {\r\n        setActiveStep(step);\r\n    };\r\n\r\n    return (\r\n        <Stepper\r\n            alternativeLabel\r\n            activeStep={activeStep}\r\n            connector={<ColorlibConnector />}\r\n            className={classes.root}\r\n            nonLinear\r\n        >\r\n            {features.map(({ headline }, index) => (\r\n                <Step key={headline}>\r\n                    <StepButton\r\n                        className={classes.button}\r\n                        onClick={handleStep(index)}\r\n                    >\r\n                        <StepLabel StepIconComponent={ColorlibStepIcon}>\r\n                            {headline}\r\n                        </StepLabel>\r\n                    </StepButton>\r\n                </Step>\r\n            ))}\r\n        </Stepper>\r\n    );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport withWidth, { isWidthUp } from \"@material-ui/core/withWidth\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport { autoPlay } from \"react-swipeable-views-utils\";\r\nimport FeatureCard from \"./featureCard\";\r\nimport Stepper from \"./stepper\";\r\n\r\nimport f1 from \"./img/f1.png\";\r\nimport f2 from \"./img/f2.png\";\r\nimport f3 from \"./img/f3.png\";\r\nimport f4 from \"./img/f4.png\";\r\n\r\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\r\n\r\nconst features = [\r\n    {\r\n        headline: \"Consultation Booking System\",\r\n        text:\r\n            \"MeeTute makes it simple for students and teaching staff to schedule or book consultation appointments.\",\r\n        image: f1,\r\n    },\r\n    {\r\n        headline: \"Scheduling Assistant\",\r\n        text:\r\n            \"Cannot make the consultation time? Don’t worry, use our scheduling assistant to book one-on-one sessions.\",\r\n\r\n        image: f2,\r\n    },\r\n    {\r\n        headline: \"Study Group Helper\",\r\n        text:\r\n            \"Connect with your peers in the same subject and develop better learning experiences.\",\r\n\r\n        image: f3,\r\n    },\r\n    {\r\n        headline: \"User Analytics Tool\",\r\n        text:\r\n            \"MeeTute delivers beautiful visualisations for past consultation registration statistics, making it easier for teaching staff for future planning\",\r\n\r\n        image: f4,\r\n    },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: theme.palette.secondary.light,\r\n    },\r\n\r\n    headline: {\r\n        color: \"#05578e\",\r\n    },\r\n}));\r\n\r\n/***\r\n * The feature section in home page.\r\n */\r\nexport default withWidth()(({ width }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const maxSteps = features.length;\r\n\r\n    const handleStepChange = (step) => {\r\n        setActiveStep(step);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Typography\r\n                className={classes.headline}\r\n                variant={isWidthUp(\"sm\", width) ? \"h3\" : \"h4\"}\r\n                align=\"center\"\r\n            >\r\n                <br />\r\n                See how MeeTute can help you...\r\n                <br />\r\n                <br />\r\n            </Typography>\r\n\r\n            {isWidthUp(\"sm\", width) ? (\r\n                <Stepper\r\n                    activeStep={activeStep}\r\n                    setActiveStep={setActiveStep}\r\n                    features={features}\r\n                />\r\n            ) : null}\r\n\r\n            <AutoPlaySwipeableViews\r\n                axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\r\n                index={activeStep}\r\n                onChangeIndex={handleStepChange}\r\n                enableMouseEvents\r\n                className={classes.swipe}\r\n                interval={9000}\r\n            >\r\n                {features.map((element) => (\r\n                    <FeatureCard\r\n                        key={element.headline}\r\n                        headline={element.headline}\r\n                        text={element.text}\r\n                        activeStep={activeStep}\r\n                        setActiveStep={setActiveStep}\r\n                        maxSteps={maxSteps}\r\n                        image={element.image}\r\n                    />\r\n                ))}\r\n            </AutoPlaySwipeableViews>\r\n        </div>\r\n    );\r\n});\r\n","import React, { useContext } from \"react\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport { AuthApi } from \"../Methods\";\r\nimport AppBar from \"../Navigation/AppBar\";\r\nimport Header from \"./header\";\r\nimport WaveBorder from \"./waveBorder\";\r\nimport Features from \"./features\";\r\nimport Login from \"../Login/login\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tc1: {\r\n\t\tbackgroundColor: theme.palette.secondary.light,\r\n\t},\r\n\tc2: {\r\n\t\tbackgroundColor: theme.palette.primary.light,\r\n\t},\r\n}));\r\n\r\n/***\r\n * Home page component.\r\n */\r\nexport default () => {\r\n\tconst classes = useStyles();\r\n\tconst theme = useTheme();\r\n\tconst { setOpenLogin } = useContext(AuthApi);\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<AppBar setOpenLogin={setOpenLogin} />\r\n\t\t\t<Login />\r\n\t\t\t<Header setOpenLogin={setOpenLogin} />\r\n\t\t\t<WaveBorder\r\n\t\t\t\tupperColor={theme.background}\r\n\t\t\t\tlowerColor={theme.palette.secondary.light}\r\n\t\t\t\tanimationNegativeDelay={100}\r\n\t\t\t/>\r\n\t\t\t<Features />\r\n\t\t\t<WaveBorder\r\n\t\t\t\tupperColor={theme.palette.secondary.light}\r\n\t\t\t\tlowerColor={theme.palette.primary.light}\r\n\t\t\t\tanimationNegativeDelay={100}\r\n\t\t\t/>\r\n\t\t\t<div className={classes.c2}>\r\n\t\t\t\t<Typography variant=\"subtitle1\" align=\"center\">\r\n\t\t\t\t\tCopyright @ MeeTute 2020\r\n\t\t\t\t</Typography>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React from \"react\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\nimport { withStyles, lighten, makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst BorderLinearProgress = withStyles((theme) => ({\r\n    root: {\r\n        height: 5,\r\n        backgroundColor: lighten(\"#0a6aab\", 0.5),\r\n    },\r\n    bar: {\r\n        borderRadius: 100,\r\n        backgroundColor: \"#0a6aab\",\r\n    },\r\n}))(LinearProgress);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    margin: {\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            margin: theme.spacing(10),\r\n        },\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            margin: theme.spacing(8),\r\n        },\r\n    },\r\n}));\r\n\r\n/***\r\n * Loading bar while loading.\r\n */\r\nexport default (props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <BorderLinearProgress className={classes.margin} />\r\n        </div>\r\n    );\r\n};\r\n","import React, { useContext, useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport withWidth, { isWidthUp } from \"@material-ui/core/withWidth\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nimport TodayIcon from \"@material-ui/icons/Today\";\r\nimport AlarmIcon from \"@material-ui/icons/Alarm\";\r\nimport GroupAddIcon from \"@material-ui/icons/GroupAdd\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport PowerSettingsNewIcon from \"@material-ui/icons/PowerSettingsNew\";\r\nimport TimelineIcon from \"@material-ui/icons/Timeline\";\r\nimport { Grow, Snackbar } from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\n\r\nimport AppBar from \"./AppBar\";\r\nimport { UserContext, AuthApi } from \"../Methods\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nimport Loading from \"./Loading\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n    },\r\n    hide: {\r\n        display: \"none\",\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: \"nowrap\",\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create(\"width\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create(\"width\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: \"hidden\",\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            width: theme.spacing(9) + 1,\r\n        },\r\n    },\r\n    toolbar: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-end\",\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            padding: theme.spacing(10),\r\n        },\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            padding: theme.spacing(2),\r\n            marginTop: \"18%\",\r\n        },\r\n        [theme.breakpoints.between(\"sm\", \"md\")]: {\r\n            padding: theme.spacing(2),\r\n            marginTop: \"8%\",\r\n        },\r\n        maxWidth: \"100%\",\r\n    },\r\n    bottom: {\r\n        position: \"fixed\",\r\n        bottom: 0,\r\n        boxShadow: 20,\r\n    },\r\n    icon: {\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n}));\r\n\r\n/***\r\n * The layout of the application once login in.\r\n */\r\nexport default withWidth()(({ content, type, width }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const largeScreen = isWidthUp(\"lg\", width);\r\n\r\n    //Navigation Drawer...\r\n    const history = useHistory();\r\n    const {\r\n        selectedRoute,\r\n        alert,\r\n        closeAlert,\r\n        setLoadingRoute,\r\n        setUser,\r\n    } = useContext(UserContext);\r\n    const { loadingRoute } = useContext(UserContext);\r\n    const [open, setOpen] = useState(largeScreen);\r\n\r\n    const handleRouting = (newRoute) => {\r\n        if (selectedRoute !== newRoute) {\r\n            setLoadingRoute(true);\r\n            history.push(\"/\" + newRoute);\r\n        }\r\n    };\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    //Log out...\r\n    const { setAuth } = useContext(AuthApi);\r\n    const logOut = () => {\r\n        setAuth(false);\r\n        setUser({});\r\n        Cookies.remove(\"meetute\");\r\n    };\r\n\r\n    const getDrawlerOnClose = () => {\r\n        if (largeScreen) return;\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                openDrawer={largeScreen ? open : false}\r\n                handleDrawerOpen={handleDrawerOpen}\r\n                handleDrawerClose={handleDrawerClose}\r\n                logOut={logOut}\r\n            />\r\n\r\n            <Snackbar\r\n                open={alert.status !== \"\"}\r\n                autoHideDuration={3000}\r\n                onClose={closeAlert}\r\n            >\r\n                {alert.status !== \"\" ? (\r\n                    <Alert\r\n                        elevation={6}\r\n                        variant=\"filled\"\r\n                        severity={alert.status}\r\n                        onClose={closeAlert}\r\n                    >\r\n                        {alert.message}\r\n                    </Alert>\r\n                ) : null}\r\n            </Snackbar>\r\n\r\n            <Drawer\r\n                variant={largeScreen ? \"permanent\" : \"temporary\"}\r\n                className={\r\n                    largeScreen\r\n                        ? clsx(classes.drawer, {\r\n                              [classes.drawerOpen]: open,\r\n                              [classes.drawerClose]: !open,\r\n                          })\r\n                        : null\r\n                }\r\n                classes={\r\n                    largeScreen\r\n                        ? {\r\n                              paper: clsx({\r\n                                  [classes.drawerOpen]: open,\r\n                                  [classes.drawerClose]: !open,\r\n                              }),\r\n                          }\r\n                        : null\r\n                }\r\n                open={largeScreen ? false : open}\r\n                onClose={getDrawlerOnClose}\r\n            >\r\n                <div className={classes.toolbar}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === \"rtl\" ? (\r\n                            <ChevronRightIcon />\r\n                        ) : (\r\n                            <ChevronLeftIcon />\r\n                        )}\r\n                    </IconButton>\r\n                </div>\r\n                {loadingRoute ? null : (\r\n                    <div>\r\n                        <List>\r\n                            <Grow in={!loadingRoute} timeout={500}>\r\n                                <ListItem\r\n                                    button\r\n                                    onClick={() =>\r\n                                        handleRouting(\"consultations\")\r\n                                    }\r\n                                    selected={selectedRoute === \"consultations\"}\r\n                                >\r\n                                    <ListItemIcon className={classes.icon}>\r\n                                        <TodayIcon />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary=\"Consultations\" />\r\n                                </ListItem>\r\n                            </Grow>\r\n                            <Grow in={!loadingRoute} timeout={700}>\r\n                                <ListItem\r\n                                    button\r\n                                    onClick={() =>\r\n                                        handleRouting(\"appointments\")\r\n                                    }\r\n                                    selected={selectedRoute === \"appointments\"}\r\n                                >\r\n                                    <ListItemIcon className={classes.icon}>\r\n                                        <AlarmIcon />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary=\"1v1 Appointments\" />\r\n                                </ListItem>\r\n                            </Grow>\r\n\r\n                            {type === \"student\" ? (\r\n                                <Grow in={!loadingRoute} timeout={900}>\r\n                                    <ListItem\r\n                                        button\r\n                                        onClick={() => handleRouting(\"hubs\")}\r\n                                        selected={selectedRoute === \"hubs\"}\r\n                                    >\r\n                                        <ListItemIcon className={classes.icon}>\r\n                                            <GroupAddIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary=\"Study Hubs\" />\r\n                                    </ListItem>\r\n                                </Grow>\r\n                            ) : (\r\n                                <Grow in={!loadingRoute} timeout={900}>\r\n                                    <ListItem\r\n                                        button\r\n                                        onClick={() =>\r\n                                            handleRouting(\"analytic\")\r\n                                        }\r\n                                        selected={selectedRoute === \"analytic\"}\r\n                                    >\r\n                                        <ListItemIcon className={classes.icon}>\r\n                                            <TimelineIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary=\"Analytic\" />\r\n                                    </ListItem>\r\n                                </Grow>\r\n                            )}\r\n                        </List>\r\n\r\n                        <Divider />\r\n\r\n                        <List>\r\n                            <Grow in={!loadingRoute} timeout={1100}>\r\n                                <ListItem\r\n                                    button\r\n                                    onClick={() => handleRouting(\"settings\")}\r\n                                    selected={selectedRoute === \"settings\"}\r\n                                >\r\n                                    <ListItemIcon className={classes.icon}>\r\n                                        <SettingsIcon />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary=\"Settings\" />\r\n                                </ListItem>\r\n                            </Grow>\r\n                            <Grow in={!loadingRoute} timeout={1300}>\r\n                                <ListItem button onClick={logOut}>\r\n                                    <ListItemIcon className={classes.icon}>\r\n                                        <PowerSettingsNewIcon />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary=\"Log out\" />\r\n                                </ListItem>\r\n                            </Grow>\r\n                        </List>\r\n                    </div>\r\n                )}\r\n            </Drawer>\r\n\r\n            {loadingRoute ? (\r\n                <Loading />\r\n            ) : (\r\n                <main className={classes.content}>\r\n                    {!largeScreen ? (\r\n                        <div>\r\n                            <Alert severity=\"warning\">\r\n                                For better user experience, please use a larger\r\n                                screen\r\n                            </Alert>\r\n                            <br />\r\n                        </div>\r\n                    ) : null}\r\n                    {content}\r\n                </main>\r\n            )}\r\n        </div>\r\n    );\r\n});\r\n","import React from \"react\";\r\nimport { ViewState } from \"@devexpress/dx-react-scheduler\";\r\nimport {\r\n    Scheduler,\r\n    Appointments,\r\n    MonthView,\r\n    Toolbar,\r\n    DateNavigator,\r\n    ViewSwitcher,\r\n    TodayButton,\r\n    Resources,\r\n    AppointmentTooltip,\r\n    WeekView,\r\n} from \"@devexpress/dx-react-scheduler-material-ui\";\r\n\r\nimport { Paper, LinearProgress } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport withWidth from \"@material-ui/core/withWidth\";\r\nimport {\r\n    lime,\r\n    red,\r\n    green,\r\n    cyan,\r\n    blue,\r\n    amber,\r\n    teal,\r\n} from \"@material-ui/core/colors\";\r\n\r\n/***\r\n * timetable loading bar.\r\n */\r\nconst ToolbarWithLoading = withStyles(\r\n    {\r\n        toolbarRoot: {\r\n            position: \"relative\",\r\n        },\r\n        progress: {\r\n            position: \"absolute\",\r\n            width: \"100%\",\r\n            bottom: 0,\r\n            left: 0,\r\n        },\r\n    },\r\n    { name: \"Toolbar\" }\r\n)(({ children, classes, ...restProps }) => (\r\n    <div className={classes.toolbarRoot}>\r\n        <Toolbar.Root {...restProps}>{children}</Toolbar.Root>\r\n        <LinearProgress className={classes.progress} />\r\n    </div>\r\n));\r\n\r\n/***\r\n * For changing timetable colors\r\n */\r\nconst resources = [\r\n    {\r\n        fieldName: \"booking\",\r\n        title: \"booking\",\r\n        instances: [\r\n            { id: \"BOOKED\", text: \"Already booked\", color: green[400] },\r\n            { id: \"AVAILABLE\", text: \"Available to Book\", color: blue[400] },\r\n            { id: \"FULL\", text: \"It has been fully booked\", color: red[200] },\r\n        ],\r\n    },\r\n    {\r\n        fieldName: \"status\",\r\n        title: \"status\",\r\n        instances: [\r\n            { id: \"PENDING\", text: \"PENDING\", color: amber[400] },\r\n            { id: \"APPROVED\", text: \"APPROVED\", color: green[400] },\r\n            { id: \"DECLINED\", text: \"DECLINED\", color: red[400] },\r\n        ],\r\n    },\r\n];\r\n\r\n/***\r\n * Loading colors for each subject in this account.\r\n */\r\nconst loadSubjectResources = (subjects) => {\r\n    if (resources.filter((each) => each.fieldName === \"title\").length > 0)\r\n        return;\r\n    const instances = [];\r\n    subjects.map((subjectCode) => {\r\n        instances.push({ id: subjectCode, text: subjectCode });\r\n    });\r\n\r\n    resources.push({\r\n        fieldName: \"title\",\r\n        title: \"title\",\r\n        instances: instances,\r\n    });\r\n};\r\n\r\n/***\r\n * Customized Timetable component.\r\n */\r\nexport default withWidth()(\r\n    ({\r\n        data,\r\n        currentDate,\r\n        setCurrentDate,\r\n        header,\r\n        content,\r\n        loading,\r\n        mainResourceName,\r\n        subjects,\r\n        halfScreen,\r\n    }) => {\r\n        //Loading colors for each subject in this account.\r\n        if (subjects) loadSubjectResources(subjects);\r\n\r\n        return (\r\n            <Paper>\r\n                <Scheduler data={data} height={halfScreen ? 350 : 600}>\r\n                    <ViewState\r\n                        currentDate={currentDate}\r\n                        onCurrentDateChange={setCurrentDate}\r\n                    />\r\n\r\n                    <WeekView\r\n                        excludedDays={[0, 6]}\r\n                        startDayHour={8}\r\n                        endDayHour={24}\r\n                        cellDuration={60}\r\n                    />\r\n\r\n                    <MonthView />\r\n\r\n                    <Appointments />\r\n\r\n                    <AppointmentTooltip\r\n                        headerComponent={header}\r\n                        contentComponent={content}\r\n                    />\r\n                    <Resources\r\n                        mainResourceName={mainResourceName}\r\n                        data={resources}\r\n                        palette={[blue, cyan, teal, lime, amber]}\r\n                    />\r\n                    <Toolbar\r\n                        {...(loading\r\n                            ? { rootComponent: ToolbarWithLoading }\r\n                            : null)}\r\n                    />\r\n                    <DateNavigator />\r\n                    <TodayButton />\r\n                    <ViewSwitcher />\r\n                </Scheduler>\r\n            </Paper>\r\n        );\r\n    }\r\n);\r\n","import React, { useContext } from \"react\";\r\n\r\nimport { AppointmentTooltip } from \"@devexpress/dx-react-scheduler-material-ui\";\r\n\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { StudentContext } from \"../Methods\";\r\n\r\nconst style = ({ palette, spacing }) => ({\r\n\ticon: {\r\n\t\tcolor: palette.action.active,\r\n\t},\r\n\ttextCenter: {\r\n\t\ttextAlign: \"center\",\r\n\t},\r\n\theader: {\r\n\t\theight: \"260px\",\r\n\t\tbackgroundSize: \"cover\",\r\n\t},\r\n});\r\n\r\n/***\r\n * Customized timetable header for appointment feature (student)\r\n */\r\nexport default withStyles(style, { name: \"Header\" })(\r\n\t({ children, appointmentData, classes, ...restProps }) => {\r\n\t\tconst { setCancelAppointment } = useContext(StudentContext);\r\n\r\n\t\treturn (\r\n\t\t\t<AppointmentTooltip.Header\r\n\t\t\t\t{...restProps}\r\n\t\t\t\tappointmentData={appointmentData}\r\n\t\t\t\tshowCloseButton\r\n\t\t\t\tshowOpenButton\r\n\t\t\t\tonOpenButtonClick={() =>\r\n\t\t\t\t\tsetCancelAppointment(appointmentData.id)\r\n\t\t\t\t}\r\n\t\t\t></AppointmentTooltip.Header>\r\n\t\t);\r\n\t}\r\n);\r\n","import React, { useState } from \"react\";\r\nimport { AppointmentTooltip } from \"@devexpress/dx-react-scheduler-material-ui\";\r\n\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n\tGrid,\r\n\tList,\r\n\tListItem,\r\n\tListItemIcon,\r\n\tListItemText,\r\n\tButton,\r\n\tCollapse,\r\n} from \"@material-ui/core\";\r\n\r\nimport RoomIcon from \"@material-ui/icons/Room\";\r\nimport AutorenewIcon from \"@material-ui/icons/Autorenew\";\r\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport DraftsIcon from \"@material-ui/icons/Drafts\";\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport { amber, green, red } from \"@material-ui/core/colors\";\r\n\r\nconst StatusIcon = ({ status }) => {\r\n\tif (status === \"APPROVED\") return <ThumbUpIcon></ThumbUpIcon>;\r\n\tif (status === \"DECLINED\") return <CancelIcon></CancelIcon>;\r\n\treturn <AutorenewIcon></AutorenewIcon>;\r\n};\r\n\r\nconst getCommentTitle = (status) => {\r\n\tswitch (status) {\r\n\t\tcase \"PENDING\":\r\n\t\t\treturn \"Request Reason:\";\r\n\t\tcase \"APPROVED\":\r\n\t\t\treturn \"Approved Reason:\";\r\n\t\tdefault:\r\n\t\t\treturn \"Declined Reason:\";\r\n\t}\r\n};\r\n\r\nconst style = ({ palette, spacing }) => ({\r\n\tleft: {\r\n\t\tmarginLeft: spacing(1),\r\n\t},\r\n\tpending: {\r\n\t\tbackgroundColor: amber[400],\r\n\t\t\"&:hover\": {\r\n\t\t\tbackgroundColor: amber[400],\r\n\t\t},\r\n\t\tborderRadius: 30,\r\n\t},\r\n\tapproved: {\r\n\t\tbackgroundColor: green[400],\r\n\t\t\"&:hover\": {\r\n\t\t\tbackgroundColor: green[400],\r\n\t\t},\r\n\t\tborderRadius: 30,\r\n\t},\r\n\tdeclined: {\r\n\t\tbackgroundColor: red[400],\r\n\t\t\"&:hover\": {\r\n\t\t\tbackgroundColor: red[400],\r\n\t\t},\r\n\t\tborderRadius: 30,\r\n\t},\r\n\tscroll: {\r\n\t\theight: spacing(15),\r\n\t\toverflow: \"scroll\",\r\n\t},\r\n});\r\n\r\n/***\r\n * Customized timetable content for appointment feature (student).\r\n */\r\nexport default withStyles(style, { name: \"Content\" })(\r\n\t({ children, appointmentData, classes, ...restProps }) => {\r\n\t\tconst [openComments, setOpenComments] = useState(false);\r\n\r\n\t\t//Styles for status label.\r\n\t\tconst getStatusStyle = (status) => {\r\n\t\t\tswitch (status) {\r\n\t\t\t\tcase \"APPROVED\":\r\n\t\t\t\t\treturn classes.approved;\r\n\t\t\t\tcase \"DECLINED\":\r\n\t\t\t\t\treturn classes.declined;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn classes.pending;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\treturn (\r\n\t\t\t<AppointmentTooltip.Content\r\n\t\t\t\t{...restProps}\r\n\t\t\t\tappointmentData={appointmentData}\r\n\t\t\t>\r\n\t\t\t\t<Grid container justify=\"center\">\r\n\t\t\t\t\t<Grid item xs={11}>\r\n\t\t\t\t\t\t<List dense>\r\n\t\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\t\tbutton\r\n\t\t\t\t\t\t\t\tonClick={() => setOpenComments(!openComments)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t<DraftsIcon />\r\n\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\t\tprimary={getCommentTitle(\r\n\t\t\t\t\t\t\t\t\t\tappointmentData.status\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t{openComments ? <ExpandLess /> : <ExpandMore />}\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t<Collapse\r\n\t\t\t\t\t\t\t\tin={openComments}\r\n\t\t\t\t\t\t\t\ttimeout=\"auto\"\r\n\t\t\t\t\t\t\t\tunmountOnExit\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<List component=\"div\" disablePadding>\r\n\t\t\t\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\t\t\t\tsecondary={\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className={classes.scroll}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{appointmentData.comments}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t\t</List>\r\n\t\t\t\t\t\t\t</Collapse>\r\n\t\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t<RoomIcon />\r\n\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\t\tprimary=\"Location\"\r\n\t\t\t\t\t\t\t\t\tsecondary={appointmentData.location}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\r\n\t\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t<AccountCircleIcon />\r\n\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\t\tprimary={\r\n\t\t\t\t\t\t\t\t\t\tappointmentData.staff\r\n\t\t\t\t\t\t\t\t\t\t\t? `${appointmentData.staff.firstName} ${appointmentData.staff.lastName}`\r\n\t\t\t\t\t\t\t\t\t\t\t: `${appointmentData.student.firstName} ${appointmentData.student.lastName}`\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tsecondary={\r\n\t\t\t\t\t\t\t\t\t\tappointmentData.staff\r\n\t\t\t\t\t\t\t\t\t\t\t? appointmentData.staff.mail\r\n\t\t\t\t\t\t\t\t\t\t\t: appointmentData.student.mail\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\tclassName={getStatusStyle(\r\n\t\t\t\t\t\t\t\t\t\tappointmentData.status\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\tdisableTouchRipple\r\n\t\t\t\t\t\t\t\t\tdisableRipple\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<StatusIcon\r\n\t\t\t\t\t\t\t\t\t\tstatus={appointmentData.status}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t{appointmentData.status}\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t</List>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</AppointmentTooltip.Content>\r\n\t\t);\r\n\t}\r\n);\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n    Grid,\r\n    Grow,\r\n    ListItem,\r\n    List,\r\n    ListItemAvatar,\r\n    ListItemText,\r\n    Avatar,\r\n    Select,\r\n    MenuItem,\r\n    Button,\r\n    ButtonGroup,\r\n    IconButton,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    TextField,\r\n    Slider,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { myFetch, UserContext } from \"../Methods\";\r\nimport ScheduleIcon from \"@material-ui/icons/Schedule\";\r\nimport RoomIcon from \"@material-ui/icons/Room\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nimport MomentUtils from \"@date-io/moment\";\r\nimport {\r\n    KeyboardDateTimePicker,\r\n    MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\n\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\nimport { Send } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    closeButton: {\r\n        position: \"absolute\",\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n    icon: {\r\n        margin: \"auto\",\r\n    },\r\n    delete: {\r\n        backgroundColor:\r\n            \"linear-gradient(45deg, #ff9a9e 0%, #fad0c4 99%, #fad0c4 100%)\",\r\n        \"&:hover\": {\r\n            backgroundColor: \"#52af77\",\r\n        },\r\n    },\r\n    select: {\r\n        marginTop: theme.spacing(10),\r\n    },\r\n    skeleton: {\r\n        width: \"20WH\",\r\n    },\r\n}));\r\n\r\n/***\r\n * marks for slider.\r\n */\r\nconst marks = [\r\n    {\r\n        value: 0,\r\n        label: \"0 Minutes\",\r\n    },\r\n    {\r\n        value: 60,\r\n        label: \"1 hour\",\r\n    },\r\n    {\r\n        value: 120,\r\n        label: \"2 hours\",\r\n    },\r\n    {\r\n        value: 240,\r\n        label: \"4 hours\",\r\n    },\r\n];\r\n\r\nconst getDuration = (startDate, endDate) => {\r\n    const duration = (endDate - startDate) / 60000;\r\n    if (duration < 15) return 15;\r\n    if (duration > 300) return 300;\r\n    return duration;\r\n};\r\n\r\nconst getEndDate = (start, duration) => {\r\n    const end = new Date(start);\r\n    return end.setMinutes(end.getMinutes() + duration);\r\n};\r\n\r\n/***\r\n * Dialog for students to create an appointment.\r\n */\r\nconst CreateDialog = ({\r\n    staffInfo,\r\n    classes,\r\n    startDate,\r\n    endDate,\r\n    location,\r\n    comments,\r\n    toggle,\r\n    createAppointment,\r\n    setStartDate,\r\n    setEndDate,\r\n    setLocation,\r\n    setComments,\r\n    open,\r\n    setLoading,\r\n}) => {\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={toggle}\r\n            aria-labelledby=\"form-dialog-title\"\r\n            fullWidth\r\n        >\r\n            <DialogTitle id=\"form-dialog-title\">\r\n                {`Creating an appointment for ${staffInfo.firstName} ${staffInfo.lastName}`}\r\n                <IconButton\r\n                    aria-label=\"close\"\r\n                    className={classes.closeButton}\r\n                    onClick={toggle}\r\n                >\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            </DialogTitle>\r\n            <DialogContent dividers>\r\n                <Grid container>\r\n                    <Grid item xs={1}>\r\n                        <ScheduleIcon className={classes.icon} />\r\n                    </Grid>\r\n                    <Grid item xs={11}>\r\n                        <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                            <KeyboardDateTimePicker\r\n                                label=\"Start Date\"\r\n                                value={startDate}\r\n                                onChange={(date) => {\r\n                                    setStartDate(date);\r\n                                }}\r\n                                fullWidth\r\n                                required\r\n                            />\r\n                        </MuiPickersUtilsProvider>\r\n                        <br />\r\n                        <br />\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <br />\r\n                        <ScheduleIcon className={classes.icon} />\r\n                    </Grid>\r\n                    <Grid item xs={11}>\r\n                        <DialogContentText>\r\n                            {\"Duration: \"}\r\n                            {getDuration(startDate, endDate)}\r\n                            {\" Minutes\"}\r\n                        </DialogContentText>\r\n                        <br />\r\n                        <Slider\r\n                            valueLabelDisplay=\"auto\"\r\n                            marks={marks}\r\n                            aria-labelledby=\"discrete-slider\"\r\n                            getAriaValueText={(value) => `${value} Minutes`}\r\n                            value={getDuration(startDate, endDate)}\r\n                            onChange={(e, newValue) => {\r\n                                setEndDate(getEndDate(startDate, newValue));\r\n                            }}\r\n                            step={15}\r\n                            max={300}\r\n                        />\r\n                        <br />\r\n                        <br />\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <RoomIcon className={classes.icon} />\r\n                    </Grid>\r\n                    <Grid item xs={11}>\r\n                        <TextField\r\n                            label=\"Location\"\r\n                            variant=\"filled\"\r\n                            required\r\n                            value={location}\r\n                            onChange={(e) => {\r\n                                setLocation(e.target.value);\r\n                            }}\r\n                            fullWidth\r\n                        />\r\n                        <DialogContentText>\r\n                            <br />\r\n                        </DialogContentText>\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <Send className={classes.icon} />\r\n                    </Grid>\r\n                    <Grid item xs={11}>\r\n                        <TextField\r\n                            label=\"Request Reason\"\r\n                            multiline\r\n                            fullWidth\r\n                            rowsMax={4}\r\n                            value={comments}\r\n                            onChange={(e) => {\r\n                                setComments(e.target.value);\r\n                            }}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogContent>\r\n\r\n            <DialogActions>\r\n                <ButtonGroup fullWidth>\r\n                    <Button fullWidth onClick={toggle}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button\r\n                        fullWidth\r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                        onClick={() => {\r\n                            createAppointment().then((res) => {\r\n                                setLoading(false);\r\n                            });\r\n                        }}\r\n                    >\r\n                        Create\r\n                    </Button>\r\n                </ButtonGroup>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\n/***\r\n * The student query component for booking appointments.\r\n */\r\nexport default ({ userInfo }) => {\r\n    const classes = useStyles();\r\n\r\n    //For select bar\r\n    const [currentSubject, setCurrentSubject] = useState(userInfo.subjects[0]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    //Appointment data...\r\n    const [staffs, setStaffs] = useState([]);\r\n    const [startDate, setStartDate] = useState(new Date());\r\n    const [endDate, setEndDate] = useState(new Date());\r\n    const [location, setLocation] = useState(\"\");\r\n    const [comments, setComments] = useState(\"\");\r\n    const [staffInfo, setStaffInfo] = useState({});\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const { detectAlert, setAlert } = useContext(UserContext);\r\n\r\n    //Fetch the appointments of the current subject.\r\n    const fetchStaffs = async () => {\r\n        setLoading(true);\r\n\r\n        const res = await myFetch(\"/api/student/subjects/allStaff\", \"POST\", {\r\n            subjectCode: currentSubject,\r\n        });\r\n        setStaffs(res.staffsInfo);\r\n\r\n        if (!res) return;\r\n        setLoading(false);\r\n    };\r\n\r\n    //Create a valid appointment with back end.\r\n    const createAppointment = async () => {\r\n        setLoading(true);\r\n        if (!startDate || !endDate || location === \"\") {\r\n            setAlert({ status: \"warning\", message: \"Insufficient Input.\" });\r\n            return;\r\n        }\r\n        const body = {\r\n            subjectCode: currentSubject,\r\n            startDate: startDate,\r\n            endDate: getEndDate(startDate, getDuration(startDate, endDate)),\r\n            location: location,\r\n            staffId: staffInfo._id,\r\n            comment: comments,\r\n        };\r\n        const res = await myFetch(\r\n            \"/api/student/appointment/request\",\r\n            \"POST\",\r\n            body\r\n        );\r\n        detectAlert(res, \"Successfully created.\");\r\n        toggle();\r\n        return res;\r\n    };\r\n\r\n    const toggle = () => setOpen(!open);\r\n\r\n    //Updating appointments Information.\r\n    useEffect(() => {\r\n        fetchStaffs();\r\n    }, [currentSubject]);\r\n\r\n    //Loading...\r\n    if (loading)\r\n        return (\r\n            <div>\r\n                <Select\r\n                    value={currentSubject}\r\n                    onChange={(event) => {\r\n                        setCurrentSubject(event.target.value);\r\n                    }}\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                >\r\n                    {userInfo.subjects.map((subject) => (\r\n                        <MenuItem value={subject} key={subject}>\r\n                            {subject}\r\n                        </MenuItem>\r\n                    ))}\r\n                </Select>\r\n                <List>\r\n                    {[1, 2, 3].map((index) => (\r\n                        <Grow in key={index} timeout={index * 500}>\r\n                            <ListItem button>\r\n                                <ListItemAvatar>\r\n                                    <Skeleton\r\n                                        animation=\"wave\"\r\n                                        variant=\"circle\"\r\n                                        width={40}\r\n                                        height={40}\r\n                                    />\r\n                                </ListItemAvatar>\r\n                                <ListItemText\r\n                                    primary={<Skeleton animation=\"wave\" />}\r\n                                    secondary={<Skeleton animation=\"wave\" />}\r\n                                ></ListItemText>\r\n                            </ListItem>\r\n                        </Grow>\r\n                    ))}\r\n                </List>\r\n            </div>\r\n        );\r\n\r\n    return (\r\n        <div>\r\n            <Select\r\n                value={currentSubject}\r\n                onChange={(event) => {\r\n                    setCurrentSubject(event.target.value);\r\n                }}\r\n                fullWidth\r\n                variant=\"outlined\"\r\n            >\r\n                {userInfo.subjects.map((subject) => (\r\n                    <MenuItem value={subject} key={subject}>\r\n                        {subject}\r\n                    </MenuItem>\r\n                ))}\r\n            </Select>\r\n            <CreateDialog\r\n                staffInfo={staffInfo}\r\n                classes={classes}\r\n                startDate={startDate}\r\n                endDate={endDate}\r\n                location={location}\r\n                comments={comments}\r\n                toggle={toggle}\r\n                createAppointment={createAppointment}\r\n                setStartDate={setStartDate}\r\n                setEndDate={setEndDate}\r\n                setLocation={setLocation}\r\n                setComments={setComments}\r\n                open={open}\r\n                setLoading={setLoading}\r\n            />\r\n            <List>\r\n                {staffs.map((staff, index) => (\r\n                    <Grow in timeout={index * 200} key={index}>\r\n                        <ListItem\r\n                            button\r\n                            onClick={() => {\r\n                                setOpen(true);\r\n                                setStaffInfo(staff);\r\n                            }}\r\n                        >\r\n                            <ListItemAvatar>\r\n                                <Avatar />\r\n                            </ListItemAvatar>\r\n                            <ListItemText\r\n                                primary={`${staff.firstName} ${staff.lastName}`}\r\n                                secondary={staff.email}\r\n                            />\r\n                        </ListItem>\r\n                    </Grow>\r\n                ))}\r\n            </List>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { Grid, Tabs, AppBar, Tab, Select, MenuItem } from \"@material-ui/core\";\r\nimport withWidth, { isWidthUp } from \"@material-ui/core/withWidth\";\r\n\r\n/***\r\n * The control bar that is above the timetable for appointment feature.\r\n */\r\nexport default withWidth()(\r\n    ({\r\n        currentStatus,\r\n        setCurrentStatus,\r\n        mainResourceName,\r\n        setMainResourceName,\r\n        width,\r\n    }) => {\r\n        const largeScreen = isWidthUp(\"lg\", width);\r\n\r\n        return (\r\n            <AppBar position=\"relative\" color=\"default\">\r\n                <Grid container justify=\"space-between\">\r\n                    <Grid item xs={largeScreen ? 10 : 12}>\r\n                        <Tabs\r\n                            value={currentStatus}\r\n                            indicatorColor=\"primary\"\r\n                            textColor=\"primary\"\r\n                            onChange={(event, newValue) => {\r\n                                setCurrentStatus(newValue);\r\n                            }}\r\n                            variant=\"scrollable\"\r\n                            scrollButtons=\"auto\"\r\n                        >\r\n                            <Tab label=\"ALL\" />\r\n                            <Tab label=\"PENDING\" />\r\n                            <Tab label=\"APPROVED\" />\r\n                            <Tab label=\"DECLINED\" />\r\n                        </Tabs>\r\n                    </Grid>\r\n                    {largeScreen ? (\r\n                        <Grid item xs={2}>\r\n                            <Select\r\n                                value={mainResourceName}\r\n                                onChange={(e) =>\r\n                                    setMainResourceName(e.target.value)\r\n                                }\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                            >\r\n                                <MenuItem key=\"status\" value=\"status\">\r\n                                    Status\r\n                                </MenuItem>\r\n                                <MenuItem key=\"title\" value=\"title\">\r\n                                    Subjects\r\n                                </MenuItem>\r\n                            </Select>\r\n                        </Grid>\r\n                    ) : null}\r\n                </Grid>\r\n            </AppBar>\r\n        );\r\n    }\r\n);\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n    Grid,\r\n    Button,\r\n    ButtonGroup,\r\n    Fade,\r\n    Dialog,\r\n    DialogContent,\r\n    DialogTitle,\r\n    DialogActions,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport withWidth, { isWidthUp } from \"@material-ui/core/withWidth\";\r\nimport TimeTable from \"../Timetable\";\r\nimport Header from \"./StudentHeader\";\r\nimport Content from \"./StudentContent\";\r\nimport StudentQuery from \"./StudentQuery\";\r\nimport TimetableBar from \"./TimetableBar\";\r\nimport { myFetch, UserContext, StudentContext } from \"../Methods\";\r\nimport legend from \"./legend.svg\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        maxHeight: \"70VH\",\r\n    },\r\n    fab: {\r\n        position: \"fixed\",\r\n        bottom: theme.spacing(1) * 6,\r\n        right: theme.spacing(1) * 6,\r\n    },\r\n    noDecoration: {\r\n        textDecoration: \"none !important\",\r\n    },\r\n    delete: {\r\n        textTransform: \"none\",\r\n        color: theme.palette.getContrastText(grey[700]),\r\n        background: grey[700],\r\n        \"&:hover\": {\r\n            color: theme.palette.getContrastText(grey[900]),\r\n            background: grey[900],\r\n        },\r\n    },\r\n    query: {\r\n        maxHeight: \"30VH\",\r\n        height: \"30VH\",\r\n        overflow: \"scroll\",\r\n    },\r\n    table: {\r\n        marginTop: theme.spacing(4),\r\n    },\r\n    legend: {\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: theme.spacing(2),\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            minWidth: \"40%\",\r\n            minHeight: \"40%\",\r\n        },\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            minWidth: \"100%\",\r\n            minHeight: \"100%\",\r\n        },\r\n    },\r\n}));\r\n\r\n/***\r\n * Dialog for student to cancel a consultation.\r\n */\r\nconst CancelDialog = ({\r\n    cancelAppointment,\r\n    setCancelAppointment,\r\n    classes,\r\n    cancel,\r\n}) => (\r\n    <Dialog\r\n        open={cancelAppointment !== \"\"}\r\n        onClose={() => setCancelAppointment(\"\")}\r\n        fullWidth\r\n    >\r\n        <DialogTitle>Delete your Appointment?</DialogTitle>\r\n        <DialogContent>Do you want to delete this Appointment?</DialogContent>\r\n        <DialogActions>\r\n            <ButtonGroup fullWidth>\r\n                <Button\r\n                    fullWidth\r\n                    onClick={() => setCancelAppointment(\"\")}\r\n                    style={{\r\n                        textTransform: \"none\",\r\n                    }}\r\n                >\r\n                    No, thanks.\r\n                </Button>\r\n                <Button\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    onClick={cancel}\r\n                    className={classes.delete}\r\n                >\r\n                    Yes, please delete it.\r\n                </Button>\r\n            </ButtonGroup>\r\n        </DialogActions>\r\n    </Dialog>\r\n);\r\n\r\n/***\r\n * Consultation page for student.\r\n */\r\nexport default withWidth()(({ width }) => {\r\n    const classes = useStyles();\r\n    const largeScreen = isWidthUp(\"lg\", width);\r\n    //timetable values...\r\n    const [data, setData] = useState([]);\r\n    const [currentDate, setCurrentDate] = useState(new Date());\r\n    const [cancelAppointment, setCancelAppointment] = useState(\"\");\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    //Timetable bar....\r\n    const [currentStatus, setCurrentStatus] = useState(0);\r\n    const [mainResourceName, setMainResourceName] = useState(\"status\");\r\n\r\n    const { alert, detectAlert, user, setUser } = useContext(UserContext);\r\n    const { userInfo } = user;\r\n\r\n    //Reloading user information.\r\n    const reloadUser = async () => {\r\n        const res = await myFetch(\"/api/shared/users/info\", \"GET\");\r\n        detectAlert(res);\r\n        setUser(res);\r\n        return res;\r\n    };\r\n\r\n    const formatData = (data, status) => {\r\n        //Formatting data for timetable to render.\r\n        const appoints = [];\r\n        data.map((appointment) => {\r\n            switch (status) {\r\n                case 1:\r\n                    if (appointment.status !== \"PENDING\") return null;\r\n                    break;\r\n                case 2:\r\n                    if (appointment.status !== \"APPROVED\") return null;\r\n                    break;\r\n                case 3:\r\n                    if (appointment.status !== \"DECLINED\") return null;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            appoints.push({\r\n                title: appointment.subjectCode,\r\n                startDate: new Date(appointment.startDate),\r\n                endDate: new Date(appointment.endDate),\r\n                id: appointment._id,\r\n                location: appointment.location,\r\n                status: appointment.status,\r\n                staff: appointment.staff,\r\n                comments: appointment.comment,\r\n            });\r\n            return null;\r\n        });\r\n        setData(appoints);\r\n        setLoading(false);\r\n    };\r\n\r\n    //Fetch the consultations of the current subject.\r\n    const fetchAppoint = async () => {\r\n        setLoading(true);\r\n        const res = await myFetch(\"/api/student/appointment/all\", \"GET\");\r\n        detectAlert(res);\r\n        return res.appointments;\r\n    };\r\n\r\n    //Updating consultations Information.\r\n    useEffect(() => {\r\n        reloadUser().then((user) => {\r\n            fetchAppoint().then((appointments) =>\r\n                formatData(appointments, currentStatus)\r\n            );\r\n        });\r\n    }, [alert.status, currentStatus]);\r\n\r\n    //Cancel an consultation.\r\n    const cancel = async () => {\r\n        setLoading(true);\r\n        const body = {\r\n            id: cancelAppointment,\r\n        };\r\n        const res = await myFetch(\r\n            \"/api/student/appointment/delete\",\r\n            \"DELETE\",\r\n            body\r\n        );\r\n        detectAlert(res, \"Successfully Deleted.\");\r\n        setCancelAppointment(\"\");\r\n    };\r\n\r\n    return (\r\n        <StudentContext.Provider\r\n            value={{\r\n                currentDate,\r\n                setCurrentDate,\r\n                cancelAppointment,\r\n                setCancelAppointment,\r\n                data,\r\n                setData,\r\n                userInfo,\r\n                loading,\r\n                setLoading,\r\n                setUser,\r\n            }}\r\n        >\r\n            <CancelDialog\r\n                cancelAppointment={cancelAppointment}\r\n                setCancelAppointment={setCancelAppointment}\r\n                classes={classes}\r\n                cancel={cancel}\r\n            />\r\n            <Fade in timeout={500}>\r\n                <div className={classes.paper}>\r\n                    <Grid container justify=\"space-around\">\r\n                        <Grid\r\n                            item\r\n                            xs={largeScreen ? 3 : 12}\r\n                            className={\r\n                                largeScreen ? classes.noStyle : classes.query\r\n                            }\r\n                        >\r\n                            <StudentQuery userInfo={userInfo} />\r\n                        </Grid>\r\n                        <Grid\r\n                            item\r\n                            xs={largeScreen ? 8 : 12}\r\n                            className={\r\n                                largeScreen ? classes.noStyle : classes.table\r\n                            }\r\n                        >\r\n                            <TimetableBar\r\n                                currentStatus={currentStatus}\r\n                                setCurrentStatus={setCurrentStatus}\r\n                                mainResourceName={mainResourceName}\r\n                                setMainResourceName={setMainResourceName}\r\n                                data={data}\r\n                                setData={setData}\r\n                            />\r\n                            <Grid container justify=\"flex-end\">\r\n                                <img\r\n                                    className={classes.legend}\r\n                                    src={legend}\r\n                                    alt=\"legend\"\r\n                                />\r\n                            </Grid>\r\n                            <TimeTable\r\n                                data={data}\r\n                                currentDate={currentDate}\r\n                                setCurrentDate={setCurrentDate}\r\n                                header={Header}\r\n                                content={Content}\r\n                                loading={loading}\r\n                                mainResourceName={mainResourceName}\r\n                                subjects={user.userInfo.subjects}\r\n                                halfScreen={largeScreen ? false : true}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </Fade>\r\n        </StudentContext.Provider>\r\n    );\r\n});\r\n","import React, { useContext } from \"react\";\r\nimport { AppointmentTooltip } from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { StaffContext } from \"../Methods\";\r\n\r\nconst style = ({ palette, spacing }) => ({\r\n\ticon: {\r\n\t\tcolor: palette.action.active,\r\n\t},\r\n\ttextCenter: {\r\n\t\ttextAlign: \"center\",\r\n\t},\r\n\theader: {\r\n\t\theight: \"260px\",\r\n\t\tbackgroundSize: \"cover\",\r\n\t},\r\n});\r\n\r\n/***\r\n * Customized timetable header for appointment feature (staff).\r\n */\r\nexport default withStyles(style, { name: \"Header\" })(\r\n\t({ children, appointmentData, classes, ...restProps }) => {\r\n\t\tconst { setPendAppointment } = useContext(StaffContext);\r\n\r\n\t\treturn (\r\n\t\t\t<AppointmentTooltip.Header\r\n\t\t\t\t{...restProps}\r\n\t\t\t\tappointmentData={appointmentData}\r\n\t\t\t\tshowCloseButton\r\n\t\t\t\tshowOpenButton\r\n\t\t\t\tonOpenButtonClick={() =>\r\n\t\t\t\t\tsetPendAppointment({ id: appointmentData.id })\r\n\t\t\t\t}\r\n\t\t\t></AppointmentTooltip.Header>\r\n\t\t);\r\n\t}\r\n);\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n    Grid,\r\n    Button,\r\n    ButtonGroup,\r\n    Fade,\r\n    Dialog,\r\n    DialogContent,\r\n    DialogTitle,\r\n    DialogActions,\r\n    IconButton,\r\n    TextField,\r\n} from \"@material-ui/core\";\r\nimport withWidth from \"@material-ui/core/withWidth\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TimeTable from \"../Timetable\";\r\n\r\nimport Header from \"./StaffHeader\";\r\nimport Content from \"./StudentContent\";\r\nimport TimetableBar from \"./TimetableBar\";\r\n\r\nimport { myFetch, UserContext, StaffContext } from \"../Methods\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { grey, red, green } from \"@material-ui/core/colors\";\r\nimport legend from \"./legend.svg\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        maxHeight: \"70VH\",\r\n    },\r\n    fab: {\r\n        position: \"fixed\",\r\n        bottom: theme.spacing(1) * 6,\r\n        right: theme.spacing(1) * 6,\r\n    },\r\n    noDecoration: {\r\n        textDecoration: \"none !important\",\r\n    },\r\n    delete: {\r\n        textTransform: \"none\",\r\n        color: theme.palette.getContrastText(grey[700]),\r\n        background: grey[700],\r\n        \"&:hover\": {\r\n            color: theme.palette.getContrastText(grey[900]),\r\n            background: grey[900],\r\n        },\r\n    },\r\n    closeButton: {\r\n        position: \"absolute\",\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n    approve: {\r\n        backgroundColor: green[400],\r\n        \"&:hover\": {\r\n            backgroundColor: green[600],\r\n        },\r\n    },\r\n    decline: {\r\n        backgroundColor: red[500],\r\n        \"&:hover\": {\r\n            backgroundColor: red[700],\r\n        },\r\n    },\r\n    legend: {\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: theme.spacing(2),\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            minWidth: \"30%\",\r\n            minHeight: \"30%\",\r\n        },\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            minWidth: \"100%\",\r\n            minHeight: \"100%\",\r\n        },\r\n    },\r\n}));\r\n\r\n/***\r\n * Dialog to pend an appointment for staff.\r\n */\r\nconst PendDialog = ({ pendAppointment, setPendAppointment, pend, classes }) => (\r\n    <Dialog\r\n        open={pendAppointment.id !== \"\"}\r\n        onClose={() => setPendAppointment({ id: \"\" })}\r\n        fullWidth\r\n    >\r\n        <DialogTitle>\r\n            Pending this appointment{\" \"}\r\n            <IconButton\r\n                aria-label=\"close\"\r\n                className={classes.closeButton}\r\n                onClick={() => setPendAppointment({ id: \"\" })}\r\n            >\r\n                <CloseIcon />\r\n            </IconButton>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n            <TextField\r\n                label=\"Any comment for him/her?\"\r\n                multiline\r\n                fullWidth\r\n                rowsMax={4}\r\n                value={pendAppointment.comments}\r\n                onChange={(e) => {\r\n                    setPendAppointment({\r\n                        id: pendAppointment.id,\r\n                        comments: e.target.value,\r\n                    });\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n        </DialogContent>\r\n        <DialogActions>\r\n            <ButtonGroup fullWidth>\r\n                <Button\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    onClick={() => pend(\"DECLINED\")}\r\n                    className={classes.decline}\r\n                    color={red[400]}\r\n                >\r\n                    Decline it.\r\n                </Button>\r\n                <Button\r\n                    fullWidth\r\n                    onClick={() => pend(\"APPROVED\")}\r\n                    color={green[400]}\r\n                    variant=\"contained\"\r\n                    className={classes.approve}\r\n                >\r\n                    Approve it.\r\n                </Button>\r\n            </ButtonGroup>\r\n        </DialogActions>\r\n    </Dialog>\r\n);\r\n\r\n/***\r\n * Appointment page for staff.\r\n */\r\nexport default withWidth()(({ width }) => {\r\n    const classes = useStyles();\r\n\r\n    //timetable values...\r\n    const [data, setData] = useState([]);\r\n    const [currentDate, setCurrentDate] = useState(new Date());\r\n    const [pendAppointment, setPendAppointment] = useState({\r\n        id: \"\",\r\n        comments: \"\",\r\n    });\r\n    const [loading, setLoading] = useState(true);\r\n    const { alert, detectAlert, user, setUser } = useContext(UserContext);\r\n\r\n    //Timetable bar....\r\n    const [currentStatus, setCurrentStatus] = useState(0);\r\n    const [mainResourceName, setMainResourceName] = useState(\"status\");\r\n\r\n    const { userInfo } = user;\r\n\r\n    //Reloading user information.\r\n    const reloadUser = async () => {\r\n        const res = await myFetch(\"/api/shared/users/info\", \"GET\");\r\n        detectAlert(res);\r\n        setUser(res);\r\n        return res;\r\n    };\r\n\r\n    //Fetch the appointments of the current subject.\r\n    const fetchAppoint = async () => {\r\n        setLoading(true);\r\n        const res = await myFetch(\"/api/staff/appointment/all\", \"GET\");\r\n        detectAlert(res);\r\n        return res.appointments;\r\n    };\r\n\r\n    const formatData = (data, status) => {\r\n        //Formatting data for timetable to render.\r\n        const appoints = [];\r\n        data.map((appointment) => {\r\n            switch (status) {\r\n                case 1:\r\n                    if (appointment.status !== \"PENDING\") return null;\r\n                    break;\r\n                case 2:\r\n                    if (appointment.status !== \"APPROVED\") return null;\r\n                    break;\r\n                case 3:\r\n                    if (appointment.status !== \"DECLINED\") return null;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            appoints.push({\r\n                title: appointment.subjectCode,\r\n                startDate: new Date(appointment.startDate),\r\n                endDate: new Date(appointment.endDate),\r\n                id: appointment._id,\r\n                location: appointment.location,\r\n                status: appointment.status,\r\n                student: appointment.student,\r\n                comments: appointment.comment,\r\n            });\r\n            return null;\r\n        });\r\n        setData(appoints);\r\n        setLoading(false);\r\n    };\r\n\r\n    //Updating appointments Information.\r\n    useEffect(() => {\r\n        reloadUser().then((user) => {\r\n            fetchAppoint().then((appointments) =>\r\n                formatData(appointments, currentStatus)\r\n            );\r\n        });\r\n    }, [alert.status, currentStatus]);\r\n\r\n    //pend an appointment.\r\n    const pend = async (status) => {\r\n        setLoading(true);\r\n        const body = {\r\n            id: pendAppointment.id,\r\n            status: status,\r\n            comment: pendAppointment.comments,\r\n        };\r\n        const res = await myFetch(\"/api/staff/appointment/pend\", \"PATCH\", body);\r\n        detectAlert(res, `Successfully ${status}.`);\r\n        setPendAppointment({ id: \"\" });\r\n    };\r\n\r\n    return (\r\n        <StaffContext.Provider\r\n            value={{\r\n                currentDate,\r\n                setCurrentDate,\r\n                pendAppointment,\r\n                setPendAppointment,\r\n                data,\r\n                setData,\r\n                userInfo,\r\n                loading,\r\n                setLoading,\r\n                setUser,\r\n            }}\r\n        >\r\n            <PendDialog\r\n                pendAppointment={pendAppointment}\r\n                setPendAppointment={setPendAppointment}\r\n                pend={pend}\r\n                classes={classes}\r\n            />\r\n            <Fade in timeout={500}>\r\n                <div className={classes.paper}>\r\n                    <Grid container justify=\"space-around\">\r\n                        <Grid item xs={12}>\r\n                            <TimetableBar\r\n                                currentStatus={currentStatus}\r\n                                setCurrentStatus={setCurrentStatus}\r\n                                mainResourceName={mainResourceName}\r\n                                setMainResourceName={setMainResourceName}\r\n                            />\r\n                            <Grid container justify=\"flex-end\">\r\n                                <img\r\n                                    className={classes.legend}\r\n                                    src={legend}\r\n                                    alt=\"legend\"\r\n                                />\r\n                            </Grid>\r\n                            <TimeTable\r\n                                data={data}\r\n                                currentDate={currentDate}\r\n                                setCurrentDate={setCurrentDate}\r\n                                header={Header}\r\n                                content={Content}\r\n                                loading={loading}\r\n                                mainResourceName={mainResourceName}\r\n                                subjects={user.userInfo.subjects}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </Fade>\r\n        </StaffContext.Provider>\r\n    );\r\n});\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { UserContext } from \"../Methods\";\r\nimport Layout from \"../Navigation/Layout\";\r\nimport Student from \"./Student\";\r\nimport Staff from \"./Staff\";\r\n\r\n/***\r\n * Appointment page for student and staff.\r\n */\r\nexport default () => {\r\n\t//Set the routes.\r\n\tconst {\r\n\t\tsetSelectedRoute,\r\n\t\tcloseAlert,\r\n\t\tloadingRoute,\r\n\t\tsetLoadingRoute,\r\n\t\tfetchUser,\r\n\t\tuser,\r\n\t} = useContext(UserContext);\r\n\r\n\t//Loading user information before render this page.\r\n\tuseEffect(() => {\r\n\t\tsetSelectedRoute(\"appointments\");\r\n\t\tcloseAlert();\r\n\t\tfetchUser().then(() => setLoadingRoute(false));\r\n\t}, []);\r\n\r\n\t//loading...\r\n\tif (loadingRoute || !user.type) return <Layout />;\r\n\r\n\treturn (\r\n\t\t<Layout\r\n\t\t\tcontent={user.type === \"student\" ? <Student /> : <Staff />}\r\n\t\t\ttype={user.type}\r\n\t\t/>\r\n\t);\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { AppointmentTooltip } from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { StudentContext } from \"../Methods\";\r\n\r\nconst style = ({ palette, spacing }) => ({\r\n\ticon: {\r\n\t\tcolor: palette.action.active,\r\n\t},\r\n\ttextCenter: {\r\n\t\ttextAlign: \"center\",\r\n\t},\r\n\theader: {\r\n\t\theight: \"260px\",\r\n\t\tbackgroundSize: \"cover\",\r\n\t},\r\n});\r\n\r\n/***\r\n * Customized timetable header for consultation (student).\r\n */\r\nexport default withStyles(style, { name: \"Header\" })(\r\n\t({ children, appointmentData, classes, ...restProps }) => {\r\n\t\tconst { setCancelAppointment } = useContext(StudentContext);\r\n\r\n\t\treturn (\r\n\t\t\t<AppointmentTooltip.Header\r\n\t\t\t\t{...restProps}\r\n\t\t\t\tappointmentData={appointmentData}\r\n\t\t\t\tshowCloseButton\r\n\t\t\t\tshowOpenButton={appointmentData.booking === \"BOOKED\"}\r\n\t\t\t\tonOpenButtonClick={() =>\r\n\t\t\t\t\tsetCancelAppointment(appointmentData.id)\r\n\t\t\t\t}\r\n\t\t\t></AppointmentTooltip.Header>\r\n\t\t);\r\n\t}\r\n);\r\n","import React, { useContext } from \"react\";\r\nimport { AppointmentTooltip } from \"@devexpress/dx-react-scheduler-material-ui\";\r\n\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n    Grid,\r\n    List,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    Badge,\r\n    Fab,\r\n} from \"@material-ui/core\";\r\nimport RoomIcon from \"@material-ui/icons/Room\";\r\nimport EqualizerIcon from \"@material-ui/icons/Equalizer\";\r\nimport LibraryAddIcon from \"@material-ui/icons/LibraryAdd\";\r\nimport PlaylistAddIcon from \"@material-ui/icons/PlaylistAdd\";\r\nimport SupervisorAccountIcon from \"@material-ui/icons/SupervisorAccount\";\r\nimport { myFetch, UserContext, StudentContext } from \"../Methods\";\r\n\r\nconst style = ({ palette, spacing }) => ({\r\n    icon: {\r\n        color: palette.action.active,\r\n        marginLeft: spacing(1),\r\n    },\r\n    textCenter: {\r\n        textAlign: \"center\",\r\n    },\r\n    header: {\r\n        height: \"260px\",\r\n        backgroundSize: \"cover\",\r\n    },\r\n    commandButton: {\r\n        backgroundColor: \"rgba(255,255,100,0.65)\",\r\n    },\r\n    left: {\r\n        marginLeft: spacing(1),\r\n    },\r\n    fab: {\r\n        margin: \"auto\",\r\n        width: \"100%\",\r\n    },\r\n});\r\n\r\n/***\r\n * Customized timetable content for student.\r\n */\r\nexport default withStyles(style, { name: \"Content\" })(\r\n    ({ children, appointmentData, classes, ...restProps }) => {\r\n        const { setLoading, userInfo } = useContext(StudentContext);\r\n        const { detectAlert } = useContext(UserContext);\r\n\r\n        const book = async () => {\r\n            setLoading(true);\r\n            const body = {\r\n                id: appointmentData.id,\r\n            };\r\n            const res = await myFetch(\r\n                \"/api/student/consult/book\",\r\n                \"POST\",\r\n                body\r\n            );\r\n            detectAlert(res, \"Successfully booked.\");\r\n        };\r\n\r\n        const checkBooked = () => {\r\n            return (\r\n                userInfo.registeredConsult.filter(\r\n                    (each) => each == appointmentData.id\r\n                ).length > 0\r\n            );\r\n        };\r\n\r\n        return (\r\n            <AppointmentTooltip.Content\r\n                {...restProps}\r\n                appointmentData={appointmentData}\r\n            >\r\n                <Grid container justify=\"center\">\r\n                    <Grid item xs={11}>\r\n                        <List>\r\n                            <ListItem>\r\n                                <ListItemIcon>\r\n                                    <RoomIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText\r\n                                    primary=\"Location\"\r\n                                    secondary={appointmentData.location}\r\n                                />\r\n                            </ListItem>\r\n\r\n                            <ListItem>\r\n                                <ListItemIcon>\r\n                                    <SupervisorAccountIcon />\r\n                                </ListItemIcon>{\" \"}\r\n                                <ListItemText\r\n                                    primary=\"Slots Available\"\r\n                                    secondary=\" \"\r\n                                />\r\n                                <ListItemIcon>\r\n                                    <Badge\r\n                                        badgeContent={\r\n                                            appointmentData.slotsAvailable\r\n                                        }\r\n                                        color=\"primary\"\r\n                                        showZero\r\n                                    >\r\n                                        <EqualizerIcon />\r\n                                    </Badge>\r\n                                </ListItemIcon>\r\n                            </ListItem>\r\n                            <ListItem>\r\n                                <ListItemIcon>\r\n                                    <LibraryAddIcon />\r\n                                </ListItemIcon>\r\n\r\n                                <ListItemText\r\n                                    primary=\"Student Registered\"\r\n                                    secondary=\" \"\r\n                                />\r\n\r\n                                <ListItemIcon>\r\n                                    <Badge\r\n                                        badgeContent={\r\n                                            appointmentData.totalStudent\r\n                                        }\r\n                                        color=\"primary\"\r\n                                        showZero\r\n                                    >\r\n                                        <EqualizerIcon />\r\n                                    </Badge>\r\n                                </ListItemIcon>\r\n                            </ListItem>\r\n                            <br />\r\n                            <ListItem>\r\n                                <Fab\r\n                                    variant=\"extended\"\r\n                                    className={classes.fab}\r\n                                    color={\r\n                                        checkBooked() ? \"default\" : \"primary\"\r\n                                    }\r\n                                    onClick={book}\r\n                                    disabled={checkBooked()}\r\n                                >\r\n                                    <PlaylistAddIcon />\r\n                                    {checkBooked() ? \"Booked\" : \"Book it\"}\r\n                                </Fab>\r\n                            </ListItem>\r\n                        </List>\r\n                    </Grid>\r\n                </Grid>\r\n            </AppointmentTooltip.Content>\r\n        );\r\n    }\r\n);\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n    Grid,\r\n    Button,\r\n    ButtonGroup,\r\n    Fade,\r\n    Tabs,\r\n    AppBar,\r\n    Tab,\r\n    Dialog,\r\n    DialogContent,\r\n    DialogTitle,\r\n    DialogActions,\r\n    Select,\r\n    MenuItem,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport withWidth, { isWidthUp } from \"@material-ui/core/withWidth\";\r\nimport legend from \"./legend.svg\";\r\nimport TimeTable from \"../Timetable\";\r\nimport Header from \"./StudentHeader\";\r\nimport Content from \"./StudentContent\";\r\nimport { myFetch, UserContext, StudentContext } from \"../Methods\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        maxHeight: \"60VH\",\r\n    },\r\n    fab: {\r\n        position: \"fixed\",\r\n        bottom: theme.spacing(1) * 6,\r\n        right: theme.spacing(1) * 6,\r\n    },\r\n    noDecoration: {\r\n        textDecoration: \"none !important\",\r\n    },\r\n    delete: {\r\n        textTransform: \"none\",\r\n        color: theme.palette.getContrastText(grey[700]),\r\n        background: grey[700],\r\n        \"&:hover\": {\r\n            color: theme.palette.getContrastText(grey[900]),\r\n            background: grey[900],\r\n        },\r\n    },\r\n    legend: {\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: theme.spacing(2),\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            minWidth: \"40%\",\r\n            minHeight: \"40%\",\r\n        },\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            minWidth: \"100%\",\r\n            minHeight: \"100%\",\r\n        },\r\n    },\r\n}));\r\n\r\n/***\r\n * Consultation page for student.\r\n */\r\nexport default withWidth()(({ width }) => {\r\n    const classes = useStyles();\r\n\r\n    const largeScreen = isWidthUp(\"lg\", width);\r\n\r\n    const [data, setData] = useState([]);\r\n\r\n    //timetable values...\r\n    const [currentDate, setCurrentDate] = useState(new Date());\r\n    const [cancelAppointment, setCancelAppointment] = useState(\"\");\r\n    const [currentSubject, setCurrentSubject] = useState(0);\r\n    const [loading, setLoading] = useState(true);\r\n    const [mainResourceName, setMainResourceName] = useState(\"booking\");\r\n    const changeMainResource = (mainResourceName) => {\r\n        setMainResourceName(mainResourceName);\r\n    };\r\n\r\n    const { alert, detectAlert, user, setUser } = useContext(UserContext);\r\n\r\n    const reloadUser = async (simpleReload) => {\r\n        //reloading user information.\r\n        setLoading(true);\r\n        const user = await myFetch(\"/api/shared/users/info\", \"GET\");\r\n        detectAlert(user);\r\n        setUser(user);\r\n        if (simpleReload) setLoading(false);\r\n\r\n        return user;\r\n    };\r\n\r\n    //Fetch the consultations of the current subject.\r\n    const fetchConsult = async () => {\r\n        if (currentSubject == 0) {\r\n            const res = await myFetch(\r\n                \"/api/student/consult/viewRegistered\",\r\n                \"GET\"\r\n            );\r\n            return res.consultations;\r\n        }\r\n        const body = {\r\n            subjectCode: userInfo.subjects[currentSubject - 1],\r\n        };\r\n        const res = await myFetch(\"/api/student/consult/viewAll\", \"POST\", body);\r\n        return res.consultations;\r\n    };\r\n\r\n    const getBookingStatus = (consultation, user) => {\r\n        if (\r\n            user.userInfo.registeredConsult.filter(\r\n                (each) => each == consultation._id\r\n            ).length > 0\r\n        )\r\n            return \"BOOKED\";\r\n\r\n        if (consultation.slotsAvailable < 1) return \"FULL\";\r\n        return \"AVAILABLE\";\r\n    };\r\n\r\n    //Updating consultations Information.\r\n    useEffect(() => {\r\n        reloadUser(false).then((user) => {\r\n            fetchConsult().then((consultations) => {\r\n                if (!consultations) return;\r\n\r\n                //Formatting data for timetable to render.\r\n                const consults = [];\r\n\r\n                consultations.map((consultation) => {\r\n                    consults.push({\r\n                        title: consultation.subjectCode,\r\n                        startDate: new Date(consultation.startDate),\r\n                        endDate: new Date(consultation.endDate),\r\n                        id: consultation._id,\r\n                        location: consultation.location,\r\n                        slotsAvailable: consultation.slotsAvailable,\r\n                        totalStudent: consultation.studentRegistered.length,\r\n                        booking: getBookingStatus(consultation, user),\r\n                    });\r\n                });\r\n                setData(consults);\r\n                setLoading(false);\r\n            });\r\n        });\r\n    }, [alert.status, currentSubject]);\r\n\r\n    //Cancel a booking.\r\n    const cancel = async () => {\r\n        setLoading(true);\r\n        const body = {\r\n            id: cancelAppointment,\r\n        };\r\n        const res = await myFetch(\"/api/student/consult/cancel\", \"POST\", body);\r\n        detectAlert(res, \"Successfully canceled.\");\r\n        setCancelAppointment(\"\");\r\n    };\r\n\r\n    const { userInfo } = user;\r\n    return (\r\n        <StudentContext.Provider\r\n            value={{\r\n                currentDate,\r\n                setCurrentDate,\r\n                cancelAppointment,\r\n                setCancelAppointment,\r\n                data,\r\n                setData,\r\n                userInfo,\r\n                loading,\r\n                setLoading,\r\n            }}\r\n        >\r\n            <Dialog\r\n                open={cancelAppointment !== \"\"}\r\n                onClose={() => setCancelAppointment(\"\")}\r\n                fullWidth\r\n            >\r\n                <DialogTitle>Cancel your booking?</DialogTitle>\r\n                <DialogContent>\r\n                    Do you want to cancel this booking?\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <ButtonGroup fullWidth>\r\n                        <Button\r\n                            fullWidth\r\n                            onClick={() => setCancelAppointment(\"\")}\r\n                            style={{\r\n                                textTransform: \"none\",\r\n                            }}\r\n                        >\r\n                            No, thanks.\r\n                        </Button>\r\n                        <Button\r\n                            fullWidth\r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                            onClick={cancel}\r\n                            className={classes.delete}\r\n                        >\r\n                            Yes, please cancel it.\r\n                        </Button>\r\n                    </ButtonGroup>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <AppBar position=\"relative\" color=\"default\">\r\n                <Grid container justify=\"space-between\">\r\n                    <Grid item xs={largeScreen ? 10 : 12}>\r\n                        <Tabs\r\n                            value={currentSubject}\r\n                            indicatorColor=\"primary\"\r\n                            textColor=\"primary\"\r\n                            onChange={(event, newValue) => {\r\n                                setCurrentSubject(newValue);\r\n                                if (newValue == currentSubject)\r\n                                    reloadUser(true, newValue);\r\n                            }}\r\n                            variant=\"scrollable\"\r\n                            scrollButtons=\"auto\"\r\n                        >\r\n                            <Tab label=\"Registered\" />\r\n                            {user.userInfo.subjects.map((subject) => (\r\n                                <Tab label={subject} key={subject} />\r\n                            ))}\r\n                        </Tabs>\r\n                    </Grid>\r\n                    {largeScreen ? (\r\n                        <Grid item xs={2}>\r\n                            <Select\r\n                                value={mainResourceName}\r\n                                onChange={(e) =>\r\n                                    setMainResourceName(e.target.value)\r\n                                }\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                            >\r\n                                <MenuItem key=\"booking\" value=\"booking\">\r\n                                    Booking\r\n                                </MenuItem>\r\n                                <MenuItem key=\"title\" value=\"title\">\r\n                                    Subjects\r\n                                </MenuItem>\r\n                            </Select>\r\n                        </Grid>\r\n                    ) : null}\r\n                </Grid>\r\n            </AppBar>\r\n            <Grid container justify=\"flex-end\">\r\n                <img className={classes.legend} src={legend} alt=\"legend\" />\r\n            </Grid>\r\n\r\n            <Fade in timeout={500}>\r\n                <div className={classes.paper}>\r\n                    <TimeTable\r\n                        data={data}\r\n                        currentDate={currentDate}\r\n                        setCurrentDate={setCurrentDate}\r\n                        header={Header}\r\n                        content={Content}\r\n                        loading={loading}\r\n                        viewChange={true}\r\n                        changeMainResource={changeMainResource}\r\n                        mainResourceName={mainResourceName}\r\n                        subjects={user.userInfo.subjects}\r\n                    />\r\n                </div>\r\n            </Fade>\r\n        </StudentContext.Provider>\r\n    );\r\n});\r\n","import React, { useContext, useState } from \"react\";\r\nimport {\r\n    Grid,\r\n    Button,\r\n    ButtonGroup,\r\n    IconButton,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    TextField,\r\n    Slider,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport { myFetch, UserContext } from \"../Methods\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport SchoolIcon from \"@material-ui/icons/School\";\r\nimport GroupIcon from \"@material-ui/icons/GroupAddTwoTone\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport ScheduleIcon from \"@material-ui/icons/Schedule\";\r\nimport RoomIcon from \"@material-ui/icons/Room\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\nimport MomentUtils from \"@date-io/moment\";\r\nimport {\r\n    KeyboardDateTimePicker,\r\n    MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\nimport { StaffContext } from \"../Methods\";\r\n\r\nconst SlotSlider = withStyles({\r\n    root: {\r\n        color: \"#52af77\",\r\n        height: 8,\r\n    },\r\n    thumb: {\r\n        height: 24,\r\n        width: 24,\r\n        backgroundColor: \"#fff\",\r\n        border: \"2px solid currentColor\",\r\n        marginTop: -8,\r\n        marginLeft: -12,\r\n        \"&:focus, &:hover, &$active\": {\r\n            boxShadow: \"inherit\",\r\n        },\r\n    },\r\n    active: {},\r\n    valueLabel: {\r\n        left: \"calc(-50% + 4px)\",\r\n    },\r\n    track: {\r\n        height: 8,\r\n        borderRadius: 4,\r\n    },\r\n    rail: {\r\n        height: 8,\r\n        borderRadius: 4,\r\n    },\r\n})(Slider);\r\n\r\n/***\r\n * The delete button.\r\n */\r\nconst DeleteButton = withStyles((theme) => ({\r\n    root: {\r\n        color: theme.palette.getContrastText(grey[700]),\r\n        backgroundColor: grey[700],\r\n        \"&:hover\": {\r\n            backgroundColor: grey[900],\r\n        },\r\n    },\r\n}))(Button);\r\n\r\n/***\r\n * Marks for duration slider.\r\n */\r\nconst marks = [\r\n    {\r\n        value: 0,\r\n        label: \"0 Minutes\",\r\n    },\r\n    {\r\n        value: 60,\r\n        label: \"1 hour\",\r\n    },\r\n    {\r\n        value: 120,\r\n        label: \"2 hours\",\r\n    },\r\n    {\r\n        value: 240,\r\n        label: \"4 hours\",\r\n    },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    icon: {\r\n        margin: \"auto\",\r\n    },\r\n\r\n    closeButton: {\r\n        position: \"absolute\",\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n}));\r\n\r\n/***\r\n * Dialog for editing/creating an consultation.\r\n */\r\nexport default ({ edit, open, toggle }) => {\r\n    const classes = useStyles();\r\n    const {\r\n        editingAppointment,\r\n        setEditingAppointment,\r\n        setLoading,\r\n        api,\r\n    } = useContext(StaffContext);\r\n    const { detectAlert, setAlert, user } = useContext(UserContext);\r\n    const subjects = user.userInfo.subjects;\r\n\r\n    //Consultation data...\r\n    const [subjectCode, setSubjectCode] = useState(subjects[0]);\r\n    const [startDate, setStartDate] = useState(new Date());\r\n    const [endDate, setEndDate] = useState(new Date());\r\n    const [location, setLocation] = useState(\"\");\r\n    const [slot, setSlot] = useState(20);\r\n\r\n    const getDuration = (startDate, endDate) => {\r\n        const duration = (endDate - startDate) / 60000;\r\n        if (duration < 15) return 15;\r\n        if (duration > 300) return 300;\r\n        return duration;\r\n    };\r\n\r\n    const getEndDate = (start, duration) => {\r\n        const end = new Date(start);\r\n        return end.setMinutes(end.getMinutes() + duration);\r\n    };\r\n\r\n    //Create a consultation...\r\n    const createTime = async () => {\r\n        setLoading(true);\r\n        if (!subjectCode || !startDate || !endDate || location === \"\") {\r\n            setAlert({ status: \"warning\", message: \"Insufficient Input.\" });\r\n            return;\r\n        }\r\n        const body = {\r\n            subjectCode: subjectCode,\r\n            startDate: startDate,\r\n            endDate: getEndDate(startDate, getDuration(startDate, endDate)),\r\n            location: location,\r\n            slotsAvailable: slot,\r\n        };\r\n        const res = await myFetch(api.create, \"POST\", body);\r\n        detectAlert(res, \"Successfully created.\");\r\n        toggle();\r\n        return res;\r\n    };\r\n\r\n    //Edit a consultation...\r\n    const editTime = async () => {\r\n        setLoading(true);\r\n        if (\r\n            !editingAppointment.endDate ||\r\n            !editingAppointment.startDate ||\r\n            !editingAppointment.slotsAvailable ||\r\n            editingAppointment.location === \"\"\r\n        ) {\r\n            setAlert({ status: \"warning\", message: \"Insufficient Input.\" });\r\n            return;\r\n        }\r\n\r\n        const res = await myFetch(api.edit, \"PATCH\", editingAppointment);\r\n        detectAlert(res, \"Successfully updated.\");\r\n        toggle();\r\n        return res;\r\n    };\r\n\r\n    //Delete a consultation...\r\n    const deleteTime = async () => {\r\n        setLoading(true);\r\n        const body = {\r\n            id: editingAppointment.id,\r\n        };\r\n        const res = await myFetch(api.delete, \"DELETE\", body);\r\n        detectAlert(res, \"Successfully deleted.\");\r\n        toggle();\r\n        return res;\r\n    };\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={toggle}\r\n            aria-labelledby=\"form-dialog-title\"\r\n            fullWidth\r\n        >\r\n            <DialogTitle id=\"form-dialog-title\">\r\n                {!edit ? \"Create a new Consultation\" : \"Edit a Consultation\"}\r\n\r\n                <IconButton\r\n                    aria-label=\"close\"\r\n                    className={classes.closeButton}\r\n                    onClick={toggle}\r\n                >\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            </DialogTitle>\r\n            <DialogContent dividers>\r\n                <Grid container>\r\n                    {edit ? null : (\r\n                        <Grid container>\r\n                            <Grid item xs={1}>\r\n                                <SchoolIcon className={classes.icon} />\r\n                            </Grid>\r\n                            <Grid item xs={11}>\r\n                                <Autocomplete\r\n                                    id=\"addSubject\"\r\n                                    options={subjects}\r\n                                    getOptionLabel={(option) => option}\r\n                                    value={subjectCode}\r\n                                    onChange={(event, newValue) => {\r\n                                        setSubjectCode(newValue);\r\n                                    }}\r\n                                    renderInput={(params) => {\r\n                                        return (\r\n                                            <TextField\r\n                                                {...params}\r\n                                                label=\"Please choose a subject\"\r\n                                                variant=\"filled\"\r\n                                                required\r\n                                            />\r\n                                        );\r\n                                    }}\r\n                                />\r\n                                <br />\r\n                                <br />\r\n                            </Grid>\r\n                        </Grid>\r\n                    )}\r\n                    <Grid item xs={1}>\r\n                        <ScheduleIcon className={classes.icon} />\r\n                    </Grid>\r\n                    <Grid item xs={11}>\r\n                        <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                            <KeyboardDateTimePicker\r\n                                label=\"Start Date\"\r\n                                value={\r\n                                    edit\r\n                                        ? editingAppointment.startDate\r\n                                        : startDate\r\n                                }\r\n                                onChange={(date) => {\r\n                                    if (edit) {\r\n                                        setEditingAppointment({\r\n                                            ...editingAppointment,\r\n                                            startDate: date,\r\n                                            endDate: getEndDate(\r\n                                                editingAppointment.startDate,\r\n                                                getDuration(\r\n                                                    editingAppointment.startDate,\r\n                                                    editingAppointment.endDate\r\n                                                )\r\n                                            ),\r\n                                        });\r\n                                        return;\r\n                                    }\r\n                                    setStartDate(date);\r\n                                }}\r\n                                fullWidth\r\n                                required\r\n                            />\r\n                        </MuiPickersUtilsProvider>\r\n                        <br />\r\n                        <br />\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <br />\r\n                        <ScheduleIcon className={classes.icon} />\r\n                    </Grid>\r\n                    <Grid item xs={11}>\r\n                        <DialogContentText>\r\n                            {\"Duration: \"}\r\n                            {edit\r\n                                ? getDuration(\r\n                                      editingAppointment.startDate,\r\n                                      editingAppointment.endDate\r\n                                  )\r\n                                : getDuration(startDate, endDate)}\r\n                            {\" Minutes\"}\r\n                        </DialogContentText>\r\n                        <br />\r\n                        <Slider\r\n                            valueLabelDisplay=\"auto\"\r\n                            marks={marks}\r\n                            aria-labelledby=\"discrete-slider\"\r\n                            getAriaValueText={(value) => `${value} Minutes`}\r\n                            value={\r\n                                edit\r\n                                    ? getDuration(\r\n                                          editingAppointment.startDate,\r\n                                          editingAppointment.endDate\r\n                                      )\r\n                                    : getDuration(startDate, endDate)\r\n                            }\r\n                            onChange={(e, newValue) => {\r\n                                if (edit) {\r\n                                    setEditingAppointment({\r\n                                        ...editingAppointment,\r\n                                        endDate: getEndDate(\r\n                                            editingAppointment.startDate,\r\n                                            newValue\r\n                                        ),\r\n                                    });\r\n                                    return;\r\n                                }\r\n                                setEndDate(getEndDate(startDate, newValue));\r\n                            }}\r\n                            step={15}\r\n                            max={300}\r\n                        />\r\n                        <br />\r\n                        <br />\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <RoomIcon className={classes.icon} />\r\n                    </Grid>\r\n                    <Grid item xs={11}>\r\n                        <TextField\r\n                            label=\"Location\"\r\n                            variant=\"filled\"\r\n                            required\r\n                            value={\r\n                                edit ? editingAppointment.location : location\r\n                            }\r\n                            onChange={(e) => {\r\n                                if (edit) {\r\n                                    setEditingAppointment({\r\n                                        ...editingAppointment,\r\n                                        location: e.target.value,\r\n                                    });\r\n                                    return;\r\n                                }\r\n                                setLocation(e.target.value);\r\n                            }}\r\n                            fullWidth\r\n                        />\r\n                        <DialogContentText></DialogContentText>\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <br />\r\n                        <GroupIcon className={classes.icon} />\r\n                    </Grid>\r\n                    <Grid item xs={11}>\r\n                        <DialogContentText>\r\n                            Slot Available:{\" \"}\r\n                            {edit ? editingAppointment.slotsAvailable : slot}\r\n                        </DialogContentText>\r\n                        <br />\r\n                        <SlotSlider\r\n                            valueLabelDisplay=\"auto\"\r\n                            aria-label=\"pretto slider\"\r\n                            aria-labelledby=\"discrete-slider\"\r\n                            value={\r\n                                edit ? editingAppointment.slotsAvailable : slot\r\n                            }\r\n                            onChange={(e, newValue) => {\r\n                                if (edit) {\r\n                                    setEditingAppointment({\r\n                                        ...editingAppointment,\r\n                                        slotsAvailable: newValue,\r\n                                    });\r\n                                }\r\n                                setSlot(newValue);\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogContent>\r\n\r\n            <DialogActions>\r\n                {edit ? (\r\n                    <ButtonGroup fullWidth>\r\n                        <DeleteButton\r\n                            fullWidth\r\n                            onClick={() => {\r\n                                toggle();\r\n                                deleteTime().then((res) => {\r\n                                    setLoading(false);\r\n                                });\r\n                            }}\r\n                            className={classes.delete}\r\n                        >\r\n                            Delete\r\n                        </DeleteButton>\r\n                        <Button\r\n                            fullWidth\r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                            onClick={() => {\r\n                                editTime().then((res) => {\r\n                                    setLoading(false);\r\n                                });\r\n                            }}\r\n                        >\r\n                            Update\r\n                        </Button>\r\n                    </ButtonGroup>\r\n                ) : (\r\n                    <ButtonGroup fullWidth>\r\n                        <Button fullWidth onClick={toggle}>\r\n                            Cancel\r\n                        </Button>\r\n                        <Button\r\n                            fullWidth\r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                            onClick={() => {\r\n                                createTime().then((res) => {\r\n                                    setLoading(false);\r\n                                });\r\n                            }}\r\n                        >\r\n                            Create\r\n                        </Button>\r\n                    </ButtonGroup>\r\n                )}\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { AppointmentTooltip } from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { StaffContext } from \"../Methods\";\r\n\r\nconst style = ({ palette }) => ({\r\n\ticon: {\r\n\t\tcolor: palette.action.active,\r\n\t},\r\n\ttextCenter: {\r\n\t\ttextAlign: \"center\",\r\n\t},\r\n\theader: {\r\n\t\theight: \"260px\",\r\n\t\tbackgroundSize: \"cover\",\r\n\t},\r\n});\r\n\r\n/***\r\n * Customized timetable header for consultation (staff).\r\n */\r\nexport default withStyles(style, { name: \"Header\" })(\r\n\t({ children, appointmentData, classes, ...restProps }) => {\r\n\t\tconst { setEditOpen, setEditingAppointment } = useContext(StaffContext);\r\n\r\n\t\treturn (\r\n\t\t\t<AppointmentTooltip.Header\r\n\t\t\t\t{...restProps}\r\n\t\t\t\tappointmentData={appointmentData}\r\n\t\t\t\tshowCloseButton\r\n\t\t\t\tshowOpenButton\r\n\t\t\t\tonOpenButtonClick={() => {\r\n\t\t\t\t\tsetEditOpen(true);\r\n\t\t\t\t\tsetEditingAppointment(appointmentData);\r\n\t\t\t\t}}\r\n\t\t\t></AppointmentTooltip.Header>\r\n\t\t);\r\n\t}\r\n);\r\n","import React from \"react\";\r\nimport { AppointmentTooltip } from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n\tGrid,\r\n\tList,\r\n\tListItem,\r\n\tListItemIcon,\r\n\tListItemText,\r\n\tBadge,\r\n} from \"@material-ui/core\";\r\nimport RoomIcon from \"@material-ui/icons/Room\";\r\nimport EqualizerIcon from \"@material-ui/icons/Equalizer\";\r\nimport LibraryAddIcon from \"@material-ui/icons/LibraryAdd\";\r\nimport SupervisorAccountIcon from \"@material-ui/icons/SupervisorAccount\";\r\n\r\nconst style = ({ palette, spacing }) => ({\r\n\ticon: {\r\n\t\tcolor: palette.action.active,\r\n\t\tmarginLeft: spacing(1),\r\n\t},\r\n\ttextCenter: {\r\n\t\ttextAlign: \"center\",\r\n\t},\r\n\theader: {\r\n\t\theight: \"260px\",\r\n\t\tbackgroundSize: \"cover\",\r\n\t},\r\n\tcommandButton: {\r\n\t\tbackgroundColor: \"rgba(255,255,100,0.65)\",\r\n\t},\r\n\tleft: {\r\n\t\tmarginLeft: spacing(1),\r\n\t},\r\n});\r\n\r\n/***\r\n * Customized timetable content for consultation feature (staff)\r\n */\r\nexport default withStyles(style, { name: \"Content\" })(\r\n\t({ children, appointmentData, classes, ...restProps }) => {\r\n\t\treturn (\r\n\t\t\t<AppointmentTooltip.Content\r\n\t\t\t\t{...restProps}\r\n\t\t\t\tappointmentData={appointmentData}\r\n\t\t\t>\r\n\t\t\t\t<Grid container justify=\"center\">\r\n\t\t\t\t\t<Grid item xs={11}>\r\n\t\t\t\t\t\t<List>\r\n\t\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t<RoomIcon />\r\n\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\t\tprimary=\"Location\"\r\n\t\t\t\t\t\t\t\t\tsecondary={appointmentData.location}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t<SupervisorAccountIcon />\r\n\t\t\t\t\t\t\t\t</ListItemIcon>{\" \"}\r\n\t\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\t\tprimary=\"Slots Available\"\r\n\t\t\t\t\t\t\t\t\tsecondary=\" \"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\t\t\tbadgeContent={\r\n\t\t\t\t\t\t\t\t\t\t\tappointmentData.slotsAvailable\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\tshowZero\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<EqualizerIcon />\r\n\t\t\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t<LibraryAddIcon />\r\n\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\r\n\t\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\t\tprimary=\"Student Registered\"\r\n\t\t\t\t\t\t\t\t\tsecondary=\" \"\r\n\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\t\t\tbadgeContent={\r\n\t\t\t\t\t\t\t\t\t\t\tappointmentData.totalStudent\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\tshowZero\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<EqualizerIcon />\r\n\t\t\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t</List>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</AppointmentTooltip.Content>\r\n\t\t);\r\n\t}\r\n);\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Fab, Zoom, Fade } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TimeTable from \"../Timetable\";\r\nimport ConsultDialog from \"./ConsultDialog\";\r\nimport Header from \"./StaffHeader\";\r\nimport Content from \"./StaffContent\";\r\nimport { myFetch, UserContext, StaffContext } from \"../Methods\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        maxWidth: \"100%\",\r\n        marginTop: theme.spacing(10),\r\n    },\r\n    fab: {\r\n        position: \"fixed\",\r\n        bottom: theme.spacing(1) * 6,\r\n        right: theme.spacing(1) * 6,\r\n    },\r\n}));\r\n\r\n/***\r\n * Consultation page for staff\r\n */\r\nexport default () => {\r\n    const classes = useStyles();\r\n\r\n    const [data, setData] = useState([]);\r\n\r\n    //timetable values...\r\n    const [currentDate, setCurrentDate] = useState(\"2020-5-11\");\r\n    const [createOpen, setCreateOpen] = useState(false);\r\n    const [editOpen, setEditOpen] = useState(false);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    //Consultation details for editing.\r\n    const [editingAppointment, setEditingAppointment] = useState({\r\n        title: \"\",\r\n        startDate: new Date(),\r\n        endDate: new Date(),\r\n        slotsAvailable: 0,\r\n        location: \"\",\r\n    });\r\n\r\n    //Updating consultations Information.\r\n    const { alert, user } = useContext(UserContext);\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        //Fetch all created consultations.\r\n        const fetchConsult = async () => {\r\n            const res = await myFetch(\"/api/staff/consult/viewCreated\", \"GET\");\r\n            return res.consultations;\r\n        };\r\n        fetchConsult().then((consultations) => {\r\n            const consults = [];\r\n            consultations.map((consultation) => {\r\n                consults.push({\r\n                    title: consultation.subjectCode,\r\n                    startDate: new Date(consultation.startDate),\r\n                    endDate: new Date(consultation.endDate),\r\n                    id: consultation._id,\r\n                    location: consultation.location,\r\n                    slotsAvailable: consultation.slotsAvailable,\r\n                    totalStudent: consultation.studentRegistered.length,\r\n                });\r\n            });\r\n            setData(consults);\r\n            setLoading(false);\r\n        });\r\n    }, [alert.status]);\r\n\r\n    //Backend APIs.\r\n    const api = {\r\n        create: \"/api/staff/consult/create\",\r\n        edit: \"/api/staff/consult/patch\",\r\n        delete: \"/api/staff/consult/delete\",\r\n    };\r\n\r\n    return (\r\n        <StaffContext.Provider\r\n            value={{\r\n                currentDate,\r\n                setCurrentDate,\r\n                createOpen,\r\n                setCreateOpen,\r\n                data,\r\n                setData,\r\n                editOpen,\r\n                setEditOpen,\r\n                setEditingAppointment,\r\n                editingAppointment,\r\n                loading,\r\n                setLoading,\r\n                api,\r\n            }}\r\n        >\r\n            <Fade in timeout={500}>\r\n                <div>\r\n                    <TimeTable\r\n                        data={data}\r\n                        currentDate={currentDate}\r\n                        setCurrentDate={setCurrentDate}\r\n                        header={Header}\r\n                        content={Content}\r\n                        loading={loading}\r\n                        mainResourceName=\"title\"\r\n                        subjects={user.userInfo.subjects}\r\n                    />\r\n                    <ConsultDialog\r\n                        open={createOpen}\r\n                        toggle={() => {\r\n                            setCreateOpen(!createOpen);\r\n                        }}\r\n                    />\r\n                    <ConsultDialog\r\n                        open={editOpen}\r\n                        editingAppointment={editingAppointment}\r\n                        toggle={() => {\r\n                            setEditOpen(!editOpen);\r\n                            setEditingAppointment({\r\n                                title: \"\",\r\n                                startDate: new Date(),\r\n                                endDate: new Date(),\r\n                                slotsAvailable: 0,\r\n                                location: \"\",\r\n                            });\r\n                        }}\r\n                        edit\r\n                        context={StaffContext}\r\n                    />\r\n                </div>\r\n            </Fade>\r\n            <Zoom in timeout={1000}>\r\n                <Fab\r\n                    color=\"primary\"\r\n                    className={classes.fab}\r\n                    onClick={() => {\r\n                        setCreateOpen(true);\r\n                    }}\r\n                >\r\n                    <AddIcon />\r\n                </Fab>\r\n            </Zoom>\r\n        </StaffContext.Provider>\r\n    );\r\n};\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { UserContext } from \"../Methods\";\r\nimport Layout from \"../Navigation/Layout\";\r\nimport Student from \"./Student\";\r\nimport Staff from \"./Staff\";\r\n\r\n/**\r\n * Consultation page for student and staff.\r\n */\r\nexport default () => {\r\n\tconst {\r\n\t\tsetSelectedRoute,\r\n\t\tloadingRoute,\r\n\t\tsetLoadingRoute,\r\n\t\tfetchUser,\r\n\t\tuser,\r\n\t} = useContext(UserContext);\r\n\r\n\t//Set up\r\n\tuseEffect(() => {\r\n\t\tsetSelectedRoute(\"consultations\");\r\n\t\tfetchUser().then(() => setLoadingRoute(false));\r\n\t}, []);\r\n\r\n\t//Loading...\r\n\tif (loadingRoute || !user.type) return <Layout />;\r\n\r\n\treturn (\r\n\t\t<Layout\r\n\t\t\tcontent={user.type === \"student\" ? <Student /> : <Staff />}\r\n\t\t\ttype={user.type}\r\n\t\t/>\r\n\t);\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    TextField,\r\n} from \"@material-ui/core\";\r\nimport { myFetch, UserContext } from \"../Methods\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\n/***\r\n * Dialog for joining a subject for both student and staff.\r\n */\r\nexport default ({\r\n    open,\r\n    subjectCode,\r\n    setSubjectCode,\r\n    handleDialogClose,\r\n    userType,\r\n}) => {\r\n    const { detectAlert, setLoadingRoute } = useContext(UserContext);\r\n    const [allSubjects, setAllSubjects] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAllSubject = async () => {\r\n            const res = await myFetch(\"/api/shared/users/allSubjects\", \"GET\");\r\n            setAllSubjects(res.subjectList);\r\n            detectAlert(res);\r\n        };\r\n        fetchAllSubject();\r\n    }, []);\r\n\r\n    const GetField = () => {\r\n        return (\r\n            <Autocomplete\r\n                id=\"addSubject\"\r\n                options={allSubjects}\r\n                getOptionLabel={(option) => option}\r\n                value={subjectCode}\r\n                onChange={(event, newValue) => {\r\n                    setSubjectCode(newValue);\r\n                }}\r\n                renderInput={(params) => {\r\n                    return (\r\n                        <TextField\r\n                            {...params}\r\n                            label=\"Please choose a subject\"\r\n                            variant=\"filled\"\r\n                            required\r\n                        />\r\n                    );\r\n                }}\r\n            />\r\n        );\r\n    };\r\n\r\n    //Join a subject.\r\n    const join = async (e) => {\r\n        e.preventDefault();\r\n        let url = \"/api/student/subjects/join\";\r\n        if (userType === \"staff\") url = \"/api/staff/subjects/join\";\r\n        setLoadingRoute(true);\r\n        const res = await myFetch(url, \"POST\", {\r\n            subjectCode: subjectCode,\r\n        });\r\n        detectAlert(\r\n            res,\r\n            `You have successfully joined subject ${subjectCode}.`\r\n        );\r\n\r\n        setLoadingRoute(false);\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={handleDialogClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n            fullWidth\r\n        >\r\n            <DialogTitle id=\"form-dialog-title\">Join a new Subject</DialogTitle>\r\n            <DialogContent>\r\n                <GetField />\r\n            </DialogContent>\r\n\r\n            <DialogActions>\r\n                <Button fullWidth onClick={handleDialogClose}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    fullWidth\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    onClick={join}\r\n                >\r\n                    Join\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n    Grid,\r\n    Typography,\r\n    Tooltip,\r\n    Fab,\r\n    IconButton,\r\n    List,\r\n    ListItem,\r\n    ListItemAvatar,\r\n    ListItemSecondaryAction,\r\n    ListItemText,\r\n    Avatar,\r\n    Grow,\r\n    Divider,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SchoolIcon from \"@material-ui/icons/School\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Add from \"./Add\";\r\nimport { myFetch, UserContext } from \"../Methods\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        maxWidth: \"100%\",\r\n        marginTop: theme.spacing(10),\r\n    },\r\n    fab: {\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            position: \"fixed\",\r\n            bottom: theme.spacing(1) * 10,\r\n            right: theme.spacing(1) * 8,\r\n        },\r\n        [theme.breakpoints.down(\"lg\")]: {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    },\r\n}));\r\n\r\n/***\r\n * Setting page for student.\r\n */\r\nexport default ({ user, setMySubjects, mySubjects }) => {\r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [subjectCode, setSubjectCode] = useState(\"\");\r\n\r\n    const {\r\n        setLoadingRoute,\r\n        alert,\r\n\r\n        detectAlert,\r\n    } = useContext(UserContext);\r\n\r\n    //Loading subjects information.\r\n    useEffect(() => {\r\n        const fetchMySubject = async () => {\r\n            const res = await myFetch(\"/api/student/subjects/all\", \"GET\");\r\n            detectAlert(res);\r\n            setMySubjects(res);\r\n        };\r\n\r\n        fetchMySubject();\r\n    }, [alert.status]);\r\n\r\n    //Leave a subject.\r\n    const leave = async (subjectCode) => {\r\n        setLoadingRoute(true);\r\n        const res = await myFetch(\"/api/student/subjects/leave\", \"POST\", {\r\n            subjectCode: subjectCode,\r\n        });\r\n        detectAlert(res, `You have successfully left subject ${subjectCode}.`);\r\n\r\n        setLoadingRoute(false);\r\n    };\r\n\r\n    //Loading...\r\n    if (!mySubjects.subjectsInfo) return null;\r\n\r\n    return (\r\n        <div>\r\n            <Add\r\n                open={open}\r\n                handleDialogClose={() => {\r\n                    setOpen(false);\r\n                }}\r\n                subjectCode={subjectCode}\r\n                setSubjectCode={setSubjectCode}\r\n                userType=\"student\"\r\n            />\r\n            <Grid container justify=\"center\" alignItems=\"center\">\r\n                <Grid item xs={12}>\r\n                    <Typography\r\n                        variant=\"h5\"\r\n                        style={{ fontWeight: 900, color: \"#455a64\" }}\r\n                    >\r\n                        Your current subject list:\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    {mySubjects.subjectsInfo.map(\r\n                        ({ subjectCode, subjectName }, index) => (\r\n                            <Grow in timeout={index + 1 * 500} key={index}>\r\n                                <List>\r\n                                    <Divider />\r\n                                    <ListItem>\r\n                                        <ListItemAvatar>\r\n                                            <Avatar>\r\n                                                <SchoolIcon />\r\n                                            </Avatar>\r\n                                        </ListItemAvatar>\r\n                                        <ListItemText\r\n                                            primary={subjectCode}\r\n                                            secondary={subjectName}\r\n                                        />\r\n                                        <ListItemSecondaryAction>\r\n                                            <IconButton\r\n                                                edge=\"end\"\r\n                                                aria-label=\"delete\"\r\n                                                onClick={() => {\r\n                                                    leave(subjectCode);\r\n                                                }}\r\n                                            >\r\n                                                <DeleteIcon />\r\n                                            </IconButton>\r\n                                        </ListItemSecondaryAction>\r\n                                    </ListItem>\r\n                                    <Divider />\r\n                                </List>\r\n                            </Grow>\r\n                        )\r\n                    )}\r\n                </Grid>\r\n                <Tooltip title=\"Join new subject\" aria-label=\"add\">\r\n                    <Fab\r\n                        color=\"primary\"\r\n                        size=\"large\"\r\n                        className={classes.fab}\r\n                        onClick={() => {\r\n                            setOpen(true);\r\n                        }}\r\n                    >\r\n                        <AddIcon />\r\n                    </Fab>\r\n                </Tooltip>\r\n            </Grid>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    TextField,\r\n} from \"@material-ui/core\";\r\nimport { UserContext, myFetch } from \"../Methods\";\r\n\r\n/***\r\n * Dialog to create a consultation.\r\n */\r\nexport default ({\r\n    open,\r\n    subjectCode,\r\n    setSubjectCode,\r\n    subjectName,\r\n    setSubjectName,\r\n    handleDialogClose,\r\n    setError,\r\n    setAdded,\r\n}) => {\r\n    const { detectAlert, setAlert, setLoadingRoute } = useContext(UserContext);\r\n\r\n    //Create a subject in subject account.\r\n    const create = async () => {\r\n        if (subjectCode.length !== 9) {\r\n            setAlert({\r\n                status: \"warning\",\r\n                message:\r\n                    \"UniMelb subject code must have a length of 9 letters.\",\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (subjectName.length > 100) {\r\n            setAlert({\r\n                status: \"warning\",\r\n                message: \"Subject name too long.\",\r\n            });\r\n            return;\r\n        }\r\n\r\n        const verify = /[A-Z]{4}[0-9]{5}/;\r\n        if (!verify.test(subjectCode)) {\r\n            setAlert({\r\n                status: \"warning\",\r\n                message: \"Invalid form of subjectCode.\",\r\n            });\r\n            return;\r\n        }\r\n        setLoadingRoute(true);\r\n\r\n        const res = await myFetch(\"/api/staff/subjects/create\", \"POST\", {\r\n            subjectCode: subjectCode,\r\n            subjectName: subjectName,\r\n        });\r\n        detectAlert(\r\n            res,\r\n            `You have successfully created subject ${subjectCode}.`\r\n        );\r\n\r\n        setLoadingRoute(false);\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={handleDialogClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n            fullWidth\r\n        >\r\n            <DialogTitle id=\"form-dialog-title\">\r\n                Create a new Subject\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <TextField\r\n                    label=\"Subject Code\"\r\n                    required\r\n                    onChange={(event) => {\r\n                        setSubjectCode(event.target.value);\r\n                    }}\r\n                    fullWidth\r\n                />\r\n                <br />\r\n                <br />\r\n\r\n                <TextField\r\n                    label=\"Subject Name\"\r\n                    required\r\n                    onChange={(event) => {\r\n                        setSubjectName(event.target.value);\r\n                    }}\r\n                    fullWidth\r\n                />\r\n            </DialogContent>\r\n\r\n            <DialogActions>\r\n                <Button fullWidth onClick={handleDialogClose}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    fullWidth\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    onClick={create}\r\n                >\r\n                    Create\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n    Grid,\r\n    Typography,\r\n    IconButton,\r\n    List,\r\n    ListItem,\r\n    ListItemAvatar,\r\n    ListItemSecondaryAction,\r\n    ListItemText,\r\n    Avatar,\r\n    Grow,\r\n    Divider,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport SchoolIcon from \"@material-ui/icons/School\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\n\r\nimport SpeedDial from \"@material-ui/lab/SpeedDial\";\r\nimport SpeedDialIcon from \"@material-ui/lab/SpeedDialIcon\";\r\nimport SpeedDialAction from \"@material-ui/lab/SpeedDialAction\";\r\n\r\nimport { myFetch, UserContext } from \"../Methods\";\r\nimport Add from \"./Add\";\r\nimport Create from \"./Create\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    fab: {\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            position: \"fixed\",\r\n            bottom: theme.spacing(1) * 10,\r\n            right: theme.spacing(1) * 8,\r\n        },\r\n    },\r\n}));\r\n\r\n/***\r\n * The setting page for a staff.\r\n */\r\nexport default ({ user, setMySubjects, mySubjects, fetchSubject }) => {\r\n    const classes = useStyles();\r\n    const [openJoin, setOpenJoin] = useState(false);\r\n    const [openCreate, setOpenCreate] = useState(false);\r\n    const [openSpeed, setOpenSpeed] = useState(false);\r\n    const [subjectCode, setSubjectCode] = useState(\"\");\r\n    const [newName, setNewName] = useState(\"\");\r\n\r\n    const {\r\n        setLoadingRoute,\r\n        alert,\r\n        setAlert,\r\n        detectAlert,\r\n        closeAlert,\r\n    } = useContext(UserContext);\r\n\r\n    useEffect(() => {\r\n        fetchSubject(\"staff\").then(setLoadingRoute(false));\r\n    }, [alert.status]);\r\n\r\n    const handleJoinOpen = () => {\r\n        if (mySubjects.subjectsInfo.length > 4) {\r\n            setAlert({\r\n                status: \"warning\",\r\n                message: \"Maximum 5 subjects in your account.\",\r\n            });\r\n            return;\r\n        }\r\n        setOpenJoin(true);\r\n    };\r\n\r\n    //Leave a subject.\r\n    const leave = async (subjectCode) => {\r\n        setLoadingRoute(true);\r\n        const res = await myFetch(\"/api/staff/subjects/leave\", \"POST\", {\r\n            subjectCode: subjectCode,\r\n        });\r\n        detectAlert(res, `You have successfully left subject ${subjectCode}.`);\r\n\r\n        setLoadingRoute(false);\r\n    };\r\n\r\n    //Loading...\r\n    if (!mySubjects.subjectsInfo) return null;\r\n\r\n    return (\r\n        <div>\r\n            <Add\r\n                open={openJoin}\r\n                handleDialogClose={() => {\r\n                    setOpenJoin(false);\r\n                }}\r\n                subjectCode={subjectCode}\r\n                setSubjectCode={setSubjectCode}\r\n                userType=\"staff\"\r\n            />\r\n            <Create\r\n                open={openCreate}\r\n                handleDialogClose={() => {\r\n                    setOpenCreate(false);\r\n                }}\r\n                subjectCode={subjectCode}\r\n                setSubjectCode={setSubjectCode}\r\n                subjectName={newName}\r\n                setSubjectName={setNewName}\r\n            />\r\n            <Grid container justify=\"center\" alignItems=\"center\">\r\n                <Grid item xs={12}>\r\n                    <Typography\r\n                        variant=\"h5\"\r\n                        style={{ fontWeight: 900, color: \"#455a64\" }}\r\n                    >\r\n                        Your current subject list:\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    {mySubjects.subjectsInfo.map(\r\n                        ({ subjectCode, subjectName }, index) => (\r\n                            <Grow in timeout={index + 1 * 200} key={index}>\r\n                                <List>\r\n                                    <Divider />\r\n                                    <ListItem>\r\n                                        <ListItemAvatar>\r\n                                            <Avatar>\r\n                                                <SchoolIcon />\r\n                                            </Avatar>\r\n                                        </ListItemAvatar>\r\n                                        <ListItemText\r\n                                            primary={subjectCode}\r\n                                            secondary={subjectName}\r\n                                        />\r\n                                        <ListItemSecondaryAction>\r\n                                            <IconButton\r\n                                                edge=\"end\"\r\n                                                aria-label=\"delete\"\r\n                                                onClick={() => {\r\n                                                    leave(subjectCode);\r\n                                                }}\r\n                                            >\r\n                                                <DeleteIcon />\r\n                                            </IconButton>\r\n                                        </ListItemSecondaryAction>\r\n                                    </ListItem>\r\n                                    <Divider />\r\n                                </List>\r\n                            </Grow>\r\n                        )\r\n                    )}\r\n                    <Grid item xs={12}>\r\n                        <SpeedDial\r\n                            ariaLabel=\"SpeedDial example\"\r\n                            className={classes.fab}\r\n                            icon={<SpeedDialIcon />}\r\n                            open={openSpeed}\r\n                            onClose={() => {\r\n                                setOpenSpeed(false);\r\n                            }}\r\n                            onOpen={() => {\r\n                                setOpenSpeed(true);\r\n                            }}\r\n                            direction=\"up\"\r\n                        >\r\n                            <SpeedDialAction\r\n                                icon={<AddIcon />}\r\n                                tooltipTitle=\"Join new subject\"\r\n                                onClick={handleJoinOpen}\r\n                            />\r\n                            <SpeedDialAction\r\n                                icon={<CreateIcon />}\r\n                                tooltipTitle=\"Create new subject\"\r\n                                onClick={() => {\r\n                                    closeAlert();\r\n                                    setOpenCreate(true);\r\n                                }}\r\n                            />\r\n                        </SpeedDial>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { UserContext } from \"../Methods\";\r\nimport Layout from \"../Navigation/Layout\";\r\nimport { myFetch } from \"../Methods\";\r\nimport Student from \"./Student\";\r\nimport Staff from \"./Staff\";\r\n\r\n/***\r\n * The setting page.\r\n */\r\nexport default () => {\r\n    const [subjectInfo, setSubjectInfo] = useState({});\r\n    const {\r\n        setSelectedRoute,\r\n        setLoadingRoute,\r\n        loadingRoute,\r\n        detectAlert,\r\n        fetchUser,\r\n        user,\r\n    } = useContext(UserContext);\r\n\r\n    //Loading subject information.\r\n    const fetchSubject = async (type) => {\r\n        if (type === \"student\") {\r\n            const res = await myFetch(\"/api/student/subjects/all\", \"GET\");\r\n            setSubjectInfo(res);\r\n            detectAlert(res);\r\n            if (res.success) setLoadingRoute(false);\r\n        } else {\r\n            const res = await myFetch(\"/api/staff/subjects/all\", \"GET\");\r\n            setSubjectInfo(res);\r\n            detectAlert(res);\r\n            if (res.success) setLoadingRoute(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        //Set Navigation to this page.\r\n        setSelectedRoute(\"settings\");\r\n        setLoadingRoute(true);\r\n\r\n        const fetchData = async () => {\r\n            const res = await fetchUser();\r\n            if (res.success) {\r\n                detectAlert(\r\n                    res,\r\n                    false,\r\n                    `Welcome back! ${res.type} ${res.userInfo.firstName} ${res.userInfo.lastName}`\r\n                );\r\n            }\r\n\r\n            fetchSubject(res.type).then(() => setLoadingRoute(false));\r\n        };\r\n        fetchData();\r\n    }, []);\r\n\r\n    //Loading.\r\n    if (loadingRoute || !user.type) {\r\n        return <Layout />;\r\n    }\r\n\r\n    return (\r\n        <Layout\r\n            content={\r\n                user.type === \"student\" ? (\r\n                    <Student\r\n                        user={user}\r\n                        mySubjects={subjectInfo}\r\n                        setMySubjects={setSubjectInfo}\r\n                    />\r\n                ) : (\r\n                    <Staff\r\n                        user={user}\r\n                        mySubjects={subjectInfo}\r\n                        setMySubjects={setSubjectInfo}\r\n                        fetchSubject={fetchSubject}\r\n                    />\r\n                )\r\n            }\r\n            type={user.type}\r\n        />\r\n    );\r\n};\r\n","import React, { useContext, useState } from \"react\";\r\nimport {\r\n\tCardContent,\r\n\tIconButton,\r\n\tCard,\r\n\tCardHeader,\r\n\tList,\r\n\tListItem,\r\n\tCollapse,\r\n\tListItemIcon,\r\n\tListItemText,\r\n\tAvatar,\r\n\tGrow,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { green, lightBlue } from \"@material-ui/core/colors\";\r\nimport { myFetch, UserContext } from \"../Methods\";\r\nimport {\r\n\tKeyboardTimePicker,\r\n\tMuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\nimport MomentUtils from \"@date-io/moment\";\r\nimport RoomIcon from \"@material-ui/icons/Room\";\r\nimport AutorenewIcon from \"@material-ui/icons/Autorenew\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport AccessAlarmIcon from \"@material-ui/icons/AccessAlarm\";\r\nimport BlockIcon from \"@material-ui/icons/Block\";\r\nimport AddIcon from \"@material-ui/icons/PlaylistAdd\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tpaper: {\r\n\t\tmaxWidth: \"100%\",\r\n\t\tmarginTop: theme.spacing(10),\r\n\t},\r\n\tcardHeader: {\r\n\t\tbackground: theme.palette.primary,\r\n\t},\r\n\tregistered: {\r\n\t\tbackground: green[100],\r\n\t},\r\n\tnormal: {\r\n\t\tbackground: lightBlue[100],\r\n\t},\r\n}));\r\n\r\n/***\r\n * Action buttons for create/leave.\r\n */\r\nconst getAction = (hub, user, setDeleteHub, join) => {\r\n\tif (hub.creator.email == user.userInfo.email)\r\n\t\treturn (\r\n\t\t\t<IconButton onClick={() => setDeleteHub(hub.id)}>\r\n\t\t\t\t<DeleteIcon />\r\n\t\t\t</IconButton>\r\n\t\t);\r\n\tif (hub.registered)\r\n\t\treturn (\r\n\t\t\t<IconButton onClick={() => setDeleteHub(hub.id)}>\r\n\t\t\t\t<BlockIcon />\r\n\t\t\t</IconButton>\r\n\t\t);\r\n\treturn (\r\n\t\t<IconButton\r\n\t\t\tonClick={() => {\r\n\t\t\t\tjoin(hub.id);\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<AddIcon />\r\n\t\t</IconButton>\r\n\t);\r\n};\r\n\r\n/***\r\n * Card for displaying a Study hub.\r\n */\r\nexport default ({\r\n\thub,\r\n\tloading,\r\n\ttime,\r\n\tsetDeleteHub,\r\n\tsetLoading,\r\n\tsetHubs,\r\n\tfetchHubs,\r\n\tcurrentSubject,\r\n\tdetectAlert,\r\n\tuserInfo,\r\n}) => {\r\n\tconst classes = useStyles();\r\n\r\n\tconst [openStudent, setOpenStudent] = useState(false);\r\n\r\n\tconst { user } = useContext(UserContext);\r\n\r\n\t//Join a study hub.\r\n\tconst join = async (id) => {\r\n\t\tsetLoading(true);\r\n\r\n\t\tconst res = await myFetch(\"/api/student/hub/join\", \"POST\", {\r\n\t\t\tid: id,\r\n\t\t});\r\n\t\tdetectAlert(res, \"Successfully joined.\");\r\n\r\n\t\tconst subjectHubs = await await fetchHubs(\r\n\t\t\tcurrentSubject,\r\n\t\t\tdetectAlert,\r\n\t\t\tsetLoading,\r\n\t\t\tuserInfo\r\n\t\t);\r\n\t\tif (!subjectHubs) return;\r\n\t\tsetHubs(subjectHubs);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Grow in={!loading} timeout={time}>\r\n\t\t\t<Card>\r\n\t\t\t\t<CardHeader\r\n\t\t\t\t\ttitle={hub.summary}\r\n\t\t\t\t\tsubheader={`${hub.creator.firstName} ${hub.creator.lastName}(${hub.creator.email})`}\r\n\t\t\t\t\tclassName={\r\n\t\t\t\t\t\thub.registered ? classes.registered : classes.normal\r\n\t\t\t\t\t}\r\n\t\t\t\t\tavatar={<Avatar>{hub.creator.lastName.charAt(0)}</Avatar>}\r\n\t\t\t\t\taction={getAction(hub, user, setDeleteHub, join)}\r\n\t\t\t\t/>\r\n\t\t\t\t<CardContent>\r\n\t\t\t\t\t<List>\r\n\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\tbutton\r\n\t\t\t\t\t\t\tonClick={() => setOpenStudent(!openStudent)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t<PeopleIcon />\r\n\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t<ListItemText primary=\"Members\" />\r\n\t\t\t\t\t\t\t{openStudent ? <ExpandLess /> : <ExpandMore />}\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t<Collapse in={openStudent} timeout=\"auto\" unmountOnExit>\r\n\t\t\t\t\t\t\t<List component=\"div\" disablePadding>\r\n\t\t\t\t\t\t\t\t<div className={classes.scroll}>\r\n\t\t\t\t\t\t\t\t\t{hub.students.map((student, index) => (\r\n\t\t\t\t\t\t\t\t\t\t<ListItem key={index}>\r\n\t\t\t\t\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<AccountCircleIcon />\r\n\t\t\t\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\t\t\t\t\tprimary={`${student.firstName} ${student.lastName}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsecondary={student.email}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</List>\r\n\t\t\t\t\t\t</Collapse>\r\n\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t<AccessAlarmIcon />\r\n\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\tprimary={`Let's meet up every ${hub.day} at:`}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ListItem>\r\n\r\n\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t<AutorenewIcon />\r\n\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t<MuiPickersUtilsProvider utils={MomentUtils}>\r\n\t\t\t\t\t\t\t\t<KeyboardTimePicker\r\n\t\t\t\t\t\t\t\t\topenTo=\"hours\"\r\n\t\t\t\t\t\t\t\t\tvalue={hub.startDate}\r\n\t\t\t\t\t\t\t\t\tonChange={() => {}}\r\n\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</MuiPickersUtilsProvider>\r\n\t\t\t\t\t\t</ListItem>\r\n\r\n\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t<RoomIcon />\r\n\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\tprimary=\"Location\"\r\n\t\t\t\t\t\t\t\tsecondary={hub.location}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t</List>\r\n\t\t\t\t</CardContent>\r\n\t\t\t</Card>\r\n\t\t</Grow>\r\n\t);\r\n};\r\n","import React, { useState } from \"react\";\r\nimport {\r\n\tGrid,\r\n\tButton,\r\n\tDialog,\r\n\tDialogTitle,\r\n\tDialogActions,\r\n\tDialogContent,\r\n\tSlider,\r\n\tTextField,\r\n\tDialogContentText,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { myFetch } from \"../Methods\";\r\nimport {\r\n\tKeyboardTimePicker,\r\n\tMuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\nimport MomentUtils from \"@date-io/moment\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nimport RoomIcon from \"@material-ui/icons/Room\";\r\nimport SchoolIcon from \"@material-ui/icons/School\";\r\nimport ScheduleIcon from \"@material-ui/icons/Schedule\";\r\nimport GroupIcon from \"@material-ui/icons/GroupAddTwoTone\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tpaper: {\r\n\t\tmaxWidth: \"100%\",\r\n\t\tmarginTop: theme.spacing(10),\r\n\t},\r\n\thub: {\r\n\t\tmarginTop: theme.spacing(5),\r\n\t},\r\n\tfab: {\r\n\t\tposition: \"fixed\",\r\n\t\tbottom: theme.spacing(1) * 10,\r\n\t\tright: theme.spacing(1) * 8,\r\n\t},\r\n\ticon: {\r\n\t\tmargin: \"auto\",\r\n\t},\r\n}));\r\n\r\n/***\r\n * Marks for duration slider.\r\n */\r\nconst marks = [\r\n\t{\r\n\t\tvalue: 0,\r\n\t\tlabel: \"0 Minutes\",\r\n\t},\r\n\t{\r\n\t\tvalue: 60,\r\n\t\tlabel: \"1 hour\",\r\n\t},\r\n\t{\r\n\t\tvalue: 120,\r\n\t\tlabel: \"2 hours\",\r\n\t},\r\n\t{\r\n\t\tvalue: 240,\r\n\t\tlabel: \"4 hours\",\r\n\t},\r\n];\r\n\r\n/***\r\n * Dialog for creating a study hub.\r\n */\r\nexport default ({\r\n\topen,\r\n\tsetOpen,\r\n\tsetLoading,\r\n\tsubjects,\r\n\tfetchHubs,\r\n\tuserInfo,\r\n\tsetAlert,\r\n\tdetectAlert,\r\n\tsetHubs,\r\n\tcurrentSubject,\r\n}) => {\r\n\tconst classes = useStyles();\r\n\r\n\t//Study hub details.\r\n\tconst [subjectCode, setSubjectCode] = useState(subjects[0]);\r\n\tconst [startDate, setStartDate] = useState(new Date());\r\n\tconst [location, setLocation] = useState(\"\");\r\n\tconst [duration, setDuration] = useState(15);\r\n\tconst [summary, setSummary] = useState(\"\");\r\n\tconst [day, setDay] = useState(\"Monday\");\r\n\r\n\t//fetch create API.\r\n\tconst create = async () => {\r\n\t\tsetLoading(true);\r\n\t\tsetOpen(false);\r\n\t\tif (!subjectCode || !startDate || !subjectCode || location === \"\") {\r\n\t\t\tsetAlert({ status: \"warning\", message: \"Insufficient Input.\" });\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst body = {\r\n\t\t\tsubjectCode: subjectCode,\r\n\t\t\tstartDate: startDate,\r\n\t\t\tduration: duration,\r\n\t\t\tlocation: location,\r\n\t\t\tday: day,\r\n\t\t\tsummary: summary,\r\n\t\t};\r\n\t\tconst res = await myFetch(\"/api/student/hub/create\", \"POST\", body);\r\n\t\tdetectAlert(res, \"Successfully created.\");\r\n\t\tconst subjectHubs = await await fetchHubs(\r\n\t\t\tcurrentSubject,\r\n\t\t\tdetectAlert,\r\n\t\t\tsetLoading,\r\n\t\t\tuserInfo\r\n\t\t);\r\n\t\tif (!subjectHubs) return;\r\n\t\tsetHubs(subjectHubs);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Dialog\r\n\t\t\topen={open}\r\n\t\t\tonClose={() => {\r\n\t\t\t\tsetOpen(false);\r\n\t\t\t}}\r\n\t\t\taria-labelledby=\"form-dialog-title\"\r\n\t\t\tfullWidth\r\n\t\t>\r\n\t\t\t<DialogTitle id=\"form-dialog-title\">Create a study hub</DialogTitle>\r\n\t\t\t<DialogContent dividers>\r\n\t\t\t\t<Grid container>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item xs={1}>\r\n\t\t\t\t\t\t\t<GroupIcon className={classes.icon} />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={11}>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tlabel=\"Name of your hub\"\r\n\t\t\t\t\t\t\t\tmultiline\r\n\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\trowsMax={2}\r\n\t\t\t\t\t\t\t\tvalue={summary}\r\n\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\tsetSummary(e.target.value);\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={1}>\r\n\t\t\t\t\t\t\t<SchoolIcon className={classes.icon} />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={11}>\r\n\t\t\t\t\t\t\t<Autocomplete\r\n\t\t\t\t\t\t\t\tid=\"addSubject\"\r\n\t\t\t\t\t\t\t\toptions={subjects}\r\n\t\t\t\t\t\t\t\tgetOptionLabel={(option) => option}\r\n\t\t\t\t\t\t\t\tvalue={subjectCode}\r\n\t\t\t\t\t\t\t\tonChange={(event, newValue) => {\r\n\t\t\t\t\t\t\t\t\tsetSubjectCode(newValue);\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\trenderInput={(params) => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\t{...params}\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Please choose a subject\"\r\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"filled\"\r\n\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={1}>\r\n\t\t\t\t\t\t<ScheduleIcon className={classes.icon} />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={11}>\r\n\t\t\t\t\t\t<Autocomplete\r\n\t\t\t\t\t\t\toptions={[\r\n\t\t\t\t\t\t\t\t\"Monday\",\r\n\t\t\t\t\t\t\t\t\"Tuesday\",\r\n\t\t\t\t\t\t\t\t\"Wednesday\",\r\n\t\t\t\t\t\t\t\t\"Thursday\",\r\n\t\t\t\t\t\t\t\t\"Friday\",\r\n\t\t\t\t\t\t\t\t\"Saturday\",\r\n\t\t\t\t\t\t\t\t\"Sunday\",\r\n\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\tgetOptionLabel={(option) => option}\r\n\t\t\t\t\t\t\tvalue={day}\r\n\t\t\t\t\t\t\tonChange={(event, newValue) => {\r\n\t\t\t\t\t\t\t\tsetDay(day);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\trenderInput={(params) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t{...params}\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"Please choose a day\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"filled\"\r\n\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={1}>\r\n\t\t\t\t\t\t<ScheduleIcon className={classes.icon} />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={11}>\r\n\t\t\t\t\t\t<MuiPickersUtilsProvider utils={MomentUtils}>\r\n\t\t\t\t\t\t\t<KeyboardTimePicker\r\n\t\t\t\t\t\t\t\tlabel=\"Time\"\r\n\t\t\t\t\t\t\t\tvalue={startDate}\r\n\t\t\t\t\t\t\t\tonChange={(date) => {\r\n\t\t\t\t\t\t\t\t\tsetStartDate(date);\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</MuiPickersUtilsProvider>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={1}>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<ScheduleIcon className={classes.icon} />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={11}>\r\n\t\t\t\t\t\t<DialogContentText>\r\n\t\t\t\t\t\t\t{\"Duration: \"}\r\n\t\t\t\t\t\t\t{duration}\r\n\t\t\t\t\t\t\t{\" Minutes\"}\r\n\t\t\t\t\t\t</DialogContentText>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<Slider\r\n\t\t\t\t\t\t\tvalueLabelDisplay=\"auto\"\r\n\t\t\t\t\t\t\tmarks={marks}\r\n\t\t\t\t\t\t\taria-labelledby=\"discrete-slider\"\r\n\t\t\t\t\t\t\tgetAriaValueText={(value) => `${value} Minutes`}\r\n\t\t\t\t\t\t\tvalue={duration}\r\n\t\t\t\t\t\t\tonChange={(e, newValue) => {\r\n\t\t\t\t\t\t\t\tsetDuration(newValue);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tstep={15}\r\n\t\t\t\t\t\t\tmax={300}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={1}>\r\n\t\t\t\t\t\t<RoomIcon className={classes.icon} />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={11}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tlabel=\"Location\"\r\n\t\t\t\t\t\t\tvariant=\"filled\"\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\tvalue={location}\r\n\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\tsetLocation(e.target.value);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<DialogContentText></DialogContentText>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</DialogContent>\r\n\t\t\t<DialogActions>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tsetOpen(false);\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\tCancel\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\tonClick={create}\r\n\t\t\t\t>\r\n\t\t\t\t\tCreate\r\n\t\t\t\t</Button>\r\n\t\t\t</DialogActions>\r\n\t\t</Dialog>\r\n\t);\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n\tGrid,\r\n\tButton,\r\n\tCard,\r\n\tCardHeader,\r\n\tAppBar,\r\n\tTab,\r\n\tTabs,\r\n\tTooltip,\r\n\tFab,\r\n\tDialog,\r\n\tDialogTitle,\r\n\tDialogActions,\r\n\tDialogContent,\r\n\tButtonGroup,\r\n} from \"@material-ui/core\";\r\nimport withWidth, { isWidthUp } from \"@material-ui/core/withWidth\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\nimport { myFetch, UserContext } from \"../Methods\";\r\nimport CreateIcon from \"@material-ui/icons/Add\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\nimport HubCard from \"./HubCard\";\r\nimport CreateDialog from \"./CreateDialog\";\r\nimport legend from \"./legend.svg\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tpaper: {\r\n\t\tmaxWidth: \"100%\",\r\n\t\tmarginTop: theme.spacing(10),\r\n\t},\r\n\thub: {\r\n\t\tmarginTop: theme.spacing(5),\r\n\t},\r\n\tfab: {\r\n\t\t[theme.breakpoints.down(\"lg\")]: {\r\n\t\t\tmarginTop: theme.spacing(5),\r\n\t\t},\r\n\t\t[theme.breakpoints.up(\"lg\")]: {\r\n\t\t\tposition: \"fixed\",\r\n\t\t\tbottom: theme.spacing(1) * 10,\r\n\t\t\tright: theme.spacing(1) * 8,\r\n\t\t},\r\n\t},\r\n\ticon: {\r\n\t\tmargin: \"auto\",\r\n\t},\r\n\tdelete: {\r\n\t\ttextTransform: \"none\",\r\n\t\tcolor: theme.palette.getContrastText(grey[700]),\r\n\t\tbackground: grey[700],\r\n\t\t\"&:hover\": {\r\n\t\t\tcolor: theme.palette.getContrastText(grey[900]),\r\n\t\t\tbackground: grey[900],\r\n\t\t},\r\n\t},\r\n\r\n\tmedia: {\r\n\t\theight: \"33VH\",\r\n\t},\r\n\tlegend: {\r\n\t\tmarginTop: theme.spacing(2),\r\n\t\tmarginBottom: theme.spacing(2),\r\n\t\t[theme.breakpoints.up(\"sm\")]: {\r\n\t\t\tminWidth: \"25%\",\r\n\t\t\tminHeight: \"25%\",\r\n\t\t},\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tminWidth: \"100%\",\r\n\t\t\tminHeight: \"100%\",\r\n\t\t},\r\n\t},\r\n}));\r\n\r\n//Fetch the appointments of the current subject.\r\nconst fetchHubs = async (currentSubject, detectAlert, setLoading, userInfo) => {\r\n\tsetLoading(true);\r\n\tif (currentSubject == 0) {\r\n\t\tconst res = await myFetch(\"/api/student/hub/registered\", \"GET\");\r\n\t\treturn res.subjectHubs;\r\n\t}\r\n\tconst body = {\r\n\t\tsubjectCode: userInfo.subjects[currentSubject - 1],\r\n\t};\r\n\tconst res = await myFetch(\"/api/student/hub/all\", \"POST\", body);\r\n\tdetectAlert(res);\r\n\treturn res.subjectHubs;\r\n};\r\n\r\n/***\r\n * Dialog for leaving/deleting a study hub.\r\n */\r\nconst DeleteDialog = ({\r\n\tleaveHub,\r\n\tsetDeleteHub,\r\n\tclasses,\r\n\tsetLoading,\r\n\tsetAlert,\r\n\tdetectAlert,\r\n\tsetHubs,\r\n\tcurrentSubject,\r\n\tuserInfo,\r\n}) => {\r\n\tconst deleteing = async () => {\r\n\t\tsetLoading(true);\r\n\t\tconst body = {\r\n\t\t\tid: leaveHub,\r\n\t\t};\r\n\t\tconst res = await myFetch(\"/api/student/hub/leave\", \"POST\", body);\r\n\t\tdetectAlert(res, \"Successfully left.\");\r\n\t\tconst subjectHubs = await fetchHubs(\r\n\t\t\tcurrentSubject,\r\n\t\t\tdetectAlert,\r\n\t\t\tsetLoading,\r\n\t\t\tuserInfo\r\n\t\t);\r\n\t\tif (!subjectHubs) return;\r\n\t\tsetHubs(subjectHubs);\r\n\t\tsetLoading(false);\r\n\t};\r\n\treturn (\r\n\t\t<Dialog\r\n\t\t\topen={leaveHub !== \"\"}\r\n\t\t\tonClose={() => setDeleteHub(\"\")}\r\n\t\t\tfullWidth\r\n\t\t>\r\n\t\t\t<DialogTitle>Leave the StudyHub?</DialogTitle>\r\n\t\t\t<DialogContent>Do you want to leave this study hub?</DialogContent>\r\n\t\t\t<DialogActions>\r\n\t\t\t\t<ButtonGroup fullWidth>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\ttextTransform: \"none\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tsetDeleteHub(\"\");\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tNo, thanks.\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\tclassName={classes.delete}\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tsetDeleteHub(\"\");\r\n\t\t\t\t\t\t\tdeleteing();\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tYes, I do.\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</ButtonGroup>\r\n\t\t\t</DialogActions>\r\n\t\t</Dialog>\r\n\t);\r\n};\r\n\r\n/***\r\n * Study hub page for student.\r\n */\r\nexport default withWidth()(({ width }) => {\r\n\tconst classes = useStyles();\r\n\r\n\tconst { user, detectAlert, setAlert, alert } = useContext(UserContext);\r\n\tconst { userInfo } = user;\r\n\r\n\t//Study hub details.\r\n\tconst [currentSubject, setCurrentSubject] = useState(0);\r\n\tconst [loading, setLoading] = useState(true);\r\n\tconst [hubs, setHubs] = useState([]);\r\n\tconst [leaveHub, setDeleteHub] = useState(\"\");\r\n\tconst [openCreate, setOpenCreate] = useState(false);\r\n\r\n\tconst largeScreen = isWidthUp(\"lg\", width);\r\n\r\n\t//Updating consultations Information.\r\n\tuseEffect(() => {\r\n\t\tfetchHubs(currentSubject, detectAlert, setLoading, userInfo).then(\r\n\t\t\t(subjectHubs) => {\r\n\t\t\t\tif (!subjectHubs) return;\r\n\t\t\t\tsetHubs(subjectHubs);\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t);\r\n\t}, [alert.status, currentSubject]);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<CreateDialog\r\n\t\t\t\topen={openCreate}\r\n\t\t\t\tsetOpen={setOpenCreate}\r\n\t\t\t\tsetLoading={setLoading}\r\n\t\t\t\tsubjects={userInfo.subjects}\r\n\t\t\t\tfetchHubs={fetchHubs}\r\n\t\t\t\tsetAlert={setAlert}\r\n\t\t\t\tdetectAlert={detectAlert}\r\n\t\t\t\tsetHubs={setHubs}\r\n\t\t\t\tuserInfo={userInfo}\r\n\t\t\t\tcurrentSubject={currentSubject}\r\n\t\t\t/>\r\n\t\t\t<DeleteDialog\r\n\t\t\t\tsetAlert={setAlert}\r\n\t\t\t\tdetectAlert={detectAlert}\r\n\t\t\t\tsetHubs={setHubs}\r\n\t\t\t\tsetLoading={setLoading}\r\n\t\t\t\tleaveHub={leaveHub}\r\n\t\t\t\tsetDeleteHub={setDeleteHub}\r\n\t\t\t\tclasses={classes}\r\n\t\t\t\tcurrentSubject={currentSubject}\r\n\t\t\t\tdetectAlert={detectAlert}\r\n\t\t\t\tuserInfo={userInfo}\r\n\t\t\t/>\r\n\r\n\t\t\t<AppBar position=\"relative\" color=\"default\">\r\n\t\t\t\t<Grid container justify=\"space-between\">\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<Tabs\r\n\t\t\t\t\t\t\tvalue={currentSubject}\r\n\t\t\t\t\t\t\tindicatorColor=\"primary\"\r\n\t\t\t\t\t\t\ttextColor=\"primary\"\r\n\t\t\t\t\t\t\tonChange={(event, newValue) => {\r\n\t\t\t\t\t\t\t\tsetCurrentSubject(newValue);\r\n\t\t\t\t\t\t\t\tif (newValue == currentSubject)\r\n\t\t\t\t\t\t\t\t\tsetCurrentSubject(newValue);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tvariant=\"scrollable\"\r\n\t\t\t\t\t\t\tscrollButtons=\"auto\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Tab label=\"Registered\" />\r\n\t\t\t\t\t\t\t{user.userInfo.subjects.map((subject) => (\r\n\t\t\t\t\t\t\t\t<Tab label={subject} key={subject} />\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</Tabs>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</AppBar>\r\n\t\t\t<Grid container justify=\"flex-end\">\r\n\t\t\t\t<img className={classes.legend} src={legend} alt=\"legend\" />\r\n\t\t\t</Grid>\r\n\r\n\t\t\t<Grid container justify=\"center\">\r\n\t\t\t\t<Tooltip title=\"Create a study hub\" aria-label=\"add\">\r\n\t\t\t\t\t<Fab\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tsize=\"large\"\r\n\t\t\t\t\t\tclassName={classes.fab}\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tsetOpenCreate(true);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<CreateIcon />\r\n\t\t\t\t\t</Fab>\r\n\t\t\t\t</Tooltip>\r\n\t\t\t</Grid>\r\n\r\n\t\t\t<Grid container justify=\"space-around\" alignItems=\"center\">\r\n\t\t\t\t{!loading\r\n\t\t\t\t\t? hubs.map((hub, index) => (\r\n\t\t\t\t\t\t\t//stduy hubs cards...\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\t\txs={largeScreen ? 5 : 12}\r\n\t\t\t\t\t\t\t\tclassName={classes.hub}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<HubCard\r\n\t\t\t\t\t\t\t\t\thub={hub}\r\n\t\t\t\t\t\t\t\t\tloading={loading}\r\n\t\t\t\t\t\t\t\t\ttime={(index + 1) * 200}\r\n\t\t\t\t\t\t\t\t\tsetDeleteHub={setDeleteHub}\r\n\t\t\t\t\t\t\t\t\tsetLoading={setLoading}\r\n\t\t\t\t\t\t\t\t\tsetHubs={setHubs}\r\n\t\t\t\t\t\t\t\t\tfetchHubs={fetchHubs}\r\n\t\t\t\t\t\t\t\t\tcurrentSubject={currentSubject}\r\n\t\t\t\t\t\t\t\t\tdetectAlert={detectAlert}\r\n\t\t\t\t\t\t\t\t\tuserInfo={userInfo}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t  ))\r\n\t\t\t\t\t: [0, 1, 2, 3].map((index) => (\r\n\t\t\t\t\t\t\t//Loading skeletion....\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\t\txs={largeScreen ? 5 : 12}\r\n\t\t\t\t\t\t\t\tclassName={classes.hub}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Card className={classes.card}>\r\n\t\t\t\t\t\t\t\t\t<CardHeader\r\n\t\t\t\t\t\t\t\t\t\tavatar={\r\n\t\t\t\t\t\t\t\t\t\t\t<Skeleton\r\n\t\t\t\t\t\t\t\t\t\t\t\tanimation=\"wave\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"circle\"\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth={40}\r\n\t\t\t\t\t\t\t\t\t\t\t\theight={40}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\ttitle={\r\n\t\t\t\t\t\t\t\t\t\t\t<Skeleton\r\n\t\t\t\t\t\t\t\t\t\t\t\tanimation=\"wave\"\r\n\t\t\t\t\t\t\t\t\t\t\t\theight={10}\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth=\"80%\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ marginBottom: 6 }}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tsubheader={\r\n\t\t\t\t\t\t\t\t\t\t\t<Skeleton\r\n\t\t\t\t\t\t\t\t\t\t\t\tanimation=\"wave\"\r\n\t\t\t\t\t\t\t\t\t\t\t\theight={10}\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth=\"40%\"\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t<Skeleton\r\n\t\t\t\t\t\t\t\t\t\tanimation=\"wave\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"rect\"\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.media}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t  ))}\r\n\t\t\t</Grid>\r\n\t\t</div>\r\n\t);\r\n});\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { UserContext } from \"../Methods\";\r\nimport Layout from \"../Navigation/Layout\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Student from \"./Student\";\r\n\r\n/***\r\n * Study hub page.\r\n */\r\nexport default () => {\r\n\tconst history = useHistory();\r\n\tconst {\r\n\t\tsetSelectedRoute,\r\n\t\tloadingRoute,\r\n\t\tsetLoadingRoute,\r\n\t\tuser,\r\n\t\tfetchUser,\r\n\t} = useContext(UserContext);\r\n\r\n\t//Loading user information.\r\n\tuseEffect(() => {\r\n\t\tsetSelectedRoute(\"hubs\");\r\n\t\tfetchUser().then((user) => {\r\n\t\t\tif (user.type !== \"student\") {\r\n\t\t\t\thistory.push(\"/Settings\");\r\n\t\t\t}\r\n\r\n\t\t\tsetLoadingRoute(false);\r\n\t\t});\r\n\t}, []);\r\n\r\n\tif (loadingRoute || !user.type) return <Layout />;\r\n\r\n\treturn <Layout content={<Student />} type={user.type} />;\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport withWidth, { isWidthUp } from \"@material-ui/core/withWidth\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\nimport {\r\n\tChart,\r\n\tArgumentAxis,\r\n\tValueAxis,\r\n\tBarSeries,\r\n\tLegend,\r\n\tTitle,\r\n} from \"@devexpress/dx-react-chart-material-ui\";\r\n\r\nimport { scaleBand } from \"@devexpress/dx-chart-core\";\r\n\r\nimport { Animation, Stack, ArgumentScale } from \"@devexpress/dx-react-chart\";\r\n\r\nimport { myFetch, UserContext } from \"../Methods\";\r\n\r\n/***\r\n * Analytic page for staff.\r\n */\r\nexport default withWidth()(({ width }) => {\r\n\tconst { user, detectAlert, setAlert, alert } = useContext(UserContext);\r\n\tconst { userInfo } = user;\r\n\r\n\tconst [loading, setLoading] = useState(true);\r\n\tconst [data, setData] = useState({});\r\n\r\n\tconst largeScreen = isWidthUp(\"sm\", width);\r\n\r\n\tconst fetchAnalytic = async () => {\r\n\t\tsetLoading(true);\r\n\r\n\t\tconst res = await myFetch(\"/api/staff/analytic/consult\", \"GET\");\r\n\t\tdetectAlert(res);\r\n\t\treturn res.consultTable;\r\n\t};\r\n\r\n\t//Updating consultations Information.\r\n\tuseEffect(() => {\r\n\t\tfetchAnalytic().then((consultTable) => {\r\n\t\t\tif (!consultTable) return;\r\n\t\t\tsetData(consultTable);\r\n\t\t\tsetLoading(false);\r\n\t\t\tconsole.log(consultTable);\r\n\t\t\tconsole.log(\"??\");\r\n\t\t});\r\n\t}, [alert.status]);\r\n\r\n\t//Developing, to be continued...\r\n\tif (loading)\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\t<Skeleton height={40} animation=\"wave\" />\r\n\t\t\t\t<Skeleton height={40} animation=\"wave\" />\r\n\t\t\t\t<Skeleton height={40} animation=\"wave\" />\r\n\t\t\t\t<Skeleton height={40} animation=\"wave\" />\r\n\t\t\t\t<Skeleton height={40} animation=\"wave\" />\r\n\t\t\t\t<Skeleton height={40} animation=\"wave\" />\r\n\t\t\t\t<Skeleton height={40} animation=\"wave\" />\r\n\t\t\t\t<Skeleton height={40} animation=\"wave\" />\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\treturn (\r\n\t\t<Paper>\r\n\t\t\t<Chart data={data}>\r\n\t\t\t\t<ArgumentScale factory={scaleBand} />\r\n\t\t\t\t<ArgumentAxis />\r\n\t\t\t\t<ValueAxis />\r\n\r\n\t\t\t\t<BarSeries\r\n\t\t\t\t\tname=\"TotalRegisteredNum\"\r\n\t\t\t\t\tvalueField=\"TotalRegisteredNum\"\r\n\t\t\t\t\targumentField=\"subjectCode\"\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<BarSeries\r\n\t\t\t\t\tname=\"TotalSlotNum\"\r\n\t\t\t\t\tvalueField=\"TotalSlotNum\"\r\n\t\t\t\t\targumentField=\"subjectCode\"\r\n\t\t\t\t/>\r\n\t\t\t\t<Animation />\r\n\t\t\t\t{largeScreen ? <Legend /> : null}\r\n\t\t\t\t<Stack />\r\n\t\t\t\t<Title text=\"Histogram of Consultation Available Slots vs Registered\" />\r\n\t\t\t</Chart>\r\n\t\t</Paper>\r\n\t);\r\n});\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { UserContext } from \"../Methods\";\r\nimport Layout from \"../Navigation/Layout\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Staff from \"./Staff\";\r\n\r\n/***\r\n * Analytic page for staff.\r\n */\r\nexport default () => {\r\n\tconst {\r\n\t\tsetSelectedRoute,\r\n\t\tloadingRoute,\r\n\t\tsetLoadingRoute,\r\n\t\tfetchUser,\r\n\t\tuser,\r\n\t} = useContext(UserContext);\r\n\tconst history = useHistory();\r\n\r\n\t//Loading user information.\r\n\tuseEffect(() => {\r\n\t\tsetSelectedRoute(\"analytic\");\r\n\t\tfetchUser().then((user) => {\r\n\t\t\t//push back to setting page if user is not authorized.\r\n\t\t\tif (user.type !== \"staff\") {\r\n\t\t\t\thistory.push(\"/Settings\");\r\n\t\t\t}\r\n\t\t\tsetLoadingRoute(false);\r\n\t\t});\r\n\t}, []);\r\n\r\n\t//Loading...\r\n\tif (loadingRoute || !user.type) return <Layout />;\r\n\r\n\treturn <Layout content={<Staff />} type={user.type} />;\r\n};\r\n","import React from \"react\";\r\n\r\nimport {\r\n\tGrid,\r\n\tTypography,\r\n\tCardContent,\r\n\tCardHeader,\r\n\tDivider,\r\n\tPaper,\r\n\tContainer,\r\n\tGrow,\r\n} from \"@material-ui/core\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport withWidth, { isWidthUp } from \"@material-ui/core/withWidth\";\r\n\r\nimport AppBar from \"../Navigation/AppBar\";\r\nimport aboutImg from \"./img/about.png\";\r\nimport background from \"./img/background.svg\";\r\nimport { cyan } from \"@material-ui/core/colors\";\r\nimport Login from \"../Login/login\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tbackgroundImage:\r\n\t\t\t\"linear-gradient(45deg, #42a5f5 0%, #c8e6c9 25%, #fad0ba 50%, #fff59d 100%)\",\r\n\r\n\t\tminHeight: \"110VH\",\r\n\t},\r\n\timage: {\r\n\t\twidth: \"100%\",\r\n\t\tmarginTop: theme.spacing(20),\r\n\t},\r\n\tpaper: {\r\n\t\tborderRadius: 30,\r\n\t\t[theme.breakpoints.down(\"md\")]: {\r\n\t\t\tmarginTop: theme.spacing(10),\r\n\t\t},\r\n\t\t[theme.breakpoints.up(\"md\")]: {\r\n\t\t\tmarginTop: theme.spacing(20),\r\n\t\t},\r\n\t\tbackground: \"#fffde7\",\r\n\t},\r\n\r\n\tcard: {\r\n\t\tborderRadius: 30,\r\n\r\n\t\tbackground: \"inherit\",\r\n\t\tborderColor: cyan,\r\n\t\tborder: \"solid  #4dd0e1 5px\",\r\n\t\tmarginTop: theme.spacing(10),\r\n\t},\r\n}));\r\n\r\n/***\r\n * About page.\r\n */\r\nexport default withWidth()(({ width }) => {\r\n\tconst classes = useStyles();\r\n\tconst largeScreen = isWidthUp(\"md\", width);\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<AppBar aboutBar />\r\n\t\t\t<Login />\r\n\t\t\t<Container maxWidth=\"md\">\r\n\t\t\t\t<Grid container spacing={4} alignItems=\"center\">\r\n\t\t\t\t\t<Grow in timeout={1000}>\r\n\t\t\t\t\t\t<Grid item xs={largeScreen ? 6 : 12}>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tsrc={aboutImg}\r\n\t\t\t\t\t\t\t\talt=\"about\"\r\n\t\t\t\t\t\t\t\tclassName={classes.image}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grow>\r\n\t\t\t\t\t<Grid item xs={largeScreen ? 6 : 12}>\r\n\t\t\t\t\t\t<Grow in timeout={1200}>\r\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t\t\t<CardHeader\r\n\t\t\t\t\t\t\t\t\ttitle={\r\n\t\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\t\talign=\"center\"\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={\r\n\t\t\t\t\t\t\t\t\t\t\t\tlargeScreen\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize: \"30px\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#37474f\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontWeight: 900,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontFamily: \"Arial\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttextTransform:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"none\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  }\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize: \"25px\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#37474f\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontWeight: 900,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontFamily: \"Arial\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttextTransform:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"none\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  }\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tWho is MeeTute?\r\n\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t></CardHeader>\r\n\t\t\t\t\t\t\t\t<Divider\r\n\t\t\t\t\t\t\t\t\tstyle={{ width: \"80%\", margin: \"auto\" }}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\talign=\"center\"\r\n\t\t\t\t\t\t\t\t\t\tstyle={\r\n\t\t\t\t\t\t\t\t\t\t\tlargeScreen\r\n\t\t\t\t\t\t\t\t\t\t\t\t? {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize: \"20px\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#37474f\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontWeight: 900,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontFamily: \"Arial\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttextTransform: \"none\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t  }\r\n\t\t\t\t\t\t\t\t\t\t\t\t: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize: \"15px\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#37474f\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontWeight: 900,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontFamily: \"Arial\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttextTransform: \"none\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t  }\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{\" \"}\r\n\t\t\t\t\t\t\t\t\t\tOur mission is to optimise your time\r\n\t\t\t\t\t\t\t\t\t\tmanagement for a better working life.\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\r\n\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\tstyle={\r\n\t\t\t\t\t\t\t\t\t\t\tlargeScreen\r\n\t\t\t\t\t\t\t\t\t\t\t\t? {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize: \"15px\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#37474f\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontWeight: 600,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontFamily: \"Arial\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttextTransform: \"none\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t  }\r\n\t\t\t\t\t\t\t\t\t\t\t\t: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize: \"13px\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#37474f\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontWeight: 600,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontFamily: \"Arial\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttextTransform: \"none\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t  }\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{\" \"}\r\n\t\t\t\t\t\t\t\t\t\tMeeTute identifies the problem of the\r\n\t\t\t\t\t\t\t\t\t\tunderutilisation of consultation hours\r\n\t\t\t\t\t\t\t\t\t\tduring off-peak times, potentially\r\n\t\t\t\t\t\t\t\t\t\tleading to a negative impact on the work\r\n\t\t\t\t\t\t\t\t\t\tefficiency of our teaching staff. In\r\n\t\t\t\t\t\t\t\t\t\taddition, as students, we truly\r\n\t\t\t\t\t\t\t\t\t\tunderstand the challenges of getting the\r\n\t\t\t\t\t\t\t\t\t\thelp we need from teaching staff during\r\n\t\t\t\t\t\t\t\t\t\tassignment or exam seasons. This is an\r\n\t\t\t\t\t\t\t\t\t\tissue that affects over 48,000 students\r\n\t\t\t\t\t\t\t\t\t\tand staff, and probably the wider\r\n\t\t\t\t\t\t\t\t\t\tcommunity.\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\tMeeTute wants to implement a platform\r\n\t\t\t\t\t\t\t\t\t\tfor staff to better manage their\r\n\t\t\t\t\t\t\t\t\t\tconsultation hours and for students to\r\n\t\t\t\t\t\t\t\t\t\teasily book private appointments with\r\n\t\t\t\t\t\t\t\t\t\ttheir lecturers/tutors and form study\r\n\t\t\t\t\t\t\t\t\t\tgroups with their fellow peers. The\r\n\t\t\t\t\t\t\t\t\t\tultimate goal of our solution is to\r\n\t\t\t\t\t\t\t\t\t\tbetter connect students with teaching\r\n\t\t\t\t\t\t\t\t\t\tstaff as well as fellow classmates.\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t</Grow>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Container>\r\n\t\t</div>\r\n\t);\r\n});\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport Signup from \"./component/Signup/Signup\";\r\nimport Cookies from \"js-cookie\";\r\nimport Home from \"./component/Home/home\";\r\nimport Appointment from \"./component/Appointment/Appointment\";\r\nimport Consultation from \"./component/Consultation/Consultation\";\r\nimport Setting from \"./component/Setting/Setting\";\r\nimport Hub from \"./component/StudyHub/Hub\";\r\nimport Analytic from \"./component/Analytic/Analytic\";\r\nimport About from \"./component/About/About\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect,\r\n} from \"react-router-dom\";\r\nimport { AuthApi, UserContext, myFetch } from \"./component/Methods\";\r\n\r\n/***\r\n * The route for home page, redirect to settings page once login in.\r\n */\r\nconst HomeRoute = ({ component: Component, ...rest }) => {\r\n    const { auth } = useContext(AuthApi);\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={() => (!auth ? <Component /> : <Redirect to=\"/Settings\" />)}\r\n        />\r\n    );\r\n};\r\n\r\n/***\r\n * The routes under protection,\r\n * redirect to home page if authentication is missing.\r\n */\r\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\r\n    const { auth } = useContext(AuthApi);\r\n    let checkAuth = false;\r\n\r\n    const cookie = Cookies.get(\"meetute\");\r\n    if (cookie) {\r\n        checkAuth = true;\r\n    }\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={() =>\r\n                checkAuth || auth ? <Component /> : <Redirect to=\"/\" />\r\n            }\r\n        />\r\n    );\r\n};\r\n\r\n/***\r\n * http://meetute.herokuapp.com\r\n * Designed by Xiaoyue Lin, Zhishang Wang, Yuxuan Liu, Regina Lin, Zijian Zeng.\r\n */\r\nexport default () => {\r\n    //Authentication state...\r\n    const [auth, setAuth] = useState(false);\r\n    const [loginEl, setLoginEl] = useState(null);\r\n    const [openLogin, setOpenLogin] = React.useState(false);\r\n\r\n    //Loading routes context...\r\n    const [selectedRoute, setSelectedRoute] = useState(\"settings\");\r\n    const [loadingRoute, setLoadingRoute] = useState(true);\r\n\r\n    //user information...\r\n    const [user, setUser] = useState({});\r\n\r\n    //Alerting context\r\n    const [alert, setAlert] = useState({ status: \"\", message: \"\" });\r\n\r\n    //Alerting responses from back end (eg. back end error)...\r\n    const detectAlert = (res, succeed, info) => {\r\n        if (res.success) {\r\n            if (succeed) {\r\n                setAlert({\r\n                    status: \"success\",\r\n                    message: succeed,\r\n                });\r\n            } else if (info) {\r\n                setAlert({\r\n                    status: \"info\",\r\n                    message: info,\r\n                });\r\n            }\r\n        } else {\r\n            let message = \"Unknown error.\";\r\n            if (res.error) message = res.error;\r\n            else if (res.message) message = res.message;\r\n\r\n            setAlert({\r\n                status: \"error\",\r\n                message: message,\r\n            });\r\n        }\r\n    };\r\n\r\n    //Close the alert bar.\r\n    const closeAlert = () => setAlert({ status: \"\", message: \"\" });\r\n\r\n    //Loading user information.\r\n    const fetchUser = async () => {\r\n        setLoadingRoute(true);\r\n        const res = await myFetch(\"/api/shared/users/info\", \"GET\");\r\n        detectAlert(res);\r\n        setUser(res);\r\n        return res;\r\n    };\r\n\r\n    //Make authentication.\r\n    useEffect(() => {\r\n        const cookie = Cookies.get(\"meetute\");\r\n        if (cookie) setAuth(true);\r\n    }, [auth]);\r\n\r\n    return (\r\n        <AuthApi.Provider\r\n            value={{\r\n                auth,\r\n                setAuth,\r\n                loginEl,\r\n                setLoginEl,\r\n                openLogin,\r\n                setOpenLogin,\r\n            }}\r\n        >\r\n            <UserContext.Provider\r\n                value={{\r\n                    selectedRoute,\r\n                    setSelectedRoute,\r\n                    alert,\r\n                    detectAlert,\r\n                    closeAlert,\r\n                    setAlert,\r\n                    loadingRoute,\r\n                    setLoadingRoute,\r\n                    fetchUser,\r\n                    user,\r\n                    setUser,\r\n                }}\r\n            >\r\n                <Router>\r\n                    <Switch>\r\n                        <ProtectedRoute\r\n                            exact\r\n                            path=\"/Consultations\"\r\n                            component={Consultation}\r\n                        />\r\n                        <ProtectedRoute exact path=\"/Hubs\" component={Hub} />\r\n                        <ProtectedRoute\r\n                            exact\r\n                            path=\"/Analytic\"\r\n                            component={Analytic}\r\n                        />\r\n                        <ProtectedRoute\r\n                            exact\r\n                            path=\"/Appointments\"\r\n                            component={Appointment}\r\n                        />\r\n                        <ProtectedRoute\r\n                            exact\r\n                            path=\"/Settings\"\r\n                            component={Setting}\r\n                        />\r\n                        <HomeRoute exact path=\"/\" component={Home} />\r\n                        <Route exact path=\"/about\" component={About} />\r\n                        <HomeRoute exact path=\"/signup\" component={Signup} />\r\n                    </Switch>\r\n                </Router>\r\n            </UserContext.Provider>\r\n        </AuthApi.Provider>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport {\r\n    MuiThemeProvider,\r\n    createMuiTheme,\r\n    responsiveFontSizes,\r\n} from \"@material-ui/core\";\r\nimport { cyan, lightGreen } from \"@material-ui/core/colors\";\r\n\r\nlet theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: cyan[800],\r\n            light: cyan[50],\r\n            dark: cyan[900],\r\n        },\r\n        secondary: {\r\n            main: lightGreen.A200,\r\n            light: lightGreen[100],\r\n            dark: lightGreen[400],\r\n        },\r\n    },\r\n    typography: {\r\n        fontFamily: \"sans-serif\",\r\n        h1: {\r\n            fontWeight: 900,\r\n        },\r\n        h2: {\r\n            fontWeight: 700,\r\n        },\r\n        h3: {\r\n            fontWeight: 900,\r\n        },\r\n        h4: {\r\n            fontWeight: 900,\r\n            fontSize: 30,\r\n        },\r\n        h5: {\r\n            fontWeight: 500,\r\n        },\r\n\r\n        subtitle1: {\r\n            fontSize: 12,\r\n        },\r\n        button: {\r\n            fontWeight: 900,\r\n            fontSize: \"20px\",\r\n        },\r\n    },\r\n    shape: {},\r\n    background: \"linear-gradient(to right,#ffffff 0%, #b9e2fa 100%)\",\r\n});\r\n\r\ntheme = responsiveFontSizes(theme);\r\n\r\nReactDOM.render(\r\n    <MuiThemeProvider theme={theme}>\r\n        <App />\r\n    </MuiThemeProvider>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}
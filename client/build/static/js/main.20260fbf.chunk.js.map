{"version":3,"sources":["component/Appointment/legend.svg","component/Consultation/legend.svg","component/Navigation/logo.png","component/Home/img/chat.png","component/Home/img/f1.png","component/Home/img/f2.png","component/Home/img/f3.png","component/Home/img/f4.png","component/StudyHub/legend.svg","component/About/img/about.png","component/About/img/background.svg","component/Methods.js","component/Navigation/AppBar.jsx","component/Login/MyField.jsx","component/Login/loginForm.jsx","component/Login/login.jsx","component/Signup/stepper.jsx","component/Signup/subjects.jsx","component/Signup/stepCard.jsx","component/Signup/signupForm.jsx","component/Home/waveBorder.jsx","component/Signup/Signup.jsx","component/Home/header.jsx","component/Home/featureCard.jsx","component/Home/stepper.jsx","component/Home/features.jsx","component/Home/home.jsx","component/Navigation/Loading.jsx","component/Navigation/Layout.jsx","component/Timetable.jsx","component/Appointment/StudentHeader.jsx","component/Appointment/StaffHeader.jsx","component/Appointment/TimetableBar.jsx","component/Appointment/Staff.jsx","component/Appointment/StudentContent.jsx","component/Appointment/StudentQuery.jsx","component/Appointment/Student.jsx","component/Appointment/Appointment.jsx","component/Consultation/ConsultDialog.jsx","component/Consultation/StudentHeader.jsx","component/Consultation/StaffHeader.jsx","component/Consultation/StaffContent.jsx","component/Consultation/Staff.jsx","component/Consultation/StudentContent.jsx","component/Consultation/Student.jsx","component/Consultation/Consultation.jsx","component/Setting/Add.jsx","component/Setting/Student.jsx","component/Setting/Create.jsx","component/Setting/Staff.jsx","component/Setting/Setting.jsx","component/StudyHub/HubCard.jsx","component/StudyHub/CreateDialog.jsx","component/StudyHub/Student.jsx","component/StudyHub/Hub.jsx","component/Analytic/Staff.jsx","component/Analytic/Analytic.jsx","component/About/About.jsx","App.js","index.js"],"names":["module","exports","myFetch","url","method","body","a","fetch","JSON","stringify","headers","Cookies","get","res","json","msg","AuthApi","createContext","UserContext","StaffContext","StudentContext","useStyles","makeStyles","theme","logo","maxHeight","link","marginLeft","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","background","palette","default","appBarShift","width","enteringScreen","menuButton","marginRight","hide","display","menuItem","fontWeight","noDecoration","textDecoration","spacing","withWidth","openDrawer","handleDrawerOpen","logOut","aboutBar","classes","useContext","loginEl","setLoginEl","auth","setOpenLogin","setLoadingRoute","history","useHistory","location","useLocation","handleClose","open","Boolean","id","undefined","AppBar","position","className","clsx","Toolbar","IconButton","aria-label","onClick","edge","Button","pathname","push","console","log","src","logoImage","alt","to","style","fontSize","color","fontFamily","textTransform","isWidthDown","event","currentTarget","Avatar","Menu","anchorEl","onClose","keepMounted","MenuItem","label","required","variant","setState","type","error","TextField","margin","fullWidth","autoComplete","onChange","e","target","value","paper","flexDirection","alignItems","height","marginTop","avatar","form","submit","signUpButton","flexGrow","text","cancel","warn","close","right","top","grey","closeLoginWindow","useState","email","setEmail","password","setPassword","userType","setUserType","setError","setAuth","login","setUserInfo","preventDefault","success","set","token","setTimeout","Paper","elevation","Grow","in","Card","Alert","severity","onSubmit","MyField","FormControl","component","FormLabel","RadioGroup","row","name","FormControlLabel","control","Radio","size","root","maxWidth","openLogin","Dialog","aria-labelledby","Grid","container","justify","item","xs","Close","ColorlibConnector","withStyles","alternativeLabel","line","border","backgroundColor","borderRadius","completed","backgroundImage","StepConnector","useColorlibStepIconStyles","justifyContent","active","boxShadow","ColorlibStepIcon","props","icons","1","2","3","4","5","String","icon","activeStep","getSteps","steps","Stepper","connector","map","index","Step","key","StepLabel","StepIconComponent","setChosenSubjects","allSubjects","Autocomplete","multiple","options","getOptionLabel","option","defaultValue","renderTags","getTagProps","Chip","renderInput","params","breakpoints","down","buttons","staff","minHeight","student","largeIcon","SchoolIcon","handleNext","handleBack","cardID","handleSubmit","setFirstName","setLasName","setConformPassword","status","Collapse","timeout","Container","Typography","align","newValue","getField","Fab","disabled","getButton","stepper","button","actionsContainer","marginBottom","resetContainer","padding","firstName","lastName","confirmPassword","setStatus","chosenSubjects","React","setActiveStep","loading","setLoading","setAllSubjects","useEffect","subjectList","fetchSubjects","includes","prevActiveStep","HandleStatus","signUp","subjects","isWidthUp","title","waves","from","transform","parallax","animation","animationDelay","animationNegativeDelay","Math","random","lowerColor","upperColor","rest","xmlns","xlink","viewBox","preserveAspectRatio","shapeRendering","d","href","x","y","fill","c1","c2","secondary","light","useTheme","image","images","about","getStarted","minWidth","fixed","direction","md","startIcon","headerImage","cover","card","headline","maxSteps","CardContent","content","features","nonLinear","step","StepButton","AutoPlaySwipeableViews","autoPlay","SwipeableViews","f1","f2","f3","f4","length","axis","onChangeIndex","enableMouseEvents","swipe","interval","element","primary","BorderLinearProgress","lighten","bar","LinearProgress","up","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","toolbar","mixins","between","bottom","largeScreen","selectedRoute","alert","closeAlert","setUser","loadingRoute","setOpen","handleRouting","newRoute","handleDrawerClose","remove","CssBaseline","Snackbar","autoHideDuration","message","Drawer","List","ListItem","selected","ListItemIcon","ListItemText","Divider","Loading","ToolbarWithLoading","toolbarRoot","progress","left","children","restProps","Root","resources","fieldName","instances","green","blue","red","amber","data","currentDate","setCurrentDate","header","mainResourceName","viewChange","halfScreen","filter","each","subjectCode","loadSubjectResources","onCurrentDateChange","excludedDays","startDayHour","endDayHour","cellDuration","headerComponent","contentComponent","cyan","teal","lime","rootComponent","action","textCenter","textAlign","backgroundSize","appointmentData","setCancelAppointment","cancelAppointment","detectAlert","Header","showCloseButton","showOpenButton","onOpenButtonClick","setPendAppointment","pendAppointment","currentStatus","setCurrentStatus","setMainResourceName","Tabs","indicatorColor","textColor","scrollButtons","Tab","Select","fab","delete","getContrastText","closeButton","approve","decline","legend","PendDialog","pend","DialogTitle","DialogContent","multiline","rowsMax","comments","DialogActions","ButtonGroup","setData","Date","user","userInfo","reloadUser","fetchAppoint","appointments","then","appoints","appointment","startDate","endDate","_id","comment","formatData","Provider","Fade","TimetableBar","Content","StatusIcon","getCommentTitle","pending","approved","declined","scroll","overflow","openComments","setOpenComments","dense","unmountOnExit","disablePadding","mail","getStatusStyle","disableTouchRipple","disableRipple","select","skeleton","marks","getDuration","getEndDate","start","end","setMinutes","getMinutes","CreateDialog","staffInfo","toggle","createAppointment","setStartDate","setEndDate","setLocation","setComments","dividers","utils","MomentUtils","date","DialogContentText","Slider","valueLabelDisplay","getAriaValueText","max","Send","currentSubject","setCurrentSubject","staffs","setStaffs","setStaffInfo","setAlert","fetchStaffs","staffsInfo","staffId","subject","ListItemAvatar","Skeleton","qurey","table","CancelDialog","noStyle","StudentQuery","setSelectedRoute","fetchUser","Layout","Student","Staff","SlotSlider","thumb","valueLabel","track","rail","DeleteButton","edit","editingAppointment","setEditingAppointment","api","setSubjectCode","slot","setSlot","createTime","slotsAvailable","editTime","deleteTime","booking","setEditOpen","commandButton","Badge","badgeContent","showZero","totalStudent","createOpen","setCreateOpen","editOpen","consultations","fetchConsult","consults","consultation","studentRegistered","ConsultDialog","context","Zoom","setBookOpen","book","checkBooked","registeredConsult","simpleReload","getBookingStatus","changeMainResource","handleDialogClose","fetchAllSubject","GetField","join","setMySubjects","mySubjects","fetchMySubject","leave","subjectsInfo","Tooltip","subjectName","ListItemSecondaryAction","setSubjectName","setAdded","test","fetchSubject","openJoin","setOpenJoin","openCreate","setOpenCreate","openSpeed","setOpenSpeed","newName","setNewName","SpeedDial","ariaLabel","SpeedDialIcon","onOpen","SpeedDialAction","tooltipTitle","subjectInfo","setSubjectInfo","fetchData","cardHeader","registered","normal","lightBlue","getAction","hub","setDeleteHub","creator","time","setHubs","fetchHubs","openStudent","setOpenStudent","subjectHubs","CardHeader","summary","subheader","charAt","students","day","openTo","setDuration","setSummary","setDay","media","DeleteDialog","leaveHub","deleteing","hubs","HubCard","borderColor","aboutImg","HomeRoute","Component","render","ProtectedRoute","checkAuth","succeed","info","exact","path","Consultation","Hub","Analytic","Appointment","Setting","Home","About","Signup","createMuiTheme","main","dark","lightGreen","A200","typography","h1","h2","h3","h4","h5","subtitle1","shape","responsiveFontSizes","ReactDOM","App","document","getElementById"],"mappings":"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","file":"static/js/main.20260fbf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/legend.a4c8a91f.svg\";","module.exports = __webpack_public_path__ + \"static/media/legend.8484dbfe.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.bcec5f9e.png\";","module.exports = __webpack_public_path__ + \"static/media/chat.77ff7adb.png\";","module.exports = __webpack_public_path__ + \"static/media/f1.ac70137d.png\";","module.exports = __webpack_public_path__ + \"static/media/f2.536d31bc.png\";","module.exports = __webpack_public_path__ + \"static/media/f3.6751975b.png\";","module.exports = __webpack_public_path__ + \"static/media/f4.3322bc49.png\";","module.exports = __webpack_public_path__ + \"static/media/legend.abb19013.svg\";","module.exports = __webpack_public_path__ + \"static/media/about.eb5f65ec.png\";","module.exports = __webpack_public_path__ + \"static/media/background.20f98efe.svg\";","import { useState, useEffect, createContext } from \"react\";\nimport Cookies from \"js-cookie\";\n\nconst myFetch = async (url, method, body) => {\n    const res = await fetch(\"https://meetute.herokuapp.com\" + url, {\n        method: method,\n        body: JSON.stringify(body),\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"meetute-token\": Cookies.get(\"meetute\"),\n        },\n    });\n\n    const msg = await res.json();\n    return msg;\n};\n\nconst AuthApi = createContext();\n\nconst UserContext = createContext();\n\nconst StaffContext = createContext();\n\nconst StudentContext = createContext();\n\nexport { AuthApi, UserContext, myFetch, StaffContext, StudentContext };\n","import React, { useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Avatar,\r\n  AppBar,\r\n  Toolbar,\r\n  Button,\r\n  ButtonGroup,\r\n  Popover,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n  Fab,\r\n} from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport withWidth, { isWidthUp, isWidthDown } from \"@material-ui/core/withWidth\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { AuthApi, UserContext } from \"../Methods\";\r\n\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nimport logoImage from \"./logo.png\";\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n  logo: {\r\n    maxHeight: \"3rem\",\r\n  },\r\n  link: {\r\n    marginLeft: \"auto\",\r\n  },\r\n\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    background: theme.palette.background.default,\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 10,\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  menuItem: {\r\n    fontWeight: 900,\r\n  },\r\n  noDecoration: {\r\n    textDecoration: \"none !important\",\r\n    marginLeft: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default withWidth()(\r\n  ({ openDrawer, handleDrawerOpen, logOut, width, aboutBar }) => {\r\n    const classes = useStyles();\r\n\r\n    const { loginEl, setLoginEl, auth, setOpenLogin } = useContext(AuthApi);\r\n\r\n    const { setLoadingRoute } = useContext(UserContext);\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n\r\n    const handleClick = (event) => {\r\n      if (aboutBar) return history.push(\"/\");\r\n      setLoginEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n      setLoginEl(null);\r\n    };\r\n\r\n    const open = Boolean(loginEl);\r\n    const id = open ? \"simple-popover\" : undefined;\r\n\r\n    return (\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: openDrawer,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          {auth && !aboutBar ? (\r\n            <IconButton\r\n              aria-label=\"open drawer\"\r\n              onClick={handleDrawerOpen}\r\n              edge=\"start\"\r\n              className={clsx(classes.menuButton, {\r\n                [classes.hide]: openDrawer,\r\n              })}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n          ) : null}\r\n\r\n          <Button\r\n            onClick={() => {\r\n              if (\r\n                location.pathname === \"/Settings\" ||\r\n                location.pathname === \"/settings\"\r\n              )\r\n                return;\r\n              setLoadingRoute(true);\r\n              history.push(\"/Settings\");\r\n              console.log(location.pathname);\r\n            }}\r\n          >\r\n            <img className={classes.logo} src={logoImage} alt=\"meetute\" />\r\n          </Button>\r\n\r\n          <Link className={classes.noDecoration} to={\"/about\"}>\r\n            <Button\r\n              style={{\r\n                fontSize: \"18px\",\r\n                color: \"#616161\",\r\n                fontWeight: 530,\r\n                fontFamily: \"Arial\",\r\n                textTransform: \"none\",\r\n              }}\r\n            >\r\n              About {isWidthDown(\"sm\", width) ? \"\" : \" us\"}\r\n            </Button>\r\n          </Link>\r\n\r\n          <div className={classes.link}>\r\n            <Button className={classes.link} onClick={handleClick}>\r\n              <Avatar />\r\n            </Button>\r\n            <Menu\r\n              id={id}\r\n              open={open}\r\n              anchorEl={loginEl}\r\n              onClose={handleClose}\r\n              keepMounted\r\n            >\r\n              {auth ? (\r\n                <MenuItem\r\n                  onClick={() => {\r\n                    logOut();\r\n                    handleClose();\r\n                  }}\r\n                  className={classes.menuItem}\r\n                >\r\n                  Logout\r\n                </MenuItem>\r\n              ) : (\r\n                <div>\r\n                  <MenuItem\r\n                    onClick={() => {\r\n                      setOpenLogin(true);\r\n                      handleClose();\r\n                    }}\r\n                    className={classes.menuItem}\r\n                  >\r\n                    Login\r\n                  </MenuItem>\r\n                  <MenuItem\r\n                    onClick={() => {\r\n                      handleClose();\r\n                      history.push(\"/signup\");\r\n                    }}\r\n                    className={classes.menuItem}\r\n                  >\r\n                    Sign Up\r\n                  </MenuItem>\r\n                </div>\r\n              )}\r\n            </Menu>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    );\r\n  }\r\n);\r\n","import React from \"react\";\nimport { TextField } from \"@material-ui/core\";\n\nexport default ({ label, required, variant, setState, type, error }) => {\n\tlet style = \"filled\";\n\tif (variant != null) style = \"variant\";\n\n\treturn (\n\t\t<TextField\n\t\t\tvariant={style}\n\t\t\tmargin=\"normal\"\n\t\t\trequired={required}\n\t\t\tfullWidth\n\t\t\tid={label}\n\t\t\tlabel={label}\n\t\t\tautoComplete={label}\n\t\t\ttype={type}\n\t\t\tonChange={(e) => {\n\t\t\t\tsetState(e.target.value);\n\t\t\t}}\n\t\t\terror={error !== \"\" ? true : false}\n\t\t/>\n\t);\n};\n","import React, { useState, useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n\tAvatar,\n\tButton,\n\tFormControlLabel,\n\tFormControl,\n\tRadioGroup,\n\tFormLabel,\n\tRadio,\n\tCard,\n\tPaper,\n\tGrow,\n} from \"@material-ui/core\";\nimport MyField from \"./MyField\";\n\nimport { AuthApi } from \"./../Methods\";\nimport Cookies from \"js-cookie\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { useHistory } from \"react-router-dom\";\nimport { myFetch } from \"../Methods\";\n\n// Extension Styles\nconst useStyles = makeStyles((theme) => ({\n\tpaper: {\n\t\tdisplay: \"flex\",\n\t\tflexDirection: \"column\",\n\t\talignItems: \"center\",\n\t\twidth: \"90%\",\n\t\theight: \"90%\",\n\t},\n\terror: {\n\t\tmarginTop: theme.spacing(2),\n\t},\n\tavatar: {\n\t\twidth: theme.spacing(10),\n\t\theight: theme.spacing(10),\n\t},\n\tform: {\n\t\tmarginTop: theme.spacing(3),\n\t},\n\tsubmit: {\n\t\tmargin: theme.spacing(2, 0, 0),\n\t},\n\tsignUpButton: {\n\t\ttextTransform: \"none\",\n\t\tflexGrow: \"1\",\n\t\tcolor: \"#31a065\",\n\t},\n\ttext: {\n\t\tfontWeight: \"500\",\n\t\tmargin: \"auto\",\n\t},\n\tcancel: {\n\t\tmarginTop: theme.spacing(1.4),\n\t},\n\twarn: {\n\t\tmarginTop: theme.spacing(0.8),\n\t},\n\tclose: {\n\t\tposition: \"absolute\",\n\t\tright: theme.spacing(1),\n\t\ttop: theme.spacing(1),\n\t\tcolor: theme.palette.grey[500],\n\t},\n}));\n\nexport default ({ closeLoginWindow }) => {\n\tconst history = useHistory();\n\tconst classes = useStyles();\n\tconst [email, setEmail] = useState(\"\");\n\tconst [password, setPassword] = useState(\"\");\n\tconst [userType, setUserType] = useState(\"student\");\n\tconst [error, setError] = useState(\"\");\n\tconst { setAuth, setUserInfo } = useContext(AuthApi);\n\n\tconst login = async (e) => {\n\t\te.preventDefault();\n\t\tsetError(\"\");\n\t\tconst msg = await myFetch(\"/api/shared/users/login\", \"POST\", {\n\t\t\temail: email,\n\t\t\tpassword: password,\n\t\t\tuserType: userType,\n\t\t});\n\t\tif (msg.success) {\n\t\t\tCookies.set(\"meetute\", msg.token);\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetAuth(true);\n\t\t\t\thistory.push(\"/settings\");\n\t\t\t}, 100);\n\t\t} else {\n\t\t\tsetError(msg.error);\n\t\t}\n\t};\n\n\treturn (\n\t\t<Paper elevation={0} className={classes.paper}>\n\t\t\t<Avatar className={classes.avatar}></Avatar>\n\t\t\t{error !== \"\" ? (\n\t\t\t\t<Grow in={true}>\n\t\t\t\t\t<Card className={classes.error}>\n\t\t\t\t\t\t<Alert\n\t\t\t\t\t\t\tseverity=\"error\"\n\t\t\t\t\t\t\tonClose={() => {\n\t\t\t\t\t\t\t\tsetError(\"\");\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{error}\n\t\t\t\t\t\t</Alert>\n\t\t\t\t\t</Card>\n\t\t\t\t</Grow>\n\t\t\t) : null}\n\n\t\t\t<form className={classes.form} onSubmit={login}>\n\t\t\t\t<MyField\n\t\t\t\t\tlabel=\"Email\"\n\t\t\t\t\tsetState={setEmail}\n\t\t\t\t\trequired={true}\n\t\t\t\t\terror={error}\n\t\t\t\t/>\n\t\t\t\t<MyField\n\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\tsetState={setPassword}\n\t\t\t\t\trequired={true}\n\t\t\t\t\ttype={\"password\"}\n\t\t\t\t\terror={error}\n\t\t\t\t/>\n\t\t\t\t<FormControl component=\"fieldset\">\n\t\t\t\t\t<FormLabel component=\"legend\">login as</FormLabel>\n\t\t\t\t\t<RadioGroup\n\t\t\t\t\t\trow\n\t\t\t\t\t\taria-label=\"position\"\n\t\t\t\t\t\tname=\"position\"\n\t\t\t\t\t\tvalue={userType}\n\t\t\t\t\t>\n\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\tvalue=\"student\"\n\t\t\t\t\t\t\tcontrol={<Radio color=\"primary\" />}\n\t\t\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\t\t\tsetUserType(event.target.value);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tlabel=\"Student\"\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\tvalue=\"staff\"\n\t\t\t\t\t\t\tcontrol={<Radio color=\"primary\" />}\n\t\t\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\t\t\tsetUserType(event.target.value);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tlabel=\"Staff\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</RadioGroup>\n\t\t\t\t</FormControl>\n\t\t\t\t<Button\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\tfullWidth\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tclassName={classes.submit}\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t>\n\t\t\t\t\tLogin In\n\t\t\t\t</Button>\n\t\t\t</form>\n\t\t\t<br />\n\t\t\t<Button\n\t\t\t\tsize=\"small\"\n\t\t\t\tcolor=\"primary\"\n\t\t\t\tclassName={classes.signUpButton}\n\t\t\t\tfullWidth\n\t\t\t\tonClick={() => {\n\t\t\t\t\tcloseLoginWindow();\n\t\t\t\t\thistory.push(\"/signup\");\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tDon't have an account? Sign Up\n\t\t\t</Button>\n\t\t\t<br />\n\t\t</Paper>\n\t);\n};\n","import React, { useContext } from \"react\";\nimport { Grid, Dialog, IconButton } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LoginForm from \"./loginForm.jsx\";\nimport { AuthApi } from \"./../Methods\";\nimport { Close } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: \"auto\",\n        maxWidth: theme.spacing(55),\n    },\n    close: {\n        marginTop: theme.spacing(1),\n    },\n}));\n\nexport default () => {\n    const classes = useStyles();\n    const { setLoginEl, openLogin, setOpenLogin } = useContext(AuthApi);\n\n    const closeLoginWindow = () => {\n        setOpenLogin(false);\n        setLoginEl(null);\n    };\n\n    return (\n        <Dialog\n            onClose={closeLoginWindow}\n            aria-labelledby=\"customized-dialog-title\"\n            open={openLogin}\n            className={classes.root}\n        >\n            <Grid container justify=\"flex-end\">\n                <Grid item xs={2}>\n                    <IconButton\n                        className={classes.close}\n                        onClick={closeLoginWindow}\n                    >\n                        <Close />\n                    </IconButton>\n                </Grid>\n            </Grid>\n\n            <Grid container justify=\"center\">\n                <LoginForm closeLoginWindow={closeLoginWindow} />\n            </Grid>\n        </Dialog>\n    );\n};\n","import React from \"react\";\nimport {\n\tStepConnector,\n\tStepper,\n\tStep,\n\tStepLabel,\n\tGrow,\n} from \"@material-ui/core\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport clsx from \"clsx\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\n\nconst ColorlibConnector = withStyles({\n\talternativeLabel: {\n\t\ttop: 22,\n\t},\n\tline: {\n\t\theight: 3,\n\t\tborder: 0,\n\t\tbackgroundColor: \"#eaeaf0\",\n\t\tborderRadius: 1,\n\t},\n\n\tcompleted: {\n\t\t\"& $line\": {\n\t\t\tbackgroundImage:\n\t\t\t\t\"linear-gradient(to right, #47cc89 0%, #47cc89 100%)\",\n\t\t},\n\t},\n})(StepConnector);\n\nconst useColorlibStepIconStyles = makeStyles({\n\troot: {\n\t\tbackgroundColor: \"#ccc\",\n\t\tzIndex: 1,\n\t\tcolor: \"#fff\",\n\t\twidth: 50,\n\t\theight: 50,\n\t\tdisplay: \"flex\",\n\t\tborderRadius: \"50%\",\n\t\tjustifyContent: \"center\",\n\t\talignItems: \"center\",\n\t},\n\tactive: {\n\t\tbackgroundImage: \"linear-gradient(to right, #47cc89 0%, #47cc89 100%)\",\n\t\tboxShadow: \"0 4px 10px 0 rgba(0,0,0,.25)\",\n\t},\n\tcompleted: {\n\t\tbackgroundImage: \"linear-gradient(to right, #47cc89 0%, #47cc89 100%)\",\n\t},\n});\n\nfunction ColorlibStepIcon(props) {\n\tconst classes = useColorlibStepIconStyles();\n\tconst { active, completed } = props;\n\n\tconst icons = {\n\t\t1: <LockOutlinedIcon />,\n\t\t2: <LockOutlinedIcon />,\n\t\t3: <LockOutlinedIcon />,\n\t\t4: <LockOutlinedIcon />,\n\t\t5: <LockOutlinedIcon />,\n\t};\n\n\treturn (\n\t\t<div\n\t\t\tclassName={clsx(classes.root, {\n\t\t\t\t[classes.active]: active,\n\t\t\t\t[classes.completed]: completed,\n\t\t\t})}\n\t\t>\n\t\t\t{icons[String(props.icon)]}\n\t\t</div>\n\t);\n}\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tbackground: theme.background,\n\t},\n}));\n\nexport default ({ activeStep, getSteps }) => {\n\tconst classes = useStyles();\n\tconst steps = getSteps();\n\n\treturn (\n\t\t<Grow in>\n\t\t\t<Stepper\n\t\t\t\tconnector={<ColorlibConnector />}\n\t\t\t\talternativeLabel\n\t\t\t\tactiveStep={activeStep}\n\t\t\t\tclassName={classes.root}\n\t\t\t>\n\t\t\t\t{steps.map((label, index) => (\n\t\t\t\t\t<Step key={label}>\n\t\t\t\t\t\t<StepLabel StepIconComponent={ColorlibStepIcon}>\n\t\t\t\t\t\t\t{label}\n\t\t\t\t\t\t</StepLabel>\n\t\t\t\t\t</Step>\n\t\t\t\t))}\n\t\t\t</Stepper>\n\t\t</Grow>\n\t);\n};\n","import React, { useState, useEffect } from \"react\";\nimport Autocomplete from \"@material-ui/lab/autocomplete\";\nimport { TextField, Chip } from \"@material-ui/core\";\nimport { myFetch } from \"../Methods\";\n\nexport default ({ setChosenSubjects, allSubjects }) => {\n\treturn (\n\t\t<div>\n\t\t\t<Autocomplete\n\t\t\t\tmultiple\n\t\t\t\tid=\"size-small-filled-multi\"\n\t\t\t\tsize=\"small\"\n\t\t\t\toptions={allSubjects}\n\t\t\t\tgetOptionLabel={(option) => option}\n\t\t\t\tdefaultValue={[allSubjects[1]]}\n\t\t\t\trenderTags={(value, getTagProps) =>\n\t\t\t\t\tvalue.map((option, index) => (\n\t\t\t\t\t\t<Chip\n\t\t\t\t\t\t\tlabel={option}\n\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\t{...getTagProps({ index })}\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\tvariant=\"default\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t))\n\t\t\t\t}\n\t\t\t\tonChange={(event, value) => setChosenSubjects(value)}\n\t\t\t\trenderInput={(params) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t{...params}\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tlabel=\"Subjects\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    Grid,\r\n    Paper,\r\n    Typography,\r\n    Collapse,\r\n    Button,\r\n    Fab,\r\n    Container,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nimport NextIcon from \"@material-ui/icons/ArrowForward\";\r\nimport BackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport SchoolIcon from \"@material-ui/icons/School\";\r\n\r\nimport { myFetch } from \"../Methods\";\r\nimport MyField from \"../Login/MyField\";\r\n\r\nimport Subjects from \"./subjects\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        background: theme.background,\r\n\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            marginTop: theme.spacing(8),\r\n        },\r\n    },\r\n    buttons: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    staff: {\r\n        minHeight: \"4rem\",\r\n        background: \"linear-gradient(to right, #f7985d 0%, #f7985d 100%)\",\r\n        borderRadius: 30,\r\n    },\r\n    student: {\r\n        minHeight: \"4rem\",\r\n        background: \"linear-gradient(to right, #f7985d 0%, #f7985d 100%)\",\r\n        borderRadius: 30,\r\n    },\r\n    largeIcon: {\r\n        width: 30,\r\n        height: 30,\r\n    },\r\n    noDecoration: {\r\n        textDecoration: \"none !important\",\r\n    },\r\n    SchoolIcon: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nexport default (props) => {\r\n    const classes = useStyles();\r\n\r\n    const {\r\n        activeStep,\r\n        handleNext,\r\n        handleBack,\r\n        text,\r\n        cardID,\r\n        handleSubmit,\r\n    } = props;\r\n\r\n    const history = useHistory();\r\n\r\n    const getButton = (cardID) => {\r\n        switch (cardID) {\r\n            case 5:\r\n                return (\r\n                    <Grid container justify=\"space-between\" alignItems=\"center\">\r\n                        <Grid item xs={12}>\r\n                            <Grid container justify=\"center\">\r\n                                <Link to=\"/\" className={classes.noDecoration}>\r\n                                    <Fab\r\n                                        variant=\"extended\"\r\n                                        color=\"primary\"\r\n                                        aria-label=\"add\"\r\n                                    >\r\n                                        <SchoolIcon\r\n                                            className={classes.SchoolIcon}\r\n                                        />\r\n                                        Start your meetute life\r\n                                    </Fab>\r\n                                </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                );\r\n\r\n            case 4:\r\n                return (\r\n                    <Grid container justify=\"space-between\" alignItems=\"center\">\r\n                        <Grid item xs={3}>\r\n                            <Button\r\n                                disabled={cardID === 0}\r\n                                onClick={handleBack}\r\n                                size=\"large\"\r\n                                fullWidth\r\n                            >\r\n                                <BackIcon />\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <Button\r\n                                onClick={handleSubmit}\r\n                                size=\"large\"\r\n                                fullWidth\r\n                            >\r\n                                Submit\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                );\r\n\r\n            default:\r\n                return (\r\n                    <Grid container justify=\"space-between\" alignItems=\"center\">\r\n                        <Grid item xs={3}>\r\n                            <Button\r\n                                disabled={cardID === 0}\r\n                                onClick={handleBack}\r\n                                size=\"large\"\r\n                                fullWidth\r\n                            >\r\n                                <BackIcon />\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <Button\r\n                                onClick={handleNext}\r\n                                size=\"large\"\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                            >\r\n                                <NextIcon />\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                );\r\n        }\r\n    };\r\n\r\n    const {\r\n        setEmail,\r\n        userType,\r\n        setUserType,\r\n        setFirstName,\r\n        setLasName,\r\n        setPassword,\r\n        setConformPassword,\r\n        status,\r\n        setChosenSubjects,\r\n        allSubjects,\r\n    } = props;\r\n\r\n    const getField = (cardID) => {\r\n        switch (cardID) {\r\n            case 0:\r\n                return (\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={[\"student\", \"staff\"]}\r\n                        defaultValue=\"student\"\r\n                        getOptionLabel={(option) => option}\r\n                        value={userType}\r\n                        onChange={(event, newValue) => {\r\n                            setUserType(newValue);\r\n                        }}\r\n                        renderInput={(params) => {\r\n                            return (\r\n                                <TextField\r\n                                    {...params}\r\n                                    label=\"I'm a\"\r\n                                    variant=\"filled\"\r\n                                    required\r\n                                />\r\n                            );\r\n                        }}\r\n                    />\r\n                );\r\n            case 2:\r\n                return (\r\n                    <MyField\r\n                        label=\"Please Enter your Email\"\r\n                        setState={setEmail}\r\n                        required={true}\r\n                        type=\"email\"\r\n                        error={\r\n                            status === \"Error! email cannot be blank\"\r\n                                ? status\r\n                                : \"\"\r\n                        }\r\n                    />\r\n                );\r\n            case 3:\r\n                return (\r\n                    <div>\r\n                        <MyField\r\n                            label=\"Set Password\"\r\n                            setState={setPassword}\r\n                            required={true}\r\n                            type={\"password\"}\r\n                            error={\r\n                                status === \"Error! password cannot be blank\"\r\n                                    ? status\r\n                                    : \"\"\r\n                            }\r\n                        />\r\n                        <MyField\r\n                            label=\"Confirm Password\"\r\n                            setState={setConformPassword}\r\n                            required={true}\r\n                            type={\"password\"}\r\n                            error={\r\n                                status === \"Error! password cannot be blank\"\r\n                                    ? status\r\n                                    : \"\"\r\n                            }\r\n                        />\r\n                    </div>\r\n                );\r\n            case 4:\r\n                return (\r\n                    <Subjects\r\n                        allSubjects={allSubjects}\r\n                        setChosenSubjects={setChosenSubjects}\r\n                    />\r\n                );\r\n            case 1:\r\n                return (\r\n                    <div>\r\n                        <MyField\r\n                            label=\"First Name\"\r\n                            setState={setFirstName}\r\n                            required={true}\r\n                            error={\r\n                                status === \"Error! FirstName cannot be blank\"\r\n                                    ? status\r\n                                    : \"\"\r\n                            }\r\n                        />\r\n\r\n                        <MyField\r\n                            label=\"Last Name\"\r\n                            setState={setLasName}\r\n                            required={true}\r\n                            error={\r\n                                status === \"Error! lastName cannot be blank\"\r\n                                    ? status\r\n                                    : \"\"\r\n                            }\r\n                        />\r\n                    </div>\r\n                );\r\n\r\n            default:\r\n                return null;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Collapse in={activeStep === cardID} timeout={500}>\r\n                <Paper\r\n                    variant=\"elevation\"\r\n                    elevation={0}\r\n                    className={classes.paper}\r\n                >\r\n                    <Container maxWidth=\"md\">\r\n                        <Typography align=\"center\" variant=\"h4\">\r\n                            {text}\r\n                            <br />\r\n                            <br />\r\n                        </Typography>\r\n\r\n                        <Container className={classes.buttons} maxWidth=\"sm\">\r\n                            <form\r\n                                onSubmit={(event) => {\r\n                                    event.preventDefault();\r\n                                }}\r\n                            >\r\n                                {getField(cardID)}\r\n                                <br />\r\n                                {getButton(cardID)}\r\n                            </form>\r\n                        </Container>\r\n                    </Container>\r\n                </Paper>\r\n            </Collapse>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport {\r\n    Typography,\r\n    Container,\r\n    Grow,\r\n    Paper,\r\n    Collapse,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { AuthApi } from \"./../Methods\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nimport withWidth, { isWidthUp } from \"@material-ui/core/withWidth\";\r\n\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nimport Stepper from \"./stepper\";\r\n\r\nimport StepCard from \"./stepCard\";\r\n\r\nimport { myFetch } from \"../Methods\";\r\n\r\nfunction getSteps() {\r\n    return [\"User Type\", \"Name\", \"Email\", \"Password\", \"Subjects\"];\r\n}\r\n\r\nconst steps = [\r\n    {\r\n        text: \"Sign up as...\",\r\n        cardID: 0,\r\n    },\r\n    {\r\n        text: \"What's your name?\",\r\n        cardID: 1,\r\n    },\r\n\r\n    {\r\n        text: \"Please enter your email:\",\r\n        cardID: 2,\r\n    },\r\n\r\n    {\r\n        text: \"Set your password:\",\r\n        cardID: 3,\r\n    },\r\n    {\r\n        text: \"Subjects you would like to pick?\",\r\n        cardID: 4,\r\n    },\r\n    {\r\n        text: \"We are all set! enjoy meeting tutors!\",\r\n        cardID: 5,\r\n    },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: \"100%\",\r\n        background: theme.background,\r\n    },\r\n    stepper: {\r\n        background: theme.background,\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    actionsContainer: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    resetContainer: {\r\n        padding: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nexport default withWidth()(({ width }) => {\r\n    const classes = useStyles();\r\n\r\n    //Sign up states\r\n    const [email, setEmail] = useState(\"\");\r\n    const [userType, setUserType] = useState(\"student\");\r\n    const [firstName, setFirstName] = useState(\"\");\r\n    const [lastName, setLasName] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmPassword, setConformPassword] = useState(\"\");\r\n    const [status, setStatus] = useState(\"\");\r\n    const [chosenSubjects, setChosenSubjects] = useState([\"INFO30005\"]);\r\n\r\n    //Steps states\r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n\r\n    //loading data.\r\n    const [loading, setLoading] = useState(true);\r\n    const [allSubjects, setAllSubjects] = useState([]);\r\n\r\n    const { setAuth } = useContext(AuthApi);\r\n\r\n    useEffect(() => {\r\n        const fetchSubjects = async () => {\r\n            const { subjectList } = await myFetch(\r\n                \"/api/shared/users/allSubjects\",\r\n                \"GET\"\r\n            );\r\n            setAllSubjects(subjectList);\r\n            setLoading(false);\r\n            console.log(subjectList);\r\n        };\r\n        fetchSubjects();\r\n    }, [status]);\r\n\r\n    const handleNext = () => {\r\n        switch (activeStep) {\r\n            case 1:\r\n                if (firstName === \"\" || lastName === \"\") {\r\n                    return;\r\n                }\r\n                break;\r\n            case 2:\r\n                if (email === \"\" || !email.includes(\"@\")) {\r\n                    return;\r\n                }\r\n                break;\r\n            case 3:\r\n                if (password === \"\" || confirmPassword === \"\") {\r\n                    return;\r\n                }\r\n                if (password !== confirmPassword) {\r\n                    setStatus(\"Sorry password does not match\");\r\n                    return;\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n        console.log(userType);\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    };\r\n\r\n    const HandleStatus = () => {\r\n        if (status === \"success\") {\r\n            return (\r\n                <Alert variant=\"filled\" elevation={6} severity=\"success\">\r\n                    You are good to go!\r\n                </Alert>\r\n            );\r\n        }\r\n        return (\r\n            <Alert\r\n                severity=\"error\"\r\n                variant=\"filled\"\r\n                elevation={6}\r\n                onClose={() => {\r\n                    setStatus(\"\");\r\n                }}\r\n            >\r\n                {status}\r\n            </Alert>\r\n        );\r\n    };\r\n\r\n    const signUp = async (e) => {\r\n        setStatus(\"\");\r\n        const msg = await myFetch(\"/api/shared/users/signup\", \"POST\", {\r\n            email: email,\r\n            password: password,\r\n            firstName: firstName,\r\n            lastName: lastName,\r\n            subjects: chosenSubjects,\r\n            userType: userType,\r\n        });\r\n\r\n        if (msg.success) {\r\n            setStatus(\"success\");\r\n            handleNext();\r\n            Cookies.set(\"meetute\", msg.token);\r\n            setAuth(true);\r\n        } else {\r\n            console.log(msg);\r\n            setStatus(msg.error);\r\n            if (msg.error.includes(\"ype\")) {\r\n                setActiveStep(0);\r\n            }\r\n            if (msg.error.includes(\"Name\")) {\r\n                setActiveStep(1);\r\n            }\r\n            if (msg.error.includes(\"email\")) {\r\n                setActiveStep(2);\r\n            }\r\n            if (msg.error.includes(\"password\")) {\r\n                setActiveStep(3);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Typography variant=\"h1\">\r\n                <br />\r\n            </Typography>\r\n            {isWidthUp(\"sm\", width) ? (\r\n                <Stepper activeStep={activeStep} getSteps={getSteps} />\r\n            ) : null}\r\n\r\n            <Container maxWidth=\"md\">\r\n                <Grow in={status !== \"\"}>\r\n                    <Paper elevation={0}>\r\n                        <HandleStatus />\r\n                    </Paper>\r\n                </Grow>\r\n                <br />\r\n            </Container>\r\n            <Collapse in={!loading} timeout={1000}>\r\n                {loading ? null : (\r\n                    <div>\r\n                        {steps.map(({ title, text, cardID }) => (\r\n                            <StepCard\r\n                                cardID={cardID}\r\n                                title={title}\r\n                                text={text}\r\n                                handleBack={handleBack}\r\n                                handleNext={handleNext}\r\n                                activeStep={activeStep}\r\n                                userType={userType}\r\n                                setUserType={setUserType}\r\n                                setEmail={setEmail}\r\n                                setFirstName={setFirstName}\r\n                                setLasName={setLasName}\r\n                                setPassword={setPassword}\r\n                                setConformPassword={setConformPassword}\r\n                                status={status}\r\n                                setChosenSubjects={setChosenSubjects}\r\n                                handleSubmit={signUp}\r\n                                key={cardID}\r\n                                allSubjects={allSubjects}\r\n                            ></StepCard>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </Collapse>\r\n            <Typography variant=\"h1\">\r\n                <br />\r\n            </Typography>\r\n        </div>\r\n    );\r\n});\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core\";\n\nconst styles = {\n\twaves: {\n\t\tposition: \"relative\",\n\t\twidth: \"100%\",\n\t\tmarginBottom: -7,\n\t\theight: \"7vw\",\n\t\tminHeight: \"7vw\",\n\t},\n\t\"@keyframes moveForever\": {\n\t\tfrom: { transform: \"translate3d(-90px, 0, 0)\" },\n\t\tto: { transform: \"translate3d(85px, 0, 0)\" },\n\t},\n\tparallax: {\n\t\t\"& > use\": {\n\t\t\tanimation:\n\t\t\t\t\"$moveForever 4s cubic-bezier(0.62, 0.5, 0.38, 0.5) infinite\",\n\t\t\tanimationDelay: (props) => `-${props.animationNegativeDelay}s`,\n\t\t},\n\t},\n};\n\n/**\n *  https://codepen.io/csspoints/pen/WNeOEqd\n */\nfunction WaveBorder(props) {\n\tconst id = String(Math.random());\n\tconst {\n\t\tclassName,\n\t\tlowerColor,\n\t\tupperColor,\n\t\tclasses,\n\t\tanimationNegativeDelay,\n\t\t...rest\n\t} = props;\n\treturn (\n\t\t<div className={className} style={{ background: upperColor }} {...rest}>\n\t\t\t<svg\n\t\t\t\tclassName={classes.waves}\n\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\txlink=\"http://www.w3.org/1999/xlink\"\n\t\t\t\tviewBox=\"0 24 150 28\"\n\t\t\t\tpreserveAspectRatio=\"none\"\n\t\t\t\tshapeRendering=\"auto\"\n\t\t\t>\n\t\t\t\t<defs>\n\t\t\t\t\t<path\n\t\t\t\t\t\tid={id}\n\t\t\t\t\t\td=\"M-160 44c30 0 58-18 88-18s 58 18 88 18 58-18 88-18 58 18 88 18 v44h-352z\"\n\t\t\t\t\t/>\n\t\t\t\t</defs>\n\t\t\t\t<g className={classes.parallax}>\n\t\t\t\t\t<use href={`#${id}`} x=\"48\" y=\"0\" fill={lowerColor} />\n\t\t\t\t</g>\n\t\t\t</svg>\n\t\t</div>\n\t);\n}\n\nWaveBorder.propTypes = {\n\tlowerColor: PropTypes.string.isRequired,\n\tupperColor: PropTypes.string.isRequired,\n\tclasses: PropTypes.object.isRequired,\n\tanimationNegativeDelay: PropTypes.number.isRequired,\n};\n\nexport default withStyles(styles)(WaveBorder);\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nimport AppBar from \"../Navigation/AppBar\";\r\n\r\nimport Login from \"../Login/login\";\r\n\r\nimport SignupForm from \"./signupForm\";\r\n\r\nimport WaveBorder from \"../Home/waveBorder\";\r\n\r\nimport { myFetch } from \"../Methods\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    c1: {\r\n        background: theme.background,\r\n        maxWidth: \"100WH\",\r\n    },\r\n    c2: {\r\n        background: theme.palette.secondary.light,\r\n        height: \"80VH\",\r\n    },\r\n}));\r\n\r\nexport default () => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [openLogin, setOpenLogin] = useState(false);\r\n\r\n    return (\r\n        <div>\r\n            <AppBar setOpenLogin={setOpenLogin} />\r\n            <Login open={openLogin} setOpenLogin={setOpenLogin} />\r\n\r\n            <div className={classes.c1}>\r\n                <SignupForm />\r\n            </div>\r\n            <div className={classes.c2}>\r\n                <WaveBorder\r\n                    upperColor={theme.background}\r\n                    lowerColor={theme.palette.secondary.light}\r\n                    animationNegativeDelay={100}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Container,\r\n  Hidden,\r\n  Typography,\r\n  Grow,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport withWidth, { isWidthUp } from \"@material-ui/core/withWidth\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport headerImage from \"./img/chat.png\";\r\nimport ChatBubbleOutlineIcon from \"@material-ui/icons/VpnKey\";\r\nimport FaceIcon from \"@material-ui/icons/Face\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  image: {\r\n    maxHeight: \"70%\",\r\n    maxWidth: \"100%\",\r\n  },\r\n\r\n  root: {\r\n    minHeight: \"70%\",\r\n    background: theme.background,\r\n  },\r\n  images: {\r\n    minHeight: \"70%\",\r\n  },\r\n  background: {\r\n    background: theme.background,\r\n  },\r\n  title: {\r\n    background: theme.background,\r\n  },\r\n  body: {\r\n    color: \"#595e53\",\r\n  },\r\n  about: {\r\n    minHeight: \"4rem\",\r\n    background: \"linear-gradient(45deg, #ff9a9e 0%, #fad0c4 99%, #fad0c4 100%)\",\r\n    borderRadius: 30,\r\n  },\r\n  getStarted: {\r\n    minHeight: \"4rem\",\r\n    background: \"linear-gradient(to right, #92fe9d 0%, #00c9ff 100%)\",\r\n    borderRadius: 30,\r\n  },\r\n  largeIcon: {\r\n    width: 30,\r\n    height: 30,\r\n  },\r\n  noDecoration: {\r\n    textDecoration: \"none !important\",\r\n    fontSize: \"\",\r\n    fontWeight: 0,\r\n    minWidth: \"100%\",\r\n  },\r\n}));\r\n\r\nexport default withWidth()(({ setOpenLogin, width }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Container fixed>\r\n        <Grid container justify=\"center\" alignItems=\"center\" direction=\"row\">\r\n          <Grid item xs={12} md={6}>\r\n            <Grow in timeout=\"auto\">\r\n              <Grid\r\n                container\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Typography variant=\"h2\">\r\n                  <br />\r\n                  <br />\r\n                </Typography>\r\n                <Grid item xs={8}>\r\n                  <Typography\r\n                    variant={isWidthUp(\"sm\", width) ? \"h3\" : \"h4\"}\r\n                    align=\"center\"\r\n                  >\r\n                    Ask your questions today, for an easier life tomorrow.\r\n                  </Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={8}>\r\n                  <Typography className={classes.body} variant=\"h5\">\r\n                    <br />\r\n                    MeeTute wants to make consultation and support services more\r\n                    accessible for students and more manageable for teaching\r\n                    staff.\r\n                    <br />\r\n                    <br />\r\n                  </Typography>\r\n                  <Grid container direction=\"row\" justify=\"center\" spacing={3}>\r\n                    <Grid item xs={6}>\r\n                      <Grid container justify=\"center\">\r\n                        <Link to={\"/signup\"} className={classes.noDecoration}>\r\n                          <Button\r\n                            fullWidth\r\n                            size=\"large\"\r\n                            className={classes.getStarted}\r\n                            startIcon={\r\n                              isWidthUp(\"sm\", width) ? (\r\n                                <ChatBubbleOutlineIcon\r\n                                  className={classes.largeIcon}\r\n                                />\r\n                              ) : null\r\n                            }\r\n                          >\r\n                            {isWidthUp(\"sm\", width) ? \"get started\" : \"sign up\"}\r\n                          </Button>\r\n                        </Link>\r\n                      </Grid>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6}>\r\n                      <Grid container justify=\"center\">\r\n                        <Button\r\n                          fullWidth\r\n                          size=\"large\"\r\n                          className={classes.about}\r\n                          startIcon={\r\n                            isWidthUp(\"sm\", width) ? (\r\n                              <FaceIcon className={classes.largeIcon} />\r\n                            ) : null\r\n                          }\r\n                          onClick={() => {\r\n                            setOpenLogin(true);\r\n                          }}\r\n                        >\r\n                          Login\r\n                        </Button>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grow>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6}>\r\n            <Typography variant=\"h1\">\r\n              <br />\r\n            </Typography>\r\n            <Grow in>\r\n              <Grid container justify=\"center\" alignItems=\"flex-end\">\r\n                <img src={headerImage} className={classes.image} />\r\n              </Grid>\r\n            </Grow>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h5\">\r\n              <br />\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport {\r\n    Grid,\r\n    CardContent,\r\n    Typography,\r\n    Button,\r\n    Paper,\r\n} from \"@material-ui/core\";\r\nimport withWidth, { isWidthUp } from \"@material-ui/core/withWidth\";\r\n\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    cover: {\r\n        maxWidth: \"100%\",\r\n    },\r\n    card: {\r\n        marginTop: theme.spacing(3),\r\n        backgroundColor: theme.palette.secondary.light,\r\n    },\r\n    text: {\r\n        color: \"#6984aa\",\r\n        fontWeight: 500,\r\n    },\r\n    headline: {\r\n        color: \"#33456b\",\r\n        fontWeight: 900,\r\n    },\r\n}));\r\n\r\nexport default withWidth()((props) => {\r\n    const theme = useTheme();\r\n    const {\r\n        setActiveStep,\r\n        activeStep,\r\n        headline,\r\n        text,\r\n        maxSteps,\r\n        image,\r\n        width,\r\n    } = props;\r\n\r\n    const handleNext = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid container justify=\"center\" alignItems=\"center\">\r\n            <Grid item xs={1}>\r\n                <Grid container justify=\"center\">\r\n                    <Button\r\n                        size=\"small\"\r\n                        onClick={handleBack}\r\n                        disabled={activeStep === 0}\r\n                        className={classes.button}\r\n                    >\r\n                        {theme.direction === \"rtl\" ? (\r\n                            <KeyboardArrowRight />\r\n                        ) : (\r\n                            <KeyboardArrowLeft />\r\n                        )}\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={8}>\r\n                <Paper elevation={0} className={classes.card}>\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"space-around\"\r\n                        alignItems=\"center\"\r\n                    >\r\n                        <Grid item xs={isWidthUp(\"sm\", width) ? 4 : 12}>\r\n                            <Grid\r\n                                container\r\n                                direction=\"column\"\r\n                                justify=\"center\"\r\n                                alignItems=\"center\"\r\n                            >\r\n                                <img\r\n                                    className={classes.cover}\r\n                                    src={image}\r\n                                    alt=\"Live from space album cover\"\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={isWidthUp(\"sm\", width) ? 6 : 12}>\r\n                            <CardContent className={classes.content}>\r\n                                <Typography\r\n                                    className={classes.headline}\r\n                                    variant={\r\n                                        isWidthUp(\"sm\", width) ? \"h4\" : \"h5\"\r\n                                    }\r\n                                >\r\n                                    {headline}\r\n                                </Typography>\r\n                                <Typography\r\n                                    className={classes.text}\r\n                                    variant=\"h5\"\r\n                                >\r\n                                    <br />\r\n                                    {text}\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </Grid>\r\n\r\n            <Grid item xs={1}>\r\n                <Grid container justify=\"center\">\r\n                    <Button\r\n                        size=\"small\"\r\n                        onClick={handleNext}\r\n                        disabled={activeStep === maxSteps - 1}\r\n                        className={classes.button}\r\n                    >\r\n                        {theme.direction === \"rtl\" ? (\r\n                            <KeyboardArrowLeft />\r\n                        ) : (\r\n                            <KeyboardArrowRight />\r\n                        )}\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n});\r\n","import React from \"react\";\r\nimport { makeStyles, withStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport {\r\n    Stepper,\r\n    Step,\r\n    StepButton,\r\n    StepLabel,\r\n    StepConnector,\r\n} from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport withWidth, { isWidthUp } from \"@material-ui/core/withWidth\";\r\n\r\nimport TodayIcon from \"@material-ui/icons/Today\";\r\nimport AlarmIcon from \"@material-ui/icons/Alarm\";\r\nimport GroupAddIcon from \"@material-ui/icons/GroupAdd\";\r\nimport TimelineIcon from \"@material-ui/icons/Timeline\";\r\n\r\nconst ColorlibConnector = withStyles({\r\n    alternativeLabel: {\r\n        top: 22,\r\n    },\r\n    line: {\r\n        height: 3,\r\n        border: 0,\r\n        backgroundColor: \"#eaeaf0\",\r\n        borderRadius: 1,\r\n    },\r\n})(StepConnector);\r\n\r\nconst useColorlibStepIconStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: \"#ccc\",\r\n        zIndex: 1,\r\n        color: \"#fff\",\r\n        width: 50,\r\n        height: 50,\r\n\r\n        display: \"flex\",\r\n        borderRadius: \"50%\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n    active: {\r\n        backgroundImage: \"linear-gradient(to top, #0a6aab 0%, #0a6aab 100%)\",\r\n        boxShadow: \"0 4px 10px 0 rgba(0,0,0,.25)\",\r\n    },\r\n    icon: {\r\n        width: 10,\r\n        height: 10,\r\n    },\r\n}));\r\n\r\nfunction ColorlibStepIcon(props) {\r\n    const classes = useColorlibStepIconStyles();\r\n    const { active, completed } = props;\r\n\r\n    const icons = {\r\n        1: <TodayIcon />,\r\n        2: <AlarmIcon />,\r\n        3: <GroupAddIcon />,\r\n        4: <TimelineIcon />,\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className={clsx(classes.root, {\r\n                [classes.active]: active,\r\n                [classes.completed]: completed,\r\n            })}\r\n        >\r\n            {icons[String(props.icon)]}\r\n        </div>\r\n    );\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: theme.palette.secondary.light,\r\n        width: \"60%\",\r\n        margin: \"auto\",\r\n    },\r\n}));\r\n\r\nexport default ({ activeStep, setActiveStep, features, width }) => {\r\n    const classes = useStyles();\r\n\r\n    const handleStep = (step) => () => {\r\n        setActiveStep(step);\r\n    };\r\n\r\n    return (\r\n        <Stepper\r\n            alternativeLabel\r\n            activeStep={activeStep}\r\n            connector={<ColorlibConnector />}\r\n            className={classes.root}\r\n            nonLinear\r\n        >\r\n            {features.map(({ headline }, index) => (\r\n                <Step key={headline}>\r\n                    <StepButton\r\n                        className={classes.button}\r\n                        onClick={handleStep(index)}\r\n                    >\r\n                        <StepLabel StepIconComponent={ColorlibStepIcon}>\r\n                            {headline}\r\n                        </StepLabel>\r\n                    </StepButton>\r\n                </Step>\r\n            ))}\r\n        </Stepper>\r\n    );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport withWidth, { isWidthUp } from \"@material-ui/core/withWidth\";\r\n\r\n//Icons\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport { autoPlay } from \"react-swipeable-views-utils\";\r\nimport FeatureCard from \"./featureCard\";\r\nimport Stepper from \"./stepper\";\r\n\r\nimport f1 from \"./img/f1.png\";\r\nimport f2 from \"./img/f2.png\";\r\nimport f3 from \"./img/f3.png\";\r\nimport f4 from \"./img/f4.png\";\r\n\r\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\r\n\r\nconst features = [\r\n    {\r\n        headline: \"Consultation Booking System\",\r\n        text:\r\n            \"MeeTute makes it simple for students and teaching staff to schedule or book consultation appointments.\",\r\n        image: f1,\r\n    },\r\n    {\r\n        headline: \"Scheduling Assistant\",\r\n        text:\r\n            \"Cannot make the consultation time? Don’t worry, use our scheduling assistant to book one-on-one sessions.\",\r\n\r\n        image: f2,\r\n    },\r\n    {\r\n        headline: \"Study Group Helper\",\r\n        text:\r\n            \"Connect with your peers in the same subject and develop better learning experiences.\",\r\n\r\n        image: f3,\r\n    },\r\n    {\r\n        headline: \"User Analytics Tool\",\r\n        text:\r\n            \"MeeTute delivers beautiful visualisations for past consultation registration statistics, making it easier for teaching staff for future planning\",\r\n\r\n        image: f4,\r\n    },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: theme.palette.secondary.light,\r\n    },\r\n\r\n    headline: {\r\n        color: \"#05578e\",\r\n    },\r\n}));\r\n\r\nexport default withWidth()(({ width }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const maxSteps = features.length;\r\n\r\n    const handleStepChange = (step) => {\r\n        setActiveStep(step);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Typography\r\n                className={classes.headline}\r\n                variant={isWidthUp(\"sm\", width) ? \"h3\" : \"h4\"}\r\n                align=\"center\"\r\n            >\r\n                <br />\r\n                See how MeeTute can help you...\r\n                <br />\r\n                <br />\r\n            </Typography>\r\n\r\n            {isWidthUp(\"sm\", width) ? (\r\n                <Stepper\r\n                    activeStep={activeStep}\r\n                    setActiveStep={setActiveStep}\r\n                    features={features}\r\n                />\r\n            ) : null}\r\n\r\n            <AutoPlaySwipeableViews\r\n                axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\r\n                index={activeStep}\r\n                onChangeIndex={handleStepChange}\r\n                enableMouseEvents\r\n                className={classes.swipe}\r\n                interval={9000}\r\n            >\r\n                {features.map((element) => (\r\n                    <FeatureCard\r\n                        key={element.headline}\r\n                        headline={element.headline}\r\n                        text={element.text}\r\n                        activeStep={activeStep}\r\n                        setActiveStep={setActiveStep}\r\n                        maxSteps={maxSteps}\r\n                        image={element.image}\r\n                    />\r\n                ))}\r\n            </AutoPlaySwipeableViews>\r\n        </div>\r\n    );\r\n});\r\n","import React, { useCallback, useContext } from \"react\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles, useTheme, UserContext } from \"@material-ui/core/styles\";\nimport { AuthApi } from \"../Methods\";\nimport AppBar from \"../Navigation/AppBar\";\nimport Header from \"./header\";\nimport WaveBorder from \"./waveBorder\";\nimport Features from \"./features\";\nimport Login from \"../Login/login\";\n\nconst useStyles = makeStyles((theme) => ({\n    c1: {\n        backgroundColor: theme.palette.secondary.light,\n    },\n    c2: {\n        backgroundColor: theme.palette.primary.light,\n    },\n}));\n\nexport default () => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const { openLogin, setOpenLogin } = useContext(AuthApi);\n\n    return (\n        <div className={classes.root}>\n            <AppBar setOpenLogin={setOpenLogin} />\n            <Login />\n            <Header setOpenLogin={setOpenLogin} />\n            <WaveBorder\n                upperColor={theme.background}\n                lowerColor={theme.palette.secondary.light}\n                animationNegativeDelay={100}\n            />\n            <Features />\n            <WaveBorder\n                upperColor={theme.palette.secondary.light}\n                lowerColor={theme.palette.primary.light}\n                animationNegativeDelay={100}\n            />\n            <div className={classes.c2}>\n                <Typography variant=\"subtitle1\" align=\"center\">\n                    Copyright @ MeeTute 2020\n                </Typography>\n            </div>\n        </div>\n    );\n};\n","import React from \"react\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\nimport { withStyles, lighten, makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst BorderLinearProgress = withStyles((theme) => ({\r\n    root: {\r\n        height: 5,\r\n        backgroundColor: lighten(\"#0a6aab\", 0.5),\r\n    },\r\n    bar: {\r\n        borderRadius: 100,\r\n        backgroundColor: \"#0a6aab\",\r\n    },\r\n}))(LinearProgress);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    margin: {\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            margin: theme.spacing(10),\r\n        },\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            margin: theme.spacing(8),\r\n        },\r\n    },\r\n}));\r\n\r\nexport default (props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <BorderLinearProgress className={classes.margin} />\r\n        </div>\r\n    );\r\n};\r\n","import React, { useContext, useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport withWidth, { isWidthUp, isWidthDown } from \"@material-ui/core/withWidth\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nimport TodayIcon from \"@material-ui/icons/Today\";\r\nimport AlarmIcon from \"@material-ui/icons/Alarm\";\r\nimport GroupAddIcon from \"@material-ui/icons/GroupAdd\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport PowerSettingsNewIcon from \"@material-ui/icons/PowerSettingsNew\";\r\nimport TimelineIcon from \"@material-ui/icons/Timeline\";\r\nimport { Grid, Paper, Grow, Snackbar } from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\n\r\nimport AppBar from \"./AppBar\";\r\nimport { UserContext, AuthApi } from \"../Methods\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nimport Loading from \"./Loading\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n    },\r\n    hide: {\r\n        display: \"none\",\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: \"nowrap\",\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create(\"width\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create(\"width\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: \"hidden\",\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            width: theme.spacing(9) + 1,\r\n        },\r\n    },\r\n    toolbar: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-end\",\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            padding: theme.spacing(10),\r\n        },\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            padding: theme.spacing(2),\r\n            marginTop: \"18%\",\r\n        },\r\n        [theme.breakpoints.between(\"sm\", \"md\")]: {\r\n            padding: theme.spacing(2),\r\n            marginTop: \"8%\",\r\n        },\r\n        maxWidth: \"100%\",\r\n    },\r\n    bottom: {\r\n        position: \"fixed\",\r\n        bottom: 0,\r\n        boxShadow: 20,\r\n    },\r\n    icon: {\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nexport default withWidth()(({ content, type, width }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const largeScreen = isWidthUp(\"lg\", width);\r\n\r\n    //Navigation Drawer...\r\n    const history = useHistory();\r\n    const {\r\n        selectedRoute,\r\n        alert,\r\n        closeAlert,\r\n        setLoadingRoute,\r\n        setUser,\r\n    } = useContext(UserContext);\r\n    const { loadingRoute } = useContext(UserContext);\r\n    const [open, setOpen] = useState(largeScreen);\r\n\r\n    const handleRouting = (newRoute) => {\r\n        if (selectedRoute !== newRoute) {\r\n            setLoadingRoute(true);\r\n            history.push(\"/\" + newRoute);\r\n        }\r\n    };\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    //Log out...\r\n    const { setAuth } = useContext(AuthApi);\r\n    const logOut = () => {\r\n        setAuth(false);\r\n        setUser({});\r\n        Cookies.remove(\"meetute\");\r\n    };\r\n\r\n    const getDrawlerOnClose = () => {\r\n        if (largeScreen) return;\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                openDrawer={largeScreen ? open : false}\r\n                handleDrawerOpen={handleDrawerOpen}\r\n                handleDrawerClose={handleDrawerClose}\r\n                logOut={logOut}\r\n            />\r\n\r\n            <Snackbar\r\n                open={alert.status !== \"\"}\r\n                autoHideDuration={3000}\r\n                onClose={closeAlert}\r\n            >\r\n                {alert.status !== \"\" ? (\r\n                    <Alert\r\n                        elevation={6}\r\n                        variant=\"filled\"\r\n                        severity={alert.status}\r\n                        onClose={closeAlert}\r\n                    >\r\n                        {alert.message}\r\n                    </Alert>\r\n                ) : null}\r\n            </Snackbar>\r\n\r\n            <Drawer\r\n                variant={largeScreen ? \"permanent\" : \"temporary\"}\r\n                className={\r\n                    largeScreen\r\n                        ? clsx(classes.drawer, {\r\n                              [classes.drawerOpen]: open,\r\n                              [classes.drawerClose]: !open,\r\n                          })\r\n                        : null\r\n                }\r\n                classes={\r\n                    largeScreen\r\n                        ? {\r\n                              paper: clsx({\r\n                                  [classes.drawerOpen]: open,\r\n                                  [classes.drawerClose]: !open,\r\n                              }),\r\n                          }\r\n                        : null\r\n                }\r\n                open={largeScreen ? false : open}\r\n                onClose={getDrawlerOnClose}\r\n            >\r\n                <div className={classes.toolbar}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === \"rtl\" ? (\r\n                            <ChevronRightIcon />\r\n                        ) : (\r\n                            <ChevronLeftIcon />\r\n                        )}\r\n                    </IconButton>\r\n                </div>\r\n                {loadingRoute ? null : (\r\n                    <div>\r\n                        <List>\r\n                            <Grow in={!loadingRoute} timeout={500}>\r\n                                <ListItem\r\n                                    button\r\n                                    onClick={() =>\r\n                                        handleRouting(\"consultations\")\r\n                                    }\r\n                                    selected={selectedRoute === \"consultations\"}\r\n                                >\r\n                                    <ListItemIcon className={classes.icon}>\r\n                                        <TodayIcon />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary=\"Consultations\" />\r\n                                </ListItem>\r\n                            </Grow>\r\n                            <Grow in={!loadingRoute} timeout={700}>\r\n                                <ListItem\r\n                                    button\r\n                                    onClick={() =>\r\n                                        handleRouting(\"appointments\")\r\n                                    }\r\n                                    selected={selectedRoute === \"appointments\"}\r\n                                >\r\n                                    <ListItemIcon className={classes.icon}>\r\n                                        <AlarmIcon />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary=\"1v1 Appointments\" />\r\n                                </ListItem>\r\n                            </Grow>\r\n\r\n                            {type === \"student\" ? (\r\n                                <Grow in={!loadingRoute} timeout={900}>\r\n                                    <ListItem\r\n                                        button\r\n                                        onClick={() => handleRouting(\"hubs\")}\r\n                                        selected={selectedRoute === \"hubs\"}\r\n                                    >\r\n                                        <ListItemIcon className={classes.icon}>\r\n                                            <GroupAddIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary=\"Study Hubs\" />\r\n                                    </ListItem>\r\n                                </Grow>\r\n                            ) : (\r\n                                <Grow in={!loadingRoute} timeout={900}>\r\n                                    <ListItem\r\n                                        button\r\n                                        onClick={() =>\r\n                                            handleRouting(\"analytic\")\r\n                                        }\r\n                                        selected={selectedRoute === \"analytic\"}\r\n                                    >\r\n                                        <ListItemIcon className={classes.icon}>\r\n                                            <TimelineIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary=\"Analytic\" />\r\n                                    </ListItem>\r\n                                </Grow>\r\n                            )}\r\n                        </List>\r\n\r\n                        <Divider />\r\n\r\n                        <List>\r\n                            <Grow in={!loadingRoute} timeout={1100}>\r\n                                <ListItem\r\n                                    button\r\n                                    onClick={() => handleRouting(\"settings\")}\r\n                                    selected={selectedRoute === \"settings\"}\r\n                                >\r\n                                    <ListItemIcon className={classes.icon}>\r\n                                        <SettingsIcon />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary=\"Settings\" />\r\n                                </ListItem>\r\n                            </Grow>\r\n                            <Grow in={!loadingRoute} timeout={1300}>\r\n                                <ListItem button onClick={logOut}>\r\n                                    <ListItemIcon className={classes.icon}>\r\n                                        <PowerSettingsNewIcon />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary=\"Log out\" />\r\n                                </ListItem>\r\n                            </Grow>\r\n                        </List>\r\n                    </div>\r\n                )}\r\n            </Drawer>\r\n\r\n            {loadingRoute ? (\r\n                <Loading />\r\n            ) : (\r\n                <main className={classes.content}>\r\n                    {!largeScreen ? (\r\n                        <div>\r\n                            <Alert severity=\"warning\">\r\n                                For better user experience, please use a larger\r\n                                screen\r\n                            </Alert>\r\n                            <br />\r\n                        </div>\r\n                    ) : null}\r\n                    {content}\r\n                </main>\r\n            )}\r\n        </div>\r\n    );\r\n});\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { ViewState } from \"@devexpress/dx-react-scheduler\";\r\nimport {\r\n    Scheduler,\r\n    DayView,\r\n    Appointments,\r\n    MonthView,\r\n    Toolbar,\r\n    DateNavigator,\r\n    ViewSwitcher,\r\n    TodayButton,\r\n    Resources,\r\n    AppointmentTooltip,\r\n    WeekView,\r\n} from \"@devexpress/dx-react-scheduler-material-ui\";\r\n\r\nimport { Paper, LinearProgress } from \"@material-ui/core\";\r\nimport {\r\n    makeStyles,\r\n    withStyles,\r\n    lighten,\r\n    useTheme,\r\n} from \"@material-ui/core/styles\";\r\nimport withWidth, { isWidthUp, isWidthDown } from \"@material-ui/core/withWidth\";\r\nimport {\r\n    lime,\r\n    lightBlue,\r\n    red,\r\n    green,\r\n    yellow,\r\n    cyan,\r\n    blue,\r\n    amber,\r\n    teal,\r\n} from \"@material-ui/core/colors\";\r\n\r\nconst ToolbarWithLoading = withStyles(\r\n    {\r\n        toolbarRoot: {\r\n            position: \"relative\",\r\n        },\r\n        progress: {\r\n            position: \"absolute\",\r\n            width: \"100%\",\r\n            bottom: 0,\r\n            left: 0,\r\n        },\r\n    },\r\n    { name: \"Toolbar\" }\r\n)(({ children, classes, ...restProps }) => (\r\n    <div className={classes.toolbarRoot}>\r\n        <Toolbar.Root {...restProps}>{children}</Toolbar.Root>\r\n        <LinearProgress className={classes.progress} />\r\n    </div>\r\n));\r\n\r\nconst resources = [\r\n    {\r\n        fieldName: \"booking\",\r\n        title: \"booking\",\r\n        instances: [\r\n            { id: \"BOOKED\", text: \"Already booked\", color: green[400] },\r\n            { id: \"AVAILABLE\", text: \"Available to Book\", color: blue[400] },\r\n            { id: \"FULL\", text: \"It has been fully booked\", color: red[200] },\r\n        ],\r\n    },\r\n    {\r\n        fieldName: \"status\",\r\n        title: \"status\",\r\n        instances: [\r\n            { id: \"PENDING\", text: \"PENDING\", color: amber[400] },\r\n            { id: \"APPROVED\", text: \"APPROVED\", color: green[400] },\r\n            { id: \"DECLINED\", text: \"DECLINED\", color: red[400] },\r\n        ],\r\n    },\r\n];\r\n\r\nconst loadSubjectResources = (subjects) => {\r\n    if (resources.filter((each) => each.fieldName === \"title\").length > 0)\r\n        return;\r\n    const instances = [];\r\n    subjects.map((subjectCode) => {\r\n        instances.push({ id: subjectCode, text: subjectCode });\r\n    });\r\n\r\n    resources.push({\r\n        fieldName: \"title\",\r\n        title: \"title\",\r\n        instances: instances,\r\n    });\r\n};\r\n\r\nexport default withWidth()(\r\n    ({\r\n        data,\r\n        currentDate,\r\n        setCurrentDate,\r\n        header,\r\n        content,\r\n        loading,\r\n        mainResourceName,\r\n        subjects,\r\n        viewChange,\r\n        width,\r\n        halfScreen,\r\n    }) => {\r\n        if (subjects) loadSubjectResources(subjects);\r\n\r\n        const largeScreen = isWidthUp(\"sm\", width);\r\n\r\n        return (\r\n            <Paper>\r\n                <Scheduler data={data} height={halfScreen ? 350 : 600}>\r\n                    <ViewState\r\n                        currentDate={currentDate}\r\n                        onCurrentDateChange={setCurrentDate}\r\n                    />\r\n\r\n                    <WeekView\r\n                        excludedDays={[0, 6]}\r\n                        startDayHour={8}\r\n                        endDayHour={24}\r\n                        cellDuration={60}\r\n                    />\r\n\r\n                    <MonthView />\r\n\r\n                    <Appointments />\r\n\r\n                    <AppointmentTooltip\r\n                        headerComponent={header}\r\n                        contentComponent={content}\r\n                    />\r\n                    <Resources\r\n                        mainResourceName={mainResourceName}\r\n                        data={resources}\r\n                        palette={[blue, cyan, teal, lime, amber]}\r\n                    />\r\n                    <Toolbar\r\n                        {...(loading\r\n                            ? { rootComponent: ToolbarWithLoading }\r\n                            : null)}\r\n                    />\r\n                    <DateNavigator />\r\n                    <TodayButton />\r\n                    <ViewSwitcher />\r\n                </Scheduler>\r\n            </Paper>\r\n        );\r\n    }\r\n);\r\n","import React, { useState, useEffect, useContext } from \"react\";\n\nimport { AppointmentTooltip } from \"@devexpress/dx-react-scheduler-material-ui\";\n\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport { IconButton, Grid, Paper, Fab, Container } from \"@material-ui/core\";\n\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Room from \"@material-ui/icons/Room\";\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\nimport classNames from \"clsx\";\n\nimport { myFetch, UserContext, StudentContext } from \"../Methods\";\n\nconst style = ({ palette, spacing }) => ({\n\ticon: {\n\t\tcolor: palette.action.active,\n\t},\n\ttextCenter: {\n\t\ttextAlign: \"center\",\n\t},\n\theader: {\n\t\theight: \"260px\",\n\t\tbackgroundSize: \"cover\",\n\t},\n});\n\nexport default withStyles(style, { name: \"Header\" })(\n\t({ children, appointmentData, classes, ...restProps }) => {\n\t\tconst { cancelAppointment, setCancelAppointment } = useContext(\n\t\t\tStudentContext\n\t\t);\n\t\tconst { detectAlert } = useContext(UserContext);\n\n\t\treturn (\n\t\t\t<AppointmentTooltip.Header\n\t\t\t\t{...restProps}\n\t\t\t\tappointmentData={appointmentData}\n\t\t\t\tshowCloseButton\n\t\t\t\tshowOpenButton\n\t\t\t\tonOpenButtonClick={() =>\n\t\t\t\t\tsetCancelAppointment(appointmentData.id)\n\t\t\t\t}\n\t\t\t></AppointmentTooltip.Header>\n\t\t);\n\t}\n);\n","import React, { useState, useEffect, useContext } from \"react\";\n\nimport { AppointmentTooltip } from \"@devexpress/dx-react-scheduler-material-ui\";\n\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport { IconButton, Grid, Paper, Fab, Container } from \"@material-ui/core\";\n\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Room from \"@material-ui/icons/Room\";\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\nimport classNames from \"clsx\";\n\nimport { UserContext, StaffContext } from \"../Methods\";\n\nconst style = ({ palette, spacing }) => ({\n\ticon: {\n\t\tcolor: palette.action.active,\n\t},\n\ttextCenter: {\n\t\ttextAlign: \"center\",\n\t},\n\theader: {\n\t\theight: \"260px\",\n\t\tbackgroundSize: \"cover\",\n\t},\n});\n\nexport default withStyles(style, { name: \"Header\" })(\n\t({ children, appointmentData, classes, ...restProps }) => {\n\t\tconst { pendAppointment, setPendAppointment } = useContext(\n\t\t\tStaffContext\n\t\t);\n\n\t\treturn (\n\t\t\t<AppointmentTooltip.Header\n\t\t\t\t{...restProps}\n\t\t\t\tappointmentData={appointmentData}\n\t\t\t\tshowCloseButton\n\t\t\t\tshowOpenButton\n\t\t\t\tonOpenButtonClick={() =>\n\t\t\t\t\tsetPendAppointment({ id: appointmentData.id })\n\t\t\t\t}\n\t\t\t></AppointmentTooltip.Header>\n\t\t);\n\t}\n);\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Grid, Tabs, AppBar, Tab, Select, MenuItem } from \"@material-ui/core\";\r\nimport withWidth, { isWidthUp, isWidthDown } from \"@material-ui/core/withWidth\";\r\n\r\nexport default withWidth()(\r\n    ({\r\n        currentStatus,\r\n        setCurrentStatus,\r\n        mainResourceName,\r\n        setMainResourceName,\r\n        width,\r\n    }) => {\r\n        const largeScreen = isWidthUp(\"lg\", width);\r\n\r\n        return (\r\n            <AppBar position=\"relative\" color=\"default\">\r\n                <Grid container justify=\"space-between\">\r\n                    <Grid item xs={largeScreen ? 10 : 12}>\r\n                        <Tabs\r\n                            value={currentStatus}\r\n                            indicatorColor=\"primary\"\r\n                            textColor=\"primary\"\r\n                            onChange={(event, newValue) => {\r\n                                setCurrentStatus(newValue);\r\n                            }}\r\n                            variant=\"scrollable\"\r\n                            scrollButtons=\"auto\"\r\n                        >\r\n                            <Tab label=\"ALL\" />\r\n                            <Tab label=\"PENDING\" />\r\n                            <Tab label=\"APPROVED\" />\r\n                            <Tab label=\"DECLINED\" />\r\n                        </Tabs>\r\n                    </Grid>\r\n                    {largeScreen ? (\r\n                        <Grid item xs={2}>\r\n                            <Select\r\n                                value={mainResourceName}\r\n                                onChange={(e) =>\r\n                                    setMainResourceName(e.target.value)\r\n                                }\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                            >\r\n                                <MenuItem key=\"status\" value=\"status\">\r\n                                    Status\r\n                                </MenuItem>\r\n                                <MenuItem key=\"title\" value=\"title\">\r\n                                    Subjects\r\n                                </MenuItem>\r\n                            </Select>\r\n                        </Grid>\r\n                    ) : null}\r\n                </Grid>\r\n            </AppBar>\r\n        );\r\n    }\r\n);\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n    Grid,\r\n    Button,\r\n    ButtonGroup,\r\n    Paper,\r\n    Typography,\r\n    Grow,\r\n    Fab,\r\n    Zoom,\r\n    Collapse,\r\n    Fade,\r\n    Tabs,\r\n    AppBar,\r\n    Tab,\r\n    Dialog,\r\n    DialogContent,\r\n    DialogTitle,\r\n    DialogActions,\r\n    IconButton,\r\n    TextField,\r\n} from \"@material-ui/core\";\r\nimport withWidth, { isWidthUp, isWidthDown } from \"@material-ui/core/withWidth\";\r\nimport {\r\n    makeStyles,\r\n    withStyles,\r\n    lighten,\r\n    useTheme,\r\n} from \"@material-ui/core/styles\";\r\nimport TimeTable from \"../Timetable\";\r\n\r\nimport Header from \"./StaffHeader\";\r\nimport Content from \"./StudentContent\";\r\nimport TimetableBar from \"./TimetableBar\";\r\n\r\nimport { myFetch, UserContext, StaffContext } from \"../Methods\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { grey, red, green, lime } from \"@material-ui/core/colors\";\r\nimport legend from \"./legend.svg\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        maxHeight: \"70VH\",\r\n    },\r\n    fab: {\r\n        position: \"fixed\",\r\n        bottom: theme.spacing(1) * 6,\r\n        right: theme.spacing(1) * 6,\r\n    },\r\n    noDecoration: {\r\n        textDecoration: \"none !important\",\r\n    },\r\n    delete: {\r\n        textTransform: \"none\",\r\n        color: theme.palette.getContrastText(grey[700]),\r\n        background: grey[700],\r\n        \"&:hover\": {\r\n            color: theme.palette.getContrastText(grey[900]),\r\n            background: grey[900],\r\n        },\r\n    },\r\n    closeButton: {\r\n        position: \"absolute\",\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n    approve: {\r\n        backgroundColor: green[400],\r\n        \"&:hover\": {\r\n            backgroundColor: green[600],\r\n        },\r\n    },\r\n    decline: {\r\n        backgroundColor: red[500],\r\n        \"&:hover\": {\r\n            backgroundColor: red[700],\r\n        },\r\n    },\r\n    legend: {\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: theme.spacing(2),\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            minWidth: \"30%\",\r\n            minHeight: \"30%\",\r\n        },\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            minWidth: \"100%\",\r\n            minHeight: \"100%\",\r\n        },\r\n    },\r\n}));\r\n\r\nconst PendDialog = ({ pendAppointment, setPendAppointment, pend, classes }) => (\r\n    <Dialog\r\n        open={pendAppointment.id !== \"\"}\r\n        onClose={() => setPendAppointment({ id: \"\" })}\r\n        fullWidth\r\n    >\r\n        <DialogTitle>\r\n            Pending this appointment{\" \"}\r\n            <IconButton\r\n                aria-label=\"close\"\r\n                className={classes.closeButton}\r\n                onClick={() => setPendAppointment({ id: \"\" })}\r\n            >\r\n                <CloseIcon />\r\n            </IconButton>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n            <TextField\r\n                label=\"Any comment for him/her?\"\r\n                multiline\r\n                fullWidth\r\n                rowsMax={4}\r\n                value={pendAppointment.comments}\r\n                onChange={(e) => {\r\n                    setPendAppointment({\r\n                        id: pendAppointment.id,\r\n                        comments: e.target.value,\r\n                    });\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n        </DialogContent>\r\n        <DialogActions>\r\n            <ButtonGroup fullWidth>\r\n                <Button\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    onClick={() => pend(\"DECLINED\")}\r\n                    className={classes.decline}\r\n                    color={red[400]}\r\n                >\r\n                    Decline it.\r\n                </Button>\r\n                <Button\r\n                    fullWidth\r\n                    onClick={() => pend(\"APPROVED\")}\r\n                    color={green[400]}\r\n                    variant=\"contained\"\r\n                    className={classes.approve}\r\n                >\r\n                    Approve it.\r\n                </Button>\r\n            </ButtonGroup>\r\n        </DialogActions>\r\n    </Dialog>\r\n);\r\n\r\nexport default withWidth()(({ width }) => {\r\n    const classes = useStyles();\r\n    const largeScreen = isWidthUp(\"lg\", width);\r\n\r\n    //timetable values...\r\n    const [data, setData] = useState([]);\r\n    const [currentDate, setCurrentDate] = useState(new Date());\r\n    const [pendAppointment, setPendAppointment] = useState({\r\n        id: \"\",\r\n        comments: \"\",\r\n    });\r\n    const [loading, setLoading] = useState(true);\r\n    const { alert, detectAlert, user, setUser } = useContext(UserContext);\r\n\r\n    //Timetable bar....\r\n    const [currentStatus, setCurrentStatus] = useState(0);\r\n    const [mainResourceName, setMainResourceName] = useState(\"status\");\r\n\r\n    const { userInfo } = user;\r\n\r\n    //Reloading user information.\r\n    const reloadUser = async () => {\r\n        const res = await myFetch(\"/api/shared/users/info\", \"GET\");\r\n        detectAlert(res);\r\n        setUser(res);\r\n        return res;\r\n    };\r\n\r\n    //Fetch the appointments of the current subject.\r\n    const fetchAppoint = async () => {\r\n        setLoading(true);\r\n        const res = await myFetch(\"/api/staff/appointment/all\", \"GET\");\r\n        detectAlert(res);\r\n        return res.appointments;\r\n    };\r\n\r\n    const formatData = (data, status) => {\r\n        //Formatting data for timetable to render.\r\n        const appoints = [];\r\n        data.map((appointment) => {\r\n            switch (status) {\r\n                case 1:\r\n                    if (appointment.status !== \"PENDING\") return;\r\n                    break;\r\n                case 2:\r\n                    if (appointment.status !== \"APPROVED\") return;\r\n                    break;\r\n                case 3:\r\n                    if (appointment.status !== \"DECLINED\") return;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            appoints.push({\r\n                title: appointment.subjectCode,\r\n                startDate: new Date(appointment.startDate),\r\n                endDate: new Date(appointment.endDate),\r\n                id: appointment._id,\r\n                location: appointment.location,\r\n                status: appointment.status,\r\n                student: appointment.student,\r\n                comments: appointment.comment,\r\n            });\r\n        });\r\n        setData(appoints);\r\n        setLoading(false);\r\n    };\r\n\r\n    //Updating appointments Information.\r\n    useEffect(() => {\r\n        reloadUser().then((user) => {\r\n            fetchAppoint().then((appointments) =>\r\n                formatData(appointments, currentStatus)\r\n            );\r\n        });\r\n    }, [alert.status, currentStatus]);\r\n\r\n    //pend an appointment.\r\n    const pend = async (status) => {\r\n        setLoading(true);\r\n        const body = {\r\n            id: pendAppointment.id,\r\n            status: status,\r\n            comment: pendAppointment.comments,\r\n        };\r\n        const res = await myFetch(\"/api/staff/appointment/pend\", \"PATCH\", body);\r\n        detectAlert(res, \"Successfully Deleted.\");\r\n        setPendAppointment({ id: \"\" });\r\n    };\r\n\r\n    return (\r\n        <StaffContext.Provider\r\n            value={{\r\n                currentDate,\r\n                setCurrentDate,\r\n                pendAppointment,\r\n                setPendAppointment,\r\n                data,\r\n                setData,\r\n                userInfo,\r\n                loading,\r\n                setLoading,\r\n                setUser,\r\n            }}\r\n        >\r\n            <PendDialog\r\n                pendAppointment={pendAppointment}\r\n                setPendAppointment={setPendAppointment}\r\n                pend={pend}\r\n                classes={classes}\r\n            />\r\n            <Fade in timeout={500}>\r\n                <div className={classes.paper}>\r\n                    <Grid container justify=\"space-around\">\r\n                        <Grid item xs={12}>\r\n                            <TimetableBar\r\n                                currentStatus={currentStatus}\r\n                                setCurrentStatus={setCurrentStatus}\r\n                                mainResourceName={mainResourceName}\r\n                                setMainResourceName={setMainResourceName}\r\n                            />\r\n                            <Grid container justify=\"flex-end\">\r\n                                <img\r\n                                    className={classes.legend}\r\n                                    src={legend}\r\n                                    alt=\"legend\"\r\n                                />\r\n                            </Grid>\r\n                            <TimeTable\r\n                                data={data}\r\n                                currentDate={currentDate}\r\n                                setCurrentDate={setCurrentDate}\r\n                                header={Header}\r\n                                content={Content}\r\n                                loading={loading}\r\n                                mainResourceName={mainResourceName}\r\n                                subjects={user.userInfo.subjects}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </Fade>\r\n        </StaffContext.Provider>\r\n    );\r\n});\r\n","import React, { useState, useEffect, useContext } from \"react\";\nimport {\n\tAppointmentTooltip,\n\tWeekView,\n} from \"@devexpress/dx-react-scheduler-material-ui\";\n\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport {\n\tGrid,\n\tPaper,\n\tTypography,\n\tList,\n\tListItem,\n\tListItemIcon,\n\tListItemText,\n\tListItemAvatar,\n\tAvatar,\n\tDivider,\n\tBadge,\n\tButton,\n\tCollapse,\n} from \"@material-ui/core\";\n\nimport RoomIcon from \"@material-ui/icons/Room\";\n\nimport AutorenewIcon from \"@material-ui/icons/Autorenew\";\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\n\nimport DraftsIcon from \"@material-ui/icons/Drafts\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\n\nimport { grey, pink, amber, green, red, lime } from \"@material-ui/core/colors\";\n\nimport { myFetch, UserContext, StudentContext } from \"../Methods\";\nimport Staff from \"./Staff\";\n\nconst StatusIcon = ({ status }) => {\n\tif (status === \"APPROVED\") return <ThumbUpIcon></ThumbUpIcon>;\n\tif (status === \"DECLINED\") return <CancelIcon></CancelIcon>;\n\treturn <AutorenewIcon></AutorenewIcon>;\n};\n\nconst getCommentTitle = (status) => {\n\tswitch (status) {\n\t\tcase \"PENDING\":\n\t\t\treturn \"Request Reason:\";\n\t\tcase \"APPROVED\":\n\t\t\treturn \"Approved Reason:\";\n\t\tdefault:\n\t\t\treturn \"Declined Reason:\";\n\t}\n};\n\nconst style = ({ palette, spacing }) => ({\n\tleft: {\n\t\tmarginLeft: spacing(1),\n\t},\n\tpending: {\n\t\tbackgroundColor: amber[400],\n\t\t\"&:hover\": {\n\t\t\tbackgroundColor: amber[400],\n\t\t},\n\t\tborderRadius: 30,\n\t},\n\tapproved: {\n\t\tbackgroundColor: green[400],\n\t\t\"&:hover\": {\n\t\t\tbackgroundColor: green[400],\n\t\t},\n\t\tborderRadius: 30,\n\t},\n\tdeclined: {\n\t\tbackgroundColor: red[400],\n\t\t\"&:hover\": {\n\t\t\tbackgroundColor: red[400],\n\t\t},\n\t\tborderRadius: 30,\n\t},\n\tscroll: {\n\t\theight: spacing(15),\n\t\toverflow: \"scroll\",\n\t},\n});\n\nexport default withStyles(style, { name: \"Content\" })(\n\t({ children, appointmentData, classes, ...restProps }) => {\n\t\tconst [openComments, setOpenComments] = useState(false);\n\n\t\tconst getStatusStyle = (status) => {\n\t\t\tswitch (status) {\n\t\t\t\tcase \"APPROVED\":\n\t\t\t\t\treturn classes.approved;\n\t\t\t\tcase \"DECLINED\":\n\t\t\t\t\treturn classes.declined;\n\t\t\t\tdefault:\n\t\t\t\t\treturn classes.pending;\n\t\t\t}\n\t\t};\n\n\t\treturn (\n\t\t\t<AppointmentTooltip.Content\n\t\t\t\t{...restProps}\n\t\t\t\tappointmentData={appointmentData}\n\t\t\t>\n\t\t\t\t<Grid container justify=\"center\">\n\t\t\t\t\t<Grid item xs={11}>\n\t\t\t\t\t\t<List dense>\n\t\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\t\tbutton\n\t\t\t\t\t\t\t\tonClick={() => setOpenComments(!openComments)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t<DraftsIcon />\n\t\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t\t<ListItemText\n\t\t\t\t\t\t\t\t\tprimary={getCommentTitle(\n\t\t\t\t\t\t\t\t\t\tappointmentData.status\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{openComments ? <ExpandLess /> : <ExpandMore />}\n\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t<Collapse\n\t\t\t\t\t\t\t\tin={openComments}\n\t\t\t\t\t\t\t\ttimeout=\"auto\"\n\t\t\t\t\t\t\t\tunmountOnExit\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<List component=\"div\" disablePadding>\n\t\t\t\t\t\t\t\t\t<ListItem>\n\t\t\t\t\t\t\t\t\t\t<ListItemText\n\t\t\t\t\t\t\t\t\t\t\tsecondary={\n\t\t\t\t\t\t\t\t\t\t\t\t<div className={classes.scroll}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{appointmentData.comments}\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t\t</Collapse>\n\t\t\t\t\t\t\t<ListItem>\n\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t<RoomIcon />\n\t\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t\t<ListItemText\n\t\t\t\t\t\t\t\t\tprimary=\"Location\"\n\t\t\t\t\t\t\t\t\tsecondary={appointmentData.location}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</ListItem>\n\n\t\t\t\t\t\t\t<ListItem>\n\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t<AccountCircleIcon />\n\t\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t\t<ListItemText\n\t\t\t\t\t\t\t\t\tprimary={\n\t\t\t\t\t\t\t\t\t\tappointmentData.staff\n\t\t\t\t\t\t\t\t\t\t\t? `${appointmentData.staff.firstName} ${appointmentData.staff.lastName}`\n\t\t\t\t\t\t\t\t\t\t\t: `${appointmentData.student.firstName} ${appointmentData.student.lastName}`\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tsecondary={\n\t\t\t\t\t\t\t\t\t\tappointmentData.staff\n\t\t\t\t\t\t\t\t\t\t\t? appointmentData.staff.mail\n\t\t\t\t\t\t\t\t\t\t\t: appointmentData.student.mail\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t<ListItem>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\tclassName={getStatusStyle(\n\t\t\t\t\t\t\t\t\t\tappointmentData.status\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\tdisableTouchRipple\n\t\t\t\t\t\t\t\t\tdisableRipple\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<StatusIcon\n\t\t\t\t\t\t\t\t\t\tstatus={appointmentData.status}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t{appointmentData.status}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t</List>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</AppointmentTooltip.Content>\n\t\t);\n\t}\n);\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n\tGrid,\r\n\tGrow,\r\n\tFab,\r\n\tZoom,\r\n\tCollapse,\r\n\tFade,\r\n\tTabs,\r\n\tAppBar,\r\n\tTab,\r\n\tListItem,\r\n\tList,\r\n\tListItemAvatar,\r\n\tListItemText,\r\n\tAvatar,\r\n\tSelect,\r\n\tMenuItem,\r\n\tButton,\r\n\tButtonGroup,\r\n\tIconButton,\r\n\tDialog,\r\n\tDialogActions,\r\n\tDialogContent,\r\n\tDialogContentText,\r\n\tDialogTitle,\r\n\tTextField,\r\n\tSlider,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles, withStyles, lighten } from \"@material-ui/core/styles\";\r\nimport { myFetch, UserContext } from \"../Methods\";\r\nimport SchoolIcon from \"@material-ui/icons/School\";\r\nimport ScheduleIcon from \"@material-ui/icons/Schedule\";\r\nimport RoomIcon from \"@material-ui/icons/Room\";\r\nimport GroupIcon from \"@material-ui/icons/GroupAddTwoTone\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nimport MomentUtils from \"@date-io/moment\";\r\nimport {\r\n\tKeyboardDateTimePicker,\r\n\tMuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\n\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\nimport { InboxOutlined, Inbox, Drafts, Send } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcloseButton: {\r\n\t\tposition: \"absolute\",\r\n\t\tright: theme.spacing(1),\r\n\t\ttop: theme.spacing(1),\r\n\t\tcolor: theme.palette.grey[500],\r\n\t},\r\n\ticon: {\r\n\t\tmargin: \"auto\",\r\n\t},\r\n\tdelete: {\r\n\t\tbackgroundColor:\r\n\t\t\t\"linear-gradient(45deg, #ff9a9e 0%, #fad0c4 99%, #fad0c4 100%)\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackgroundColor: \"#52af77\",\r\n\t\t},\r\n\t},\r\n\tselect: {\r\n\t\tmarginTop: theme.spacing(10),\r\n\t},\r\n\tskeleton: {\r\n\t\twidth: \"20WH\",\r\n\t},\r\n}));\r\n\r\nconst marks = [\r\n\t{\r\n\t\tvalue: 0,\r\n\t\tlabel: \"0 Minutes\",\r\n\t},\r\n\t{\r\n\t\tvalue: 60,\r\n\t\tlabel: \"1 hour\",\r\n\t},\r\n\t{\r\n\t\tvalue: 120,\r\n\t\tlabel: \"2 hours\",\r\n\t},\r\n\t{\r\n\t\tvalue: 240,\r\n\t\tlabel: \"4 hours\",\r\n\t},\r\n];\r\nconst getDuration = (startDate, endDate) => {\r\n\tconst duration = (endDate - startDate) / 60000;\r\n\tif (duration < 15) return 15;\r\n\tif (duration > 300) return 300;\r\n\treturn duration;\r\n};\r\n\r\nconst getEndDate = (start, duration) => {\r\n\tconst end = new Date(start);\r\n\treturn end.setMinutes(end.getMinutes() + duration);\r\n};\r\n\r\nconst CreateDialog = ({\r\n\tstaffInfo,\r\n\tclasses,\r\n\tstartDate,\r\n\tendDate,\r\n\tlocation,\r\n\tcomments,\r\n\ttoggle,\r\n\tcreateAppointment,\r\n\tsetStartDate,\r\n\tsetEndDate,\r\n\tsetLocation,\r\n\tsetComments,\r\n\topen,\r\n\tsetLoading,\r\n}) => {\r\n\treturn (\r\n\t\t<Dialog\r\n\t\t\topen={open}\r\n\t\t\tonClose={toggle}\r\n\t\t\taria-labelledby=\"form-dialog-title\"\r\n\t\t\tfullWidth\r\n\t\t>\r\n\t\t\t<DialogTitle id=\"form-dialog-title\">\r\n\t\t\t\t{`Creating an appointment for ${staffInfo.firstName} ${staffInfo.lastName}`}\r\n\t\t\t\t<IconButton\r\n\t\t\t\t\taria-label=\"close\"\r\n\t\t\t\t\tclassName={classes.closeButton}\r\n\t\t\t\t\tonClick={toggle}\r\n\t\t\t\t>\r\n\t\t\t\t\t<CloseIcon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t</DialogTitle>\r\n\t\t\t<DialogContent dividers>\r\n\t\t\t\t<Grid container>\r\n\t\t\t\t\t<Grid item xs={1}>\r\n\t\t\t\t\t\t<ScheduleIcon className={classes.icon} />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={11}>\r\n\t\t\t\t\t\t<MuiPickersUtilsProvider utils={MomentUtils}>\r\n\t\t\t\t\t\t\t<KeyboardDateTimePicker\r\n\t\t\t\t\t\t\t\tlabel=\"Start Date\"\r\n\t\t\t\t\t\t\t\tvalue={startDate}\r\n\t\t\t\t\t\t\t\tonChange={(date) => {\r\n\t\t\t\t\t\t\t\t\tsetStartDate(date);\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</MuiPickersUtilsProvider>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={1}>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<ScheduleIcon className={classes.icon} />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={11}>\r\n\t\t\t\t\t\t<DialogContentText>\r\n\t\t\t\t\t\t\t{\"Duration: \"}\r\n\t\t\t\t\t\t\t{getDuration(startDate, endDate)}\r\n\t\t\t\t\t\t\t{\" Minutes\"}\r\n\t\t\t\t\t\t</DialogContentText>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<Slider\r\n\t\t\t\t\t\t\tvalueLabelDisplay=\"auto\"\r\n\t\t\t\t\t\t\tmarks={marks}\r\n\t\t\t\t\t\t\taria-labelledby=\"discrete-slider\"\r\n\t\t\t\t\t\t\tgetAriaValueText={(value) => `${value} Minutes`}\r\n\t\t\t\t\t\t\tvalue={getDuration(startDate, endDate)}\r\n\t\t\t\t\t\t\tonChange={(e, newValue) => {\r\n\t\t\t\t\t\t\t\tsetEndDate(getEndDate(startDate, newValue));\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tstep={15}\r\n\t\t\t\t\t\t\tmax={300}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={1}>\r\n\t\t\t\t\t\t<RoomIcon className={classes.icon} />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={11}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tlabel=\"Location\"\r\n\t\t\t\t\t\t\tvariant=\"filled\"\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\tvalue={location}\r\n\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\tsetLocation(e.target.value);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<DialogContentText>\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t</DialogContentText>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={1}>\r\n\t\t\t\t\t\t<Send className={classes.icon} />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={11}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tlabel=\"Request Reason\"\r\n\t\t\t\t\t\t\tmultiline\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\trowsMax={4}\r\n\t\t\t\t\t\t\tvalue={comments}\r\n\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\tsetComments(e.target.value);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</DialogContent>\r\n\r\n\t\t\t<DialogActions>\r\n\t\t\t\t<ButtonGroup fullWidth>\r\n\t\t\t\t\t<Button fullWidth onClick={toggle}>\r\n\t\t\t\t\t\tCancel\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tcreateAppointment().then((res) => {\r\n\t\t\t\t\t\t\t\tconsole.log(res);\r\n\t\t\t\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tCreate\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</ButtonGroup>\r\n\t\t\t</DialogActions>\r\n\t\t</Dialog>\r\n\t);\r\n};\r\n\r\nexport default ({ userInfo }) => {\r\n\tconst classes = useStyles();\r\n\r\n\tconst [currentSubject, setCurrentSubject] = useState(userInfo.subjects[0]);\r\n\tconst [loading, setLoading] = useState(true);\r\n\tconst [staffs, setStaffs] = useState([]);\r\n\tconst [startDate, setStartDate] = useState(new Date());\r\n\tconst [endDate, setEndDate] = useState(new Date());\r\n\tconst [location, setLocation] = useState(\"\");\r\n\tconst [comments, setComments] = useState(\"\");\r\n\tconst [staffInfo, setStaffInfo] = useState({});\r\n\r\n\tconst [open, setOpen] = useState(false);\r\n\tconst { detectAlert, setAlert } = useContext(UserContext);\r\n\r\n\t//Fetch the appointments of the current subject.\r\n\tconst fetchStaffs = async () => {\r\n\t\tsetLoading(true);\r\n\t\tconsole.log(currentSubject);\r\n\r\n\t\tconst res = await myFetch(\"/api/student/subjects/allStaff\", \"POST\", {\r\n\t\t\tsubjectCode: currentSubject,\r\n\t\t});\r\n\t\tsetStaffs(res.staffsInfo);\r\n\t\tconsole.log(res);\r\n\t\tif (!res) return;\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tconst createAppointment = async () => {\r\n\t\tsetLoading(true);\r\n\t\tif (!startDate || !endDate || location === \"\") {\r\n\t\t\tsetAlert({ status: \"warning\", message: \"Insufficient Input.\" });\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst body = {\r\n\t\t\tsubjectCode: currentSubject,\r\n\t\t\tstartDate: startDate,\r\n\t\t\tendDate: getEndDate(startDate, getDuration(startDate, endDate)),\r\n\t\t\tlocation: location,\r\n\t\t\tstaffId: staffInfo._id,\r\n\t\t\tcomment: comments,\r\n\t\t};\r\n\t\tconst res = await myFetch(\r\n\t\t\t\"/api/student/appointment/request\",\r\n\t\t\t\"POST\",\r\n\t\t\tbody\r\n\t\t);\r\n\t\tdetectAlert(res, \"Successfully created.\");\r\n\t\ttoggle();\r\n\t\treturn res;\r\n\t};\r\n\r\n\tconst toggle = () => setOpen(!open);\r\n\r\n\t//Updating appointments Information.\r\n\tuseEffect(() => {\r\n\t\tfetchStaffs();\r\n\t}, [currentSubject]);\r\n\r\n\tif (loading)\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Select\r\n\t\t\t\t\tvalue={currentSubject}\r\n\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\tsetCurrentSubject(event.target.value);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t>\r\n\t\t\t\t\t{userInfo.subjects.map((subject) => (\r\n\t\t\t\t\t\t<MenuItem value={subject} key={subject}>\r\n\t\t\t\t\t\t\t{subject}\r\n\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Select>\r\n\t\t\t\t<List>\r\n\t\t\t\t\t{[1, 2, 3].map((index) => (\r\n\t\t\t\t\t\t<Grow in key={index} timeout={index * 500}>\r\n\t\t\t\t\t\t\t<ListItem button>\r\n\t\t\t\t\t\t\t\t<ListItemAvatar>\r\n\t\t\t\t\t\t\t\t\t<Skeleton\r\n\t\t\t\t\t\t\t\t\t\tanimation=\"wave\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"circle\"\r\n\t\t\t\t\t\t\t\t\t\twidth={40}\r\n\t\t\t\t\t\t\t\t\t\theight={40}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</ListItemAvatar>\r\n\t\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\t\tprimary={<Skeleton animation=\"wave\" />}\r\n\t\t\t\t\t\t\t\t\tsecondary={<Skeleton animation=\"wave\" />}\r\n\t\t\t\t\t\t\t\t></ListItemText>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t</Grow>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</List>\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Select\r\n\t\t\t\tvalue={currentSubject}\r\n\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\tsetCurrentSubject(event.target.value);\r\n\t\t\t\t}}\r\n\t\t\t\tfullWidth\r\n\t\t\t\tvariant=\"outlined\"\r\n\t\t\t>\r\n\t\t\t\t{userInfo.subjects.map((subject) => (\r\n\t\t\t\t\t<MenuItem value={subject} key={subject}>\r\n\t\t\t\t\t\t{subject}\r\n\t\t\t\t\t</MenuItem>\r\n\t\t\t\t))}\r\n\t\t\t</Select>\r\n\t\t\t<CreateDialog\r\n\t\t\t\tstaffInfo={staffInfo}\r\n\t\t\t\tclasses={classes}\r\n\t\t\t\tstartDate={startDate}\r\n\t\t\t\tendDate={endDate}\r\n\t\t\t\tlocation={location}\r\n\t\t\t\tcomments={comments}\r\n\t\t\t\ttoggle={toggle}\r\n\t\t\t\tcreateAppointment={createAppointment}\r\n\t\t\t\tsetStartDate={setStartDate}\r\n\t\t\t\tsetEndDate={setEndDate}\r\n\t\t\t\tsetLocation={setLocation}\r\n\t\t\t\tsetComments={setComments}\r\n\t\t\t\topen={open}\r\n\t\t\t\tsetLoading={setLoading}\r\n\t\t\t/>\r\n\t\t\t<List>\r\n\t\t\t\t{staffs.map((staff, index) => (\r\n\t\t\t\t\t<Grow in timeout={index * 200} key={index}>\r\n\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\tbutton\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tsetOpen(true);\r\n\t\t\t\t\t\t\t\tsetStaffInfo(staff);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ListItemAvatar>\r\n\t\t\t\t\t\t\t\t<Avatar />\r\n\t\t\t\t\t\t\t</ListItemAvatar>\r\n\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\tprimary={`${staff.firstName} ${staff.lastName}`}\r\n\t\t\t\t\t\t\t\tsecondary={staff.email}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t</Grow>\r\n\t\t\t\t))}\r\n\t\t\t</List>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n    Grid,\r\n    Button,\r\n    ButtonGroup,\r\n    Fade,\r\n    Dialog,\r\n    DialogContent,\r\n    DialogTitle,\r\n    DialogActions,\r\n    Select,\r\n    MenuItem,\r\n} from \"@material-ui/core\";\r\nimport {\r\n    makeStyles,\r\n    withStyles,\r\n    lighten,\r\n    useTheme,\r\n} from \"@material-ui/core/styles\";\r\nimport withWidth, { isWidthUp, isWidthDown } from \"@material-ui/core/withWidth\";\r\nimport TimeTable from \"../Timetable\";\r\n\r\nimport Header from \"./StudentHeader\";\r\nimport Content from \"./StudentContent\";\r\nimport StudentQuery from \"./StudentQuery\";\r\nimport TimetableBar from \"./TimetableBar\";\r\n\r\nimport { myFetch, UserContext, StudentContext } from \"../Methods\";\r\nimport legend from \"./legend.svg\";\r\n\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        maxHeight: \"70VH\",\r\n    },\r\n    fab: {\r\n        position: \"fixed\",\r\n        bottom: theme.spacing(1) * 6,\r\n        right: theme.spacing(1) * 6,\r\n    },\r\n    noDecoration: {\r\n        textDecoration: \"none !important\",\r\n    },\r\n    delete: {\r\n        textTransform: \"none\",\r\n        color: theme.palette.getContrastText(grey[700]),\r\n        background: grey[700],\r\n        \"&:hover\": {\r\n            color: theme.palette.getContrastText(grey[900]),\r\n            background: grey[900],\r\n        },\r\n    },\r\n    qurey: {\r\n        maxHeight: \"30VH\",\r\n        height: \"30VH\",\r\n        overflow: \"scroll\",\r\n    },\r\n    table: {\r\n        marginTop: theme.spacing(4),\r\n    },\r\n    legend: {\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: theme.spacing(2),\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            minWidth: \"40%\",\r\n            minHeight: \"40%\",\r\n        },\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            minWidth: \"100%\",\r\n            minHeight: \"100%\",\r\n        },\r\n    },\r\n}));\r\n\r\nconst CancelDialog = ({\r\n    cancelAppointment,\r\n    setCancelAppointment,\r\n    classes,\r\n    cancel,\r\n}) => (\r\n    <Dialog\r\n        open={cancelAppointment !== \"\"}\r\n        onClose={() => setCancelAppointment(\"\")}\r\n        fullWidth\r\n    >\r\n        <DialogTitle>Delete your Appointment?</DialogTitle>\r\n        <DialogContent>Do you want to delete this Appointment?</DialogContent>\r\n        <DialogActions>\r\n            <ButtonGroup fullWidth>\r\n                <Button\r\n                    fullWidth\r\n                    onClick={() => setCancelAppointment(\"\")}\r\n                    style={{\r\n                        textTransform: \"none\",\r\n                    }}\r\n                >\r\n                    No, thanks.\r\n                </Button>\r\n                <Button\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    onClick={cancel}\r\n                    className={classes.delete}\r\n                >\r\n                    Yes, please delete it.\r\n                </Button>\r\n            </ButtonGroup>\r\n        </DialogActions>\r\n    </Dialog>\r\n);\r\n\r\nexport default withWidth()(({ width }) => {\r\n    const classes = useStyles();\r\n    const largeScreen = isWidthUp(\"lg\", width);\r\n    //timetable values...\r\n    const [data, setData] = useState([]);\r\n    const [currentDate, setCurrentDate] = useState(new Date());\r\n    const [cancelAppointment, setCancelAppointment] = useState(\"\");\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    //Timetable bar....\r\n    const [currentStatus, setCurrentStatus] = useState(0);\r\n    const [mainResourceName, setMainResourceName] = useState(\"status\");\r\n\r\n    const { alert, detectAlert, user, setUser } = useContext(UserContext);\r\n    const { userInfo } = user;\r\n\r\n    //Reloading user information.\r\n    const reloadUser = async () => {\r\n        const res = await myFetch(\"/api/shared/users/info\", \"GET\");\r\n        detectAlert(res);\r\n        setUser(res);\r\n        return res;\r\n    };\r\n\r\n    const formatData = (data, status) => {\r\n        //Formatting data for timetable to render.\r\n        const appoints = [];\r\n        data.map((appointment) => {\r\n            switch (status) {\r\n                case 1:\r\n                    if (appointment.status !== \"PENDING\") return;\r\n                    break;\r\n                case 2:\r\n                    if (appointment.status !== \"APPROVED\") return;\r\n                    break;\r\n                case 3:\r\n                    if (appointment.status !== \"DECLINED\") return;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            appoints.push({\r\n                title: appointment.subjectCode,\r\n                startDate: new Date(appointment.startDate),\r\n                endDate: new Date(appointment.endDate),\r\n                id: appointment._id,\r\n                location: appointment.location,\r\n                status: appointment.status,\r\n                staff: appointment.staff,\r\n                comments: appointment.comment,\r\n            });\r\n        });\r\n        setData(appoints);\r\n        setLoading(false);\r\n    };\r\n\r\n    //Fetch the appointments of the current subject.\r\n    const fetchAppoint = async () => {\r\n        setLoading(true);\r\n        const res = await myFetch(\"/api/student/appointment/all\", \"GET\");\r\n        detectAlert(res);\r\n        return res.appointments;\r\n    };\r\n\r\n    //Updating appointments Information.\r\n    useEffect(() => {\r\n        reloadUser().then((user) => {\r\n            fetchAppoint().then((appointments) =>\r\n                formatData(appointments, currentStatus)\r\n            );\r\n        });\r\n    }, [alert.status, currentStatus]);\r\n\r\n    //Cancel an appointment.\r\n    const cancel = async () => {\r\n        setLoading(true);\r\n        const body = {\r\n            id: cancelAppointment,\r\n        };\r\n        const res = await myFetch(\r\n            \"/api/student/appointment/delete\",\r\n            \"DELETE\",\r\n            body\r\n        );\r\n        detectAlert(res, \"Successfully Deleted.\");\r\n        setCancelAppointment(\"\");\r\n    };\r\n\r\n    return (\r\n        <StudentContext.Provider\r\n            value={{\r\n                currentDate,\r\n                setCurrentDate,\r\n                cancelAppointment,\r\n                setCancelAppointment,\r\n                data,\r\n                setData,\r\n                userInfo,\r\n                loading,\r\n                setLoading,\r\n                setUser,\r\n            }}\r\n        >\r\n            <CancelDialog\r\n                cancelAppointment={cancelAppointment}\r\n                setCancelAppointment={setCancelAppointment}\r\n                classes={classes}\r\n                cancel={cancel}\r\n            />\r\n            <Fade in timeout={500}>\r\n                <div className={classes.paper}>\r\n                    <Grid container justify=\"space-around\">\r\n                        <Grid\r\n                            item\r\n                            xs={largeScreen ? 3 : 12}\r\n                            className={\r\n                                largeScreen ? classes.noStyle : classes.qurey\r\n                            }\r\n                        >\r\n                            <StudentQuery userInfo={userInfo} />\r\n                        </Grid>\r\n                        <Grid\r\n                            item\r\n                            xs={largeScreen ? 8 : 12}\r\n                            className={\r\n                                largeScreen ? classes.noStyle : classes.table\r\n                            }\r\n                        >\r\n                            <TimetableBar\r\n                                currentStatus={currentStatus}\r\n                                setCurrentStatus={setCurrentStatus}\r\n                                mainResourceName={mainResourceName}\r\n                                setMainResourceName={setMainResourceName}\r\n                                data={data}\r\n                                setData={setData}\r\n                            />\r\n                            <Grid container justify=\"flex-end\">\r\n                                <img\r\n                                    className={classes.legend}\r\n                                    src={legend}\r\n                                    alt=\"legend\"\r\n                                />\r\n                            </Grid>\r\n                            <TimeTable\r\n                                data={data}\r\n                                currentDate={currentDate}\r\n                                setCurrentDate={setCurrentDate}\r\n                                header={Header}\r\n                                content={Content}\r\n                                loading={loading}\r\n                                mainResourceName={mainResourceName}\r\n                                subjects={user.userInfo.subjects}\r\n                                halfScreen={largeScreen ? false : true}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </Fade>\r\n        </StudentContext.Provider>\r\n    );\r\n});\r\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { UserContext, myFetch } from \"../Methods\";\nimport Layout from \"../Navigation/Layout\";\nimport Student from \"./Student\";\nimport Staff from \"./Staff\";\n\nexport default () => {\n\t//Set the routes.\n\tconst {\n\t\tsetSelectedRoute,\n\t\tcloseAlert,\n\t\tdetectAlert,\n\t\tloadingRoute,\n\t\tsetLoadingRoute,\n\t\tfetchUser,\n\t\tuser,\n\t} = useContext(UserContext);\n\n\t//Loading user information.\n\tconst [userInfo, setUserInfo] = useState({});\n\tuseEffect(() => {\n\t\tsetSelectedRoute(\"appointments\");\n\t\tcloseAlert();\n\t\tfetchUser().then(() => setLoadingRoute(false));\n\t}, []);\n\n\tif (loadingRoute || !user.type) return <Layout />;\n\n\treturn (\n\t\t<Layout\n\t\t\tcontent={user.type === \"student\" ? <Student /> : <Staff />}\n\t\t\ttype={user.type}\n\t\t/>\n\t);\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport {\n    Grid,\n    CardContent,\n    withWidth,\n    isWidthUp,\n    Button,\n    ButtonGroup,\n    IconButton,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    TextField,\n    Paper,\n    Snackbar,\n    Slider,\n    Tooltip,\n} from \"@material-ui/core\";\nimport { makeStyles, withStyles, lighten } from \"@material-ui/core/styles\";\nimport { myFetch, UserContext } from \"../Methods\";\nimport Cookies from \"js-cookie\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { useHistory } from \"react-router-dom\";\nimport { ToggleOff } from \"@material-ui/icons\";\nimport SchoolIcon from \"@material-ui/icons/School\";\nimport ScheduleIcon from \"@material-ui/icons/Schedule\";\nimport RoomIcon from \"@material-ui/icons/Room\";\nimport GroupIcon from \"@material-ui/icons/GroupAddTwoTone\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { grey, pink } from \"@material-ui/core/colors\";\n\nimport MomentUtils from \"@date-io/moment\";\nimport {\n    KeyboardDateTimePicker,\n    MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\n\nimport { StaffContext } from \"../Methods\";\n\nconst SlotSlider = withStyles({\n    root: {\n        color: \"#52af77\",\n        height: 8,\n    },\n    thumb: {\n        height: 24,\n        width: 24,\n        backgroundColor: \"#fff\",\n        border: \"2px solid currentColor\",\n        marginTop: -8,\n        marginLeft: -12,\n        \"&:focus, &:hover, &$active\": {\n            boxShadow: \"inherit\",\n        },\n    },\n    active: {},\n    valueLabel: {\n        left: \"calc(-50% + 4px)\",\n    },\n    track: {\n        height: 8,\n        borderRadius: 4,\n    },\n    rail: {\n        height: 8,\n        borderRadius: 4,\n    },\n})(Slider);\n\nconst marks = [\n    {\n        value: 0,\n        label: \"0 Minutes\",\n    },\n    {\n        value: 60,\n        label: \"1 hour\",\n    },\n    {\n        value: 120,\n        label: \"2 hours\",\n    },\n    {\n        value: 240,\n        label: \"4 hours\",\n    },\n];\n\nconst useStyles = makeStyles((theme) => ({\n    icon: {\n        margin: \"auto\",\n    },\n\n    closeButton: {\n        position: \"absolute\",\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    },\n}));\n\nconst DeleteButton = withStyles((theme) => ({\n    root: {\n        color: theme.palette.getContrastText(grey[700]),\n        backgroundColor: grey[700],\n        \"&:hover\": {\n            backgroundColor: grey[900],\n        },\n    },\n}))(Button);\n\nexport default ({ edit, open, toggle }) => {\n    const classes = useStyles();\n    const {\n        editingAppointment,\n        setEditingAppointment,\n        setLoading,\n        api,\n    } = useContext(StaffContext);\n    const { detectAlert, setAlert, user } = useContext(UserContext);\n    const subjects = user.userInfo.subjects;\n\n    const [subjectCode, setSubjectCode] = useState(subjects[0]);\n    const [startDate, setStartDate] = useState(new Date());\n    const [endDate, setEndDate] = useState(new Date());\n    const [location, setLocation] = useState(\"\");\n    const [slot, setSlot] = useState(20);\n\n    const getDuration = (startDate, endDate) => {\n        const duration = (endDate - startDate) / 60000;\n        if (duration < 15) return 15;\n        if (duration > 300) return 300;\n        return duration;\n    };\n\n    const getEndDate = (start, duration) => {\n        const end = new Date(start);\n        return end.setMinutes(end.getMinutes() + duration);\n    };\n\n    const createTime = async () => {\n        setLoading(true);\n        if (!subjectCode || !startDate || !endDate || location === \"\") {\n            setAlert({ status: \"warning\", message: \"Insufficient Input.\" });\n            return;\n        }\n        const body = {\n            subjectCode: subjectCode,\n            startDate: startDate,\n            endDate: getEndDate(startDate, getDuration(startDate, endDate)),\n            location: location,\n            slotsAvailable: slot,\n        };\n        const res = await myFetch(api.create, \"POST\", body);\n        detectAlert(res, \"Successfully created.\");\n        toggle();\n        return res;\n    };\n\n    const editTime = async () => {\n        setLoading(true);\n        if (\n            !editingAppointment.endDate ||\n            !editingAppointment.startDate ||\n            !editingAppointment.slotsAvailable ||\n            editingAppointment.location === \"\"\n        ) {\n            setAlert({ status: \"warning\", message: \"Insufficient Input.\" });\n            return;\n        }\n\n        const res = await myFetch(api.edit, \"PATCH\", editingAppointment);\n        detectAlert(res, \"Successfully updated.\");\n        toggle();\n        return res;\n    };\n\n    const deleteTime = async () => {\n        setLoading(true);\n        const body = {\n            id: editingAppointment.id,\n        };\n        const res = await myFetch(api.delete, \"DELETE\", body);\n        detectAlert(res, \"Successfully deleted.\");\n        toggle();\n        return res;\n    };\n    return (\n        <Dialog\n            open={open}\n            onClose={toggle}\n            aria-labelledby=\"form-dialog-title\"\n            fullWidth\n        >\n            <DialogTitle id=\"form-dialog-title\">\n                {!edit ? \"Create a new Consultation\" : \"Edit a Consultation\"}\n\n                <IconButton\n                    aria-label=\"close\"\n                    className={classes.closeButton}\n                    onClick={toggle}\n                >\n                    <CloseIcon />\n                </IconButton>\n            </DialogTitle>\n            <DialogContent dividers>\n                <Grid container>\n                    {edit ? null : (\n                        <Grid container>\n                            <Grid item xs={1}>\n                                <SchoolIcon className={classes.icon} />\n                            </Grid>\n                            <Grid item xs={11}>\n                                <Autocomplete\n                                    id=\"addSubject\"\n                                    options={subjects}\n                                    getOptionLabel={(option) => option}\n                                    value={subjectCode}\n                                    onChange={(event, newValue) => {\n                                        setSubjectCode(newValue);\n                                    }}\n                                    renderInput={(params) => {\n                                        return (\n                                            <TextField\n                                                {...params}\n                                                label=\"Please choose a subject\"\n                                                variant=\"filled\"\n                                                required\n                                            />\n                                        );\n                                    }}\n                                />\n                                <br />\n                                <br />\n                            </Grid>\n                        </Grid>\n                    )}\n                    <Grid item xs={1}>\n                        <ScheduleIcon className={classes.icon} />\n                    </Grid>\n                    <Grid item xs={11}>\n                        <MuiPickersUtilsProvider utils={MomentUtils}>\n                            <KeyboardDateTimePicker\n                                label=\"Start Date\"\n                                value={\n                                    edit\n                                        ? editingAppointment.startDate\n                                        : startDate\n                                }\n                                onChange={(date) => {\n                                    if (edit) {\n                                        setEditingAppointment({\n                                            ...editingAppointment,\n                                            startDate: date,\n                                            endDate: getEndDate(\n                                                editingAppointment.startDate,\n                                                getDuration(\n                                                    editingAppointment.startDate,\n                                                    editingAppointment.endDate\n                                                )\n                                            ),\n                                        });\n                                        return;\n                                    }\n                                    setStartDate(date);\n                                }}\n                                fullWidth\n                                required\n                            />\n                        </MuiPickersUtilsProvider>\n                        <br />\n                        <br />\n                    </Grid>\n                    <Grid item xs={1}>\n                        <br />\n                        <ScheduleIcon className={classes.icon} />\n                    </Grid>\n                    <Grid item xs={11}>\n                        <DialogContentText>\n                            {\"Duration: \"}\n                            {edit\n                                ? getDuration(\n                                      editingAppointment.startDate,\n                                      editingAppointment.endDate\n                                  )\n                                : getDuration(startDate, endDate)}\n                            {\" Minutes\"}\n                        </DialogContentText>\n                        <br />\n                        <Slider\n                            valueLabelDisplay=\"auto\"\n                            marks={marks}\n                            aria-labelledby=\"discrete-slider\"\n                            getAriaValueText={(value) => `${value} Minutes`}\n                            value={\n                                edit\n                                    ? getDuration(\n                                          editingAppointment.startDate,\n                                          editingAppointment.endDate\n                                      )\n                                    : getDuration(startDate, endDate)\n                            }\n                            onChange={(e, newValue) => {\n                                if (edit) {\n                                    setEditingAppointment({\n                                        ...editingAppointment,\n                                        endDate: getEndDate(\n                                            editingAppointment.startDate,\n                                            newValue\n                                        ),\n                                    });\n                                    return;\n                                }\n                                setEndDate(getEndDate(startDate, newValue));\n                            }}\n                            step={15}\n                            max={300}\n                        />\n                        <br />\n                        <br />\n                    </Grid>\n                    <Grid item xs={1}>\n                        <RoomIcon className={classes.icon} />\n                    </Grid>\n                    <Grid item xs={11}>\n                        <TextField\n                            label=\"Location\"\n                            variant=\"filled\"\n                            required\n                            value={\n                                edit ? editingAppointment.location : location\n                            }\n                            onChange={(e) => {\n                                if (edit) {\n                                    setEditingAppointment({\n                                        ...editingAppointment,\n                                        location: e.target.value,\n                                    });\n                                    return;\n                                }\n                                setLocation(e.target.value);\n                            }}\n                            fullWidth\n                        />\n                        <DialogContentText></DialogContentText>\n                    </Grid>\n                    <Grid item xs={1}>\n                        <br />\n                        <GroupIcon className={classes.icon} />\n                    </Grid>\n                    <Grid item xs={11}>\n                        <DialogContentText>\n                            Slot Available:{\" \"}\n                            {edit ? editingAppointment.slotsAvailable : slot}\n                        </DialogContentText>\n                        <br />\n                        <SlotSlider\n                            valueLabelDisplay=\"auto\"\n                            aria-label=\"pretto slider\"\n                            aria-labelledby=\"discrete-slider\"\n                            value={\n                                edit ? editingAppointment.slotsAvailable : slot\n                            }\n                            onChange={(e, newValue) => {\n                                if (edit) {\n                                    setEditingAppointment({\n                                        ...editingAppointment,\n                                        slotsAvailable: newValue,\n                                    });\n                                }\n                                setSlot(newValue);\n                            }}\n                        />\n                    </Grid>\n                </Grid>\n            </DialogContent>\n\n            <DialogActions>\n                {edit ? (\n                    <ButtonGroup fullWidth>\n                        <DeleteButton\n                            fullWidth\n                            onClick={() => {\n                                toggle();\n                                deleteTime().then((res) => {\n                                    setLoading(false);\n                                });\n                            }}\n                            className={classes.delete}\n                        >\n                            Delete\n                        </DeleteButton>\n                        <Button\n                            fullWidth\n                            color=\"primary\"\n                            variant=\"contained\"\n                            onClick={() => {\n                                editTime().then((res) => {\n                                    console.log(res);\n                                    setLoading(false);\n                                });\n                            }}\n                        >\n                            Update\n                        </Button>\n                    </ButtonGroup>\n                ) : (\n                    <ButtonGroup fullWidth>\n                        <Button fullWidth onClick={toggle}>\n                            Cancel\n                        </Button>\n                        <Button\n                            fullWidth\n                            color=\"primary\"\n                            variant=\"contained\"\n                            onClick={() => {\n                                createTime().then((res) => {\n                                    console.log(res);\n                                    setLoading(false);\n                                });\n                            }}\n                        >\n                            Create\n                        </Button>\n                    </ButtonGroup>\n                )}\n            </DialogActions>\n        </Dialog>\n    );\n};\n","import React, { useState, useEffect, useContext } from \"react\";\n\nimport { AppointmentTooltip } from \"@devexpress/dx-react-scheduler-material-ui\";\n\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport { IconButton, Grid, Paper, Fab, Container } from \"@material-ui/core\";\n\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Room from \"@material-ui/icons/Room\";\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\nimport classNames from \"clsx\";\n\nimport { myFetch, UserContext, StudentContext } from \"../Methods\";\nimport EditDialog from \"./ConsultDialog\";\n\nconst style = ({ palette, spacing }) => ({\n\ticon: {\n\t\tcolor: palette.action.active,\n\t},\n\ttextCenter: {\n\t\ttextAlign: \"center\",\n\t},\n\theader: {\n\t\theight: \"260px\",\n\t\tbackgroundSize: \"cover\",\n\t},\n});\n\nexport default withStyles(style, { name: \"Header\" })(\n\t({ children, appointmentData, classes, ...restProps }) => {\n\t\tconst { cancelAppointment, setCancelAppointment } = useContext(\n\t\t\tStudentContext\n\t\t);\n\t\tconst { detectAlert } = useContext(UserContext);\n\n\t\treturn (\n\t\t\t<AppointmentTooltip.Header\n\t\t\t\t{...restProps}\n\t\t\t\tappointmentData={appointmentData}\n\t\t\t\tshowCloseButton\n\t\t\t\tshowOpenButton={appointmentData.booking === \"BOOKED\"}\n\t\t\t\tonOpenButtonClick={() =>\n\t\t\t\t\tsetCancelAppointment(appointmentData.id)\n\t\t\t\t}\n\t\t\t></AppointmentTooltip.Header>\n\t\t);\n\t}\n);\n","import React, { useState, useEffect, useContext } from \"react\";\n\nimport { AppointmentTooltip } from \"@devexpress/dx-react-scheduler-material-ui\";\n\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport {\n\tIconButton,\n\tGrid,\n\tPaper,\n\tFab,\n\tContainer,\n\tDialog,\n\tSnackbar,\n\tDialogContent,\n\tDialogTitle,\n} from \"@material-ui/core\";\n\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Room from \"@material-ui/icons/Room\";\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\nimport classNames from \"clsx\";\n\nimport { myFetch, UserContext, StaffContext } from \"../Methods\";\nimport EditDialog from \"./ConsultDialog\";\n\nconst style = ({ palette, spacing }) => ({\n\ticon: {\n\t\tcolor: palette.action.active,\n\t},\n\ttextCenter: {\n\t\ttextAlign: \"center\",\n\t},\n\theader: {\n\t\theight: \"260px\",\n\t\tbackgroundSize: \"cover\",\n\t},\n});\n\nexport default withStyles(style, { name: \"Header\" })(\n\t({ children, appointmentData, classes, ...restProps }) => {\n\t\tconst { setEditOpen, setEditingAppointment } = useContext(StaffContext);\n\n\t\treturn (\n\t\t\t<AppointmentTooltip.Header\n\t\t\t\t{...restProps}\n\t\t\t\tappointmentData={appointmentData}\n\t\t\t\tshowCloseButton\n\t\t\t\tshowOpenButton\n\t\t\t\tonOpenButtonClick={() => {\n\t\t\t\t\tsetEditOpen(true);\n\t\t\t\t\tsetEditingAppointment(appointmentData);\n\t\t\t\t}}\n\t\t\t></AppointmentTooltip.Header>\n\t\t);\n\t}\n);\n","import React, { useState, useEffect, useContext } from \"react\";\nimport {\n\tAppointmentTooltip,\n\tWeekView,\n} from \"@devexpress/dx-react-scheduler-material-ui\";\n\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport {\n\tGrid,\n\tPaper,\n\tTypography,\n\tList,\n\tListItem,\n\tListItemIcon,\n\tListItemText,\n\tDivider,\n\tBadge,\n} from \"@material-ui/core\";\n\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport DataUsageIcon from \"@material-ui/icons/DataUsage\";\nimport RoomIcon from \"@material-ui/icons/Room\";\nimport EqualizerIcon from \"@material-ui/icons/Equalizer\";\nimport FormatAlignLeftIcon from \"@material-ui/icons/FormatAlignLeft\";\nimport LibraryAddIcon from \"@material-ui/icons/LibraryAdd\";\nimport PlaylistAddIcon from \"@material-ui/icons/PlaylistAdd\";\nimport SupervisorAccountIcon from \"@material-ui/icons/SupervisorAccount\";\n\nimport { myFetch, UserContext, StaffContext } from \"../Methods\";\nimport Staff from \"./Staff\";\nconst style = ({ palette, spacing }) => ({\n\ticon: {\n\t\tcolor: palette.action.active,\n\t\tmarginLeft: spacing(1),\n\t},\n\ttextCenter: {\n\t\ttextAlign: \"center\",\n\t},\n\theader: {\n\t\theight: \"260px\",\n\t\tbackgroundSize: \"cover\",\n\t},\n\tcommandButton: {\n\t\tbackgroundColor: \"rgba(255,255,100,0.65)\",\n\t},\n\tleft: {\n\t\tmarginLeft: spacing(1),\n\t},\n});\n\nexport default withStyles(style, { name: \"Content\" })(\n\t({ children, appointmentData, classes, ...restProps }) => {\n\t\t//const {} = useContext(StaffContext);\n\t\tconsole.log(appointmentData);\n\t\treturn (\n\t\t\t<AppointmentTooltip.Content\n\t\t\t\t{...restProps}\n\t\t\t\tappointmentData={appointmentData}\n\t\t\t>\n\t\t\t\t<Grid container justify=\"center\">\n\t\t\t\t\t<Grid item xs={11}>\n\t\t\t\t\t\t<List>\n\t\t\t\t\t\t\t<ListItem>\n\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t<RoomIcon />\n\t\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t\t<ListItemText\n\t\t\t\t\t\t\t\t\tprimary=\"Location\"\n\t\t\t\t\t\t\t\t\tsecondary={appointmentData.location}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t<ListItem>\n\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t<SupervisorAccountIcon />\n\t\t\t\t\t\t\t\t</ListItemIcon>{\" \"}\n\t\t\t\t\t\t\t\t<ListItemText\n\t\t\t\t\t\t\t\t\tprimary=\"Slots Available\"\n\t\t\t\t\t\t\t\t\tsecondary=\" \"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t<Badge\n\t\t\t\t\t\t\t\t\t\tbadgeContent={\n\t\t\t\t\t\t\t\t\t\t\tappointmentData.slotsAvailable\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\tshowZero\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<EqualizerIcon />\n\t\t\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t<ListItem>\n\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t<LibraryAddIcon />\n\t\t\t\t\t\t\t\t</ListItemIcon>\n\n\t\t\t\t\t\t\t\t<ListItemText\n\t\t\t\t\t\t\t\t\tprimary=\"Student Registered\"\n\t\t\t\t\t\t\t\t\tsecondary=\" \"\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t<Badge\n\t\t\t\t\t\t\t\t\t\tbadgeContent={\n\t\t\t\t\t\t\t\t\t\t\tappointmentData.totalStudent\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\tshowZero\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<EqualizerIcon />\n\t\t\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t</List>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</AppointmentTooltip.Content>\n\t\t);\n\t}\n);\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n    Grid,\r\n    CardContent,\r\n    withWidth,\r\n    isWidthUp,\r\n    Button,\r\n    Paper,\r\n    Typography,\r\n    LinearProgress,\r\n    Grow,\r\n    Snackbar,\r\n    Fab,\r\n    Zoom,\r\n    Collapse,\r\n    Fade,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles, withStyles, lighten } from \"@material-ui/core/styles\";\r\nimport TimeTable from \"../Timetable\";\r\n\r\nimport ConsultDialog from \"./ConsultDialog\";\r\n\r\nimport Header from \"./StaffHeader\";\r\nimport Content from \"./StaffContent\";\r\nimport legend from \"./legend.svg\";\r\n\r\nimport { myFetch, UserContext, StaffContext } from \"../Methods\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        maxWidth: \"100%\",\r\n        marginTop: theme.spacing(10),\r\n    },\r\n    fab: {\r\n        position: \"fixed\",\r\n        bottom: theme.spacing(1) * 6,\r\n        right: theme.spacing(1) * 6,\r\n    },\r\n}));\r\n\r\nexport default () => {\r\n    const classes = useStyles();\r\n\r\n    const [data, setData] = useState([]);\r\n\r\n    //timetable values...\r\n    const [currentDate, setCurrentDate] = useState(\"2020-5-11\");\r\n    const [createOpen, setCreateOpen] = useState(false);\r\n    const [editOpen, setEditOpen] = useState(false);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const [editingAppointment, setEditingAppointment] = useState({\r\n        title: \"\",\r\n        startDate: new Date(),\r\n        endDate: new Date(),\r\n        slotsAvailable: 0,\r\n        location: \"\",\r\n    });\r\n\r\n    const { alert, user } = useContext(UserContext);\r\n    //Updating consultations Information.\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        //Fetch all created consultations.\r\n        const fetchConsult = async () => {\r\n            const res = await myFetch(\"/api/staff/consult/viewCreated\", \"GET\");\r\n            return res.consultations;\r\n        };\r\n        fetchConsult().then((consultations) => {\r\n            const consults = [];\r\n            consultations.map((consultation) => {\r\n                consults.push({\r\n                    title: consultation.subjectCode,\r\n                    startDate: new Date(consultation.startDate),\r\n                    endDate: new Date(consultation.endDate),\r\n                    id: consultation._id,\r\n                    location: consultation.location,\r\n                    slotsAvailable: consultation.slotsAvailable,\r\n                    totalStudent: consultation.studentRegistered.length,\r\n                });\r\n            });\r\n            setData(consults);\r\n            setLoading(false);\r\n        });\r\n    }, [alert.status]);\r\n\r\n    const api = {\r\n        create: \"/api/staff/consult/create\",\r\n        edit: \"/api/staff/consult/patch\",\r\n        delete: \"/api/staff/consult/delete\",\r\n    };\r\n\r\n    return (\r\n        <StaffContext.Provider\r\n            value={{\r\n                currentDate,\r\n                setCurrentDate,\r\n                createOpen,\r\n                setCreateOpen,\r\n                data,\r\n                setData,\r\n                editOpen,\r\n                setEditOpen,\r\n                setEditingAppointment,\r\n                editingAppointment,\r\n                loading,\r\n                setLoading,\r\n                api,\r\n            }}\r\n        >\r\n            <Fade in timeout={500}>\r\n                <div>\r\n                    <TimeTable\r\n                        data={data}\r\n                        currentDate={currentDate}\r\n                        setCurrentDate={setCurrentDate}\r\n                        header={Header}\r\n                        content={Content}\r\n                        loading={loading}\r\n                        mainResourceName=\"title\"\r\n                        subjects={user.userInfo.subjects}\r\n                    />\r\n                    <ConsultDialog\r\n                        open={createOpen}\r\n                        toggle={() => {\r\n                            setCreateOpen(!createOpen);\r\n                        }}\r\n                    />\r\n                    <ConsultDialog\r\n                        open={editOpen}\r\n                        editingAppointment={editingAppointment}\r\n                        toggle={() => {\r\n                            setEditOpen(!editOpen);\r\n                            setEditingAppointment({\r\n                                title: \"\",\r\n                                startDate: new Date(),\r\n                                endDate: new Date(),\r\n                                slotsAvailable: 0,\r\n                                location: \"\",\r\n                            });\r\n                        }}\r\n                        edit\r\n                        context={StaffContext}\r\n                    />\r\n                </div>\r\n            </Fade>\r\n            <Zoom in timeout={1000}>\r\n                <Fab\r\n                    color=\"primary\"\r\n                    className={classes.fab}\r\n                    onClick={() => {\r\n                        setCreateOpen(true);\r\n                    }}\r\n                >\r\n                    <AddIcon />\r\n                </Fab>\r\n            </Zoom>\r\n        </StaffContext.Provider>\r\n    );\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\nimport {\n\tAppointmentTooltip,\n\tWeekView,\n} from \"@devexpress/dx-react-scheduler-material-ui\";\n\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport {\n\tGrid,\n\tPaper,\n\tTypography,\n\tList,\n\tListItem,\n\tListItemIcon,\n\tListItemText,\n\tDivider,\n\tBadge,\n\tFab,\n} from \"@material-ui/core\";\n\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport DataUsageIcon from \"@material-ui/icons/DataUsage\";\nimport RoomIcon from \"@material-ui/icons/Room\";\nimport EqualizerIcon from \"@material-ui/icons/Equalizer\";\nimport FormatAlignLeftIcon from \"@material-ui/icons/FormatAlignLeft\";\nimport LibraryAddIcon from \"@material-ui/icons/LibraryAdd\";\nimport PlaylistAddIcon from \"@material-ui/icons/PlaylistAdd\";\nimport SupervisorAccountIcon from \"@material-ui/icons/SupervisorAccount\";\n\nimport { myFetch, UserContext, StudentContext } from \"../Methods\";\nimport Staff from \"./Staff\";\nconst style = ({ palette, spacing }) => ({\n\ticon: {\n\t\tcolor: palette.action.active,\n\t\tmarginLeft: spacing(1),\n\t},\n\ttextCenter: {\n\t\ttextAlign: \"center\",\n\t},\n\theader: {\n\t\theight: \"260px\",\n\t\tbackgroundSize: \"cover\",\n\t},\n\tcommandButton: {\n\t\tbackgroundColor: \"rgba(255,255,100,0.65)\",\n\t},\n\tleft: {\n\t\tmarginLeft: spacing(1),\n\t},\n\tfab: {\n\t\tmargin: \"auto\",\n\t\twidth: \"100%\",\n\t},\n});\n\nexport default withStyles(style, { name: \"Content\" })(\n\t({ children, appointmentData, classes, ...restProps }) => {\n\t\t//const {} = useContext(StaffContext);\n\t\tconst { setBookOpen, setLoading, userInfo, setUser } = useContext(\n\t\t\tStudentContext\n\t\t);\n\t\tconst { detectAlert, setLoadingRoute } = useContext(UserContext);\n\n\t\tconst book = async () => {\n\t\t\tsetLoading(true);\n\t\t\tconst body = {\n\t\t\t\tid: appointmentData.id,\n\t\t\t};\n\t\t\tconst res = await myFetch(\n\t\t\t\t\"/api/student/consult/book\",\n\t\t\t\t\"POST\",\n\t\t\t\tbody\n\t\t\t);\n\t\t\tdetectAlert(res, \"Successfully booked.\");\n\t\t};\n\n\t\tconst checkBooked = () => {\n\t\t\tconsole.log(userInfo.registeredConsult);\n\t\t\tconsole.log(appointmentData.id);\n\t\t\treturn (\n\t\t\t\tuserInfo.registeredConsult.filter(\n\t\t\t\t\t(each) => each == appointmentData.id\n\t\t\t\t).length > 0\n\t\t\t);\n\t\t};\n\n\t\treturn (\n\t\t\t<AppointmentTooltip.Content\n\t\t\t\t{...restProps}\n\t\t\t\tappointmentData={appointmentData}\n\t\t\t>\n\t\t\t\t<Grid container justify=\"center\">\n\t\t\t\t\t<Grid item xs={11}>\n\t\t\t\t\t\t<List>\n\t\t\t\t\t\t\t<ListItem>\n\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t<RoomIcon />\n\t\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t\t<ListItemText\n\t\t\t\t\t\t\t\t\tprimary=\"Location\"\n\t\t\t\t\t\t\t\t\tsecondary={appointmentData.location}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</ListItem>\n\n\t\t\t\t\t\t\t<ListItem>\n\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t<SupervisorAccountIcon />\n\t\t\t\t\t\t\t\t</ListItemIcon>{\" \"}\n\t\t\t\t\t\t\t\t<ListItemText\n\t\t\t\t\t\t\t\t\tprimary=\"Slots Available\"\n\t\t\t\t\t\t\t\t\tsecondary=\" \"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t<Badge\n\t\t\t\t\t\t\t\t\t\tbadgeContent={\n\t\t\t\t\t\t\t\t\t\t\tappointmentData.slotsAvailable\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\tshowZero\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<EqualizerIcon />\n\t\t\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t<ListItem>\n\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t<LibraryAddIcon />\n\t\t\t\t\t\t\t\t</ListItemIcon>\n\n\t\t\t\t\t\t\t\t<ListItemText\n\t\t\t\t\t\t\t\t\tprimary=\"Student Registered\"\n\t\t\t\t\t\t\t\t\tsecondary=\" \"\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t<Badge\n\t\t\t\t\t\t\t\t\t\tbadgeContent={\n\t\t\t\t\t\t\t\t\t\t\tappointmentData.totalStudent\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\tshowZero\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<EqualizerIcon />\n\t\t\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<ListItem>\n\t\t\t\t\t\t\t\t<Fab\n\t\t\t\t\t\t\t\t\tvariant=\"extended\"\n\t\t\t\t\t\t\t\t\tclassName={classes.fab}\n\t\t\t\t\t\t\t\t\tcolor={\n\t\t\t\t\t\t\t\t\t\tcheckBooked() ? \"default\" : \"primary\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tonClick={book}\n\t\t\t\t\t\t\t\t\tdisabled={checkBooked()}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<PlaylistAddIcon />\n\t\t\t\t\t\t\t\t\t{checkBooked() ? \"Booked\" : \"Book it\"}\n\t\t\t\t\t\t\t\t</Fab>\n\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t</List>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</AppointmentTooltip.Content>\n\t\t);\n\t}\n);\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n    Grid,\r\n    Button,\r\n    ButtonGroup,\r\n    Fade,\r\n    Tabs,\r\n    AppBar,\r\n    Tab,\r\n    Dialog,\r\n    DialogContent,\r\n    DialogTitle,\r\n    DialogActions,\r\n    Select,\r\n    MenuItem,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles, withStyles, lighten } from \"@material-ui/core/styles\";\r\nimport withWidth, { isWidthUp, isWidthDown } from \"@material-ui/core/withWidth\";\r\nimport legend from \"./legend.svg\";\r\nimport TimeTable from \"../Timetable\";\r\n\r\nimport Header from \"./StudentHeader\";\r\nimport Content from \"./StudentContent\";\r\n\r\nimport { myFetch, UserContext, StudentContext } from \"../Methods\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        maxHeight: \"60VH\",\r\n    },\r\n    fab: {\r\n        position: \"fixed\",\r\n        bottom: theme.spacing(1) * 6,\r\n        right: theme.spacing(1) * 6,\r\n    },\r\n    noDecoration: {\r\n        textDecoration: \"none !important\",\r\n    },\r\n    delete: {\r\n        textTransform: \"none\",\r\n        color: theme.palette.getContrastText(grey[700]),\r\n        background: grey[700],\r\n        \"&:hover\": {\r\n            color: theme.palette.getContrastText(grey[900]),\r\n            background: grey[900],\r\n        },\r\n    },\r\n    legend: {\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: theme.spacing(2),\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            minWidth: \"40%\",\r\n            minHeight: \"40%\",\r\n        },\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            minWidth: \"100%\",\r\n            minHeight: \"100%\",\r\n        },\r\n    },\r\n}));\r\n\r\nexport default withWidth()(({ width }) => {\r\n    const classes = useStyles();\r\n\r\n    const largeScreen = isWidthUp(\"lg\", width);\r\n\r\n    const [data, setData] = useState([]);\r\n\r\n    //timetable values...\r\n    const [currentDate, setCurrentDate] = useState(new Date());\r\n\r\n    const [cancelAppointment, setCancelAppointment] = useState(\"\");\r\n\r\n    const [currentSubject, setCurrentSubject] = useState(0);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const [mainResourceName, setMainResourceName] = useState(\"booking\");\r\n    const changeMainResource = (mainResourceName) => {\r\n        setMainResourceName(mainResourceName);\r\n    };\r\n\r\n    const { alert, detectAlert, user, setUser } = useContext(UserContext);\r\n\r\n    const reloadUser = async (simpleReload) => {\r\n        //reloading user information.\r\n        setLoading(true);\r\n        const user = await myFetch(\"/api/shared/users/info\", \"GET\");\r\n        detectAlert(user);\r\n        setUser(user);\r\n        if (simpleReload) setLoading(false);\r\n\r\n        return user;\r\n    };\r\n\r\n    //Fetch the consultations of the current subject.\r\n    const fetchConsult = async () => {\r\n        if (currentSubject == 0) {\r\n            const res = await myFetch(\r\n                \"/api/student/consult/viewRegistered\",\r\n                \"GET\"\r\n            );\r\n            return res.consultations;\r\n        }\r\n        const body = {\r\n            subjectCode: userInfo.subjects[currentSubject - 1],\r\n        };\r\n        const res = await myFetch(\"/api/student/consult/viewAll\", \"POST\", body);\r\n        return res.consultations;\r\n    };\r\n\r\n    const getBookingStatus = (consultation, user) => {\r\n        if (\r\n            user.userInfo.registeredConsult.filter(\r\n                (each) => each == consultation._id\r\n            ).length > 0\r\n        )\r\n            return \"BOOKED\";\r\n\r\n        if (consultation.slotsAvailable < 1) return \"FULL\";\r\n        return \"AVAILABLE\";\r\n    };\r\n\r\n    //Updating consultations Information.\r\n    useEffect(() => {\r\n        reloadUser(false).then((user) => {\r\n            fetchConsult().then((consultations) => {\r\n                if (!consultations) return;\r\n\r\n                //Formatting data for timetable to render.\r\n                const consults = [];\r\n\r\n                consultations.map((consultation) => {\r\n                    consults.push({\r\n                        title: consultation.subjectCode,\r\n                        startDate: new Date(consultation.startDate),\r\n                        endDate: new Date(consultation.endDate),\r\n                        id: consultation._id,\r\n                        location: consultation.location,\r\n                        slotsAvailable: consultation.slotsAvailable,\r\n                        totalStudent: consultation.studentRegistered.length,\r\n                        booking: getBookingStatus(consultation, user),\r\n                    });\r\n                });\r\n                setData(consults);\r\n                setLoading(false);\r\n                console.log(\"?\");\r\n            });\r\n        });\r\n    }, [alert.status, currentSubject]);\r\n\r\n    //Cancel a booking.\r\n    const cancel = async () => {\r\n        setLoading(true);\r\n        const body = {\r\n            id: cancelAppointment,\r\n        };\r\n        const res = await myFetch(\"/api/student/consult/cancel\", \"POST\", body);\r\n        detectAlert(res, \"Successfully canceled.\");\r\n        setCancelAppointment(\"\");\r\n    };\r\n\r\n    const { userInfo } = user;\r\n    return (\r\n        <StudentContext.Provider\r\n            value={{\r\n                currentDate,\r\n                setCurrentDate,\r\n                cancelAppointment,\r\n                setCancelAppointment,\r\n                data,\r\n                setData,\r\n                userInfo,\r\n                loading,\r\n                setLoading,\r\n            }}\r\n        >\r\n            <Dialog\r\n                open={cancelAppointment !== \"\"}\r\n                onClose={() => setCancelAppointment(\"\")}\r\n                fullWidth\r\n            >\r\n                <DialogTitle>Cancel your booking?</DialogTitle>\r\n                <DialogContent>\r\n                    Do you want to cancel this booking?\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <ButtonGroup fullWidth>\r\n                        <Button\r\n                            fullWidth\r\n                            onClick={() => setCancelAppointment(\"\")}\r\n                            style={{\r\n                                textTransform: \"none\",\r\n                            }}\r\n                        >\r\n                            No, thanks.\r\n                        </Button>\r\n                        <Button\r\n                            fullWidth\r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                            onClick={cancel}\r\n                            className={classes.delete}\r\n                        >\r\n                            Yes, please cancel it.\r\n                        </Button>\r\n                    </ButtonGroup>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <AppBar position=\"relative\" color=\"default\">\r\n                <Grid container justify=\"space-between\">\r\n                    <Grid item xs={largeScreen ? 10 : 12}>\r\n                        <Tabs\r\n                            value={currentSubject}\r\n                            indicatorColor=\"primary\"\r\n                            textColor=\"primary\"\r\n                            onChange={(event, newValue) => {\r\n                                setCurrentSubject(newValue);\r\n                                if (newValue == currentSubject)\r\n                                    reloadUser(true, newValue);\r\n                            }}\r\n                            variant=\"scrollable\"\r\n                            scrollButtons=\"auto\"\r\n                        >\r\n                            <Tab label=\"Registered\" />\r\n                            {user.userInfo.subjects.map((subject) => (\r\n                                <Tab label={subject} key={subject} />\r\n                            ))}\r\n                        </Tabs>\r\n                    </Grid>\r\n                    {largeScreen ? (\r\n                        <Grid item xs={2}>\r\n                            <Select\r\n                                value={mainResourceName}\r\n                                onChange={(e) =>\r\n                                    setMainResourceName(e.target.value)\r\n                                }\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                            >\r\n                                <MenuItem key=\"booking\" value=\"booking\">\r\n                                    Booking\r\n                                </MenuItem>\r\n                                <MenuItem key=\"title\" value=\"title\">\r\n                                    Subjects\r\n                                </MenuItem>\r\n                            </Select>\r\n                        </Grid>\r\n                    ) : null}\r\n                </Grid>\r\n            </AppBar>\r\n            <Grid container justify=\"flex-end\">\r\n                <img className={classes.legend} src={legend} alt=\"legend\" />\r\n            </Grid>\r\n\r\n            <Fade in timeout={500}>\r\n                <div className={classes.paper}>\r\n                    <TimeTable\r\n                        data={data}\r\n                        currentDate={currentDate}\r\n                        setCurrentDate={setCurrentDate}\r\n                        header={Header}\r\n                        content={Content}\r\n                        loading={loading}\r\n                        viewChange={true}\r\n                        changeMainResource={changeMainResource}\r\n                        mainResourceName={mainResourceName}\r\n                        subjects={user.userInfo.subjects}\r\n                    />\r\n                </div>\r\n            </Fade>\r\n        </StudentContext.Provider>\r\n    );\r\n});\r\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { UserContext, myFetch } from \"../Methods\";\nimport Layout from \"../Navigation/Layout\";\nimport Student from \"./Student\";\nimport Staff from \"./Staff\";\n\nexport default () => {\n\t//Set the routes.\n\tconst {\n\t\tsetSelectedRoute,\n\t\tloadingRoute,\n\t\tsetLoadingRoute,\n\t\tfetchUser,\n\t\tuser,\n\t} = useContext(UserContext);\n\n\tuseEffect(() => {\n\t\tsetSelectedRoute(\"consultations\");\n\t\tfetchUser().then(() => setLoadingRoute(false));\n\t}, []);\n\n\tif (loadingRoute || !user.type) return <Layout />;\n\n\treturn (\n\t\t<Layout\n\t\t\tcontent={user.type === \"student\" ? <Student /> : <Staff />}\n\t\t\ttype={user.type}\n\t\t/>\n\t);\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport {\n    Grid,\n    CardContent,\n    withWidth,\n    isWidthUp,\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    TextField,\n    Snackbar,\n    Backdrop,\n    CircularProgress,\n} from \"@material-ui/core\";\nimport { makeStyles, withStyles, lighten } from \"@material-ui/core/styles\";\nimport { myFetch, UserContext } from \"../Methods\";\nimport Cookies from \"js-cookie\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default ({\n    open,\n    subjectCode,\n    setSubjectCode,\n    handleDialogClose,\n    userType,\n}) => {\n    const { detectAlert, loadingRoute, setLoadingRoute } = useContext(\n        UserContext\n    );\n    const [allSubjects, setAllSubjects] = useState([]);\n\n    useEffect(() => {\n        const fetchAllSubject = async () => {\n            const res = await myFetch(\"/api/shared/users/allSubjects\", \"GET\");\n            setAllSubjects(res.subjectList);\n            detectAlert(res);\n            console.log(res.subjectList);\n        };\n        fetchAllSubject();\n    }, []);\n\n    const GetField = () => {\n        return (\n            <Autocomplete\n                id=\"addSubject\"\n                options={allSubjects}\n                getOptionLabel={(option) => option}\n                value={subjectCode}\n                onChange={(event, newValue) => {\n                    setSubjectCode(newValue);\n                }}\n                renderInput={(params) => {\n                    return (\n                        <TextField\n                            {...params}\n                            label=\"Please choose a subject\"\n                            variant=\"filled\"\n                            required\n                        />\n                    );\n                }}\n            />\n        );\n    };\n\n    const join = async (e) => {\n        e.preventDefault();\n        let url = \"/api/student/subjects/join\";\n        if (userType === \"staff\") url = \"/api/staff/subjects/join\";\n        setLoadingRoute(true);\n        const res = await myFetch(url, \"POST\", {\n            subjectCode: subjectCode,\n        });\n        detectAlert(\n            res,\n            `You have successfully joined subject ${subjectCode}.`\n        );\n\n        setLoadingRoute(false);\n    };\n\n    return (\n        <Dialog\n            open={open}\n            onClose={handleDialogClose}\n            aria-labelledby=\"form-dialog-title\"\n            fullWidth\n        >\n            <DialogTitle id=\"form-dialog-title\">Join a new Subject</DialogTitle>\n            <DialogContent>\n                <GetField />\n            </DialogContent>\n\n            <DialogActions>\n                <Button fullWidth onClick={handleDialogClose}>\n                    Cancel\n                </Button>\n                <Button\n                    fullWidth\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={join}\n                >\n                    Join\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n    Grid,\r\n    withWidth,\r\n    isWidthUp,\r\n    Typography,\r\n    Tooltip,\r\n    Fab,\r\n    IconButton,\r\n    List,\r\n    ListItem,\r\n    ListItemAvatar,\r\n    ListItemSecondaryAction,\r\n    ListItemText,\r\n    Avatar,\r\n    Grow,\r\n    Divider,\r\n    Snackbar,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport SchoolIcon from \"@material-ui/icons/School\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Add from \"./Add\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nimport { myFetch, UserContext } from \"../Methods\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        maxWidth: \"100%\",\r\n        marginTop: theme.spacing(10),\r\n    },\r\n    fab: {\r\n        position: \"fixed\",\r\n        bottom: theme.spacing(1) * 10,\r\n        right: theme.spacing(1) * 11,\r\n    },\r\n}));\r\n\r\nexport default ({ user, setMySubjects, mySubjects }) => {\r\n    //\r\n    const classes = useStyles();\r\n    const { type, userInfo } = user;\r\n    const { firstName, lastName } = userInfo;\r\n    const [open, setOpen] = useState(false);\r\n    const [subjectCode, setSubjectCode] = useState(\"\");\r\n\r\n    const {\r\n        setLoadingRoute,\r\n        alert,\r\n        setAlert,\r\n        detectAlert,\r\n        closeAlert,\r\n    } = useContext(UserContext);\r\n\r\n    useEffect(() => {\r\n        const fetchMySubject = async () => {\r\n            const res = await myFetch(\"/api/student/subjects/all\", \"GET\");\r\n            detectAlert(res);\r\n            setMySubjects(res);\r\n        };\r\n\r\n        fetchMySubject();\r\n    }, [alert.status]);\r\n\r\n    const leave = async (subjectCode) => {\r\n        setLoadingRoute(true);\r\n        const res = await myFetch(\"/api/student/subjects/leave\", \"POST\", {\r\n            subjectCode: subjectCode,\r\n        });\r\n        detectAlert(res, `You have successfully left subject ${subjectCode}.`);\r\n\r\n        setLoadingRoute(false);\r\n    };\r\n\r\n    if (!mySubjects.subjectsInfo) return null;\r\n\r\n    return (\r\n        <div>\r\n            <Tooltip title=\"Join new subject\" aria-label=\"add\">\r\n                <Fab\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    className={classes.fab}\r\n                    onClick={() => {\r\n                        setOpen(true);\r\n                    }}\r\n                >\r\n                    <AddIcon />\r\n                </Fab>\r\n            </Tooltip>\r\n            <Add\r\n                open={open}\r\n                handleDialogClose={() => {\r\n                    setOpen(false);\r\n                }}\r\n                subjectCode={subjectCode}\r\n                setSubjectCode={setSubjectCode}\r\n                userType=\"student\"\r\n            />\r\n            <Grid container justify=\"center\" alignItems=\"center\">\r\n                <Grid item xs={12}>\r\n                    <Typography\r\n                        variant=\"h5\"\r\n                        style={{ fontWeight: 900, color: \"#455a64\" }}\r\n                    >\r\n                        Your current subject list:\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    {mySubjects.subjectsInfo.map(\r\n                        ({ subjectCode, subjectName }, index) => (\r\n                            <Grow in timeout={index + 1 * 500} key={index}>\r\n                                <List>\r\n                                    <Divider />\r\n                                    <ListItem>\r\n                                        <ListItemAvatar>\r\n                                            <Avatar>\r\n                                                <SchoolIcon />\r\n                                            </Avatar>\r\n                                        </ListItemAvatar>\r\n                                        <ListItemText\r\n                                            primary={subjectCode}\r\n                                            secondary={subjectName}\r\n                                        />\r\n                                        <ListItemSecondaryAction>\r\n                                            <IconButton\r\n                                                edge=\"end\"\r\n                                                aria-label=\"delete\"\r\n                                                onClick={() => {\r\n                                                    leave(subjectCode);\r\n                                                }}\r\n                                            >\r\n                                                <DeleteIcon />\r\n                                            </IconButton>\r\n                                        </ListItemSecondaryAction>\r\n                                    </ListItem>\r\n                                    <Divider />\r\n                                </List>\r\n                            </Grow>\r\n                        )\r\n                    )}\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n    Grid,\r\n    CardContent,\r\n    withWidth,\r\n    isWidthUp,\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    TextField,\r\n    Paper,\r\n    Snackbar,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles, withStyles, lighten } from \"@material-ui/core/styles\";\r\nimport { UserContext, myFetch } from \"../Methods\";\r\nimport Cookies from \"js-cookie\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default ({\r\n    open,\r\n    subjectCode,\r\n    setSubjectCode,\r\n    subjectName,\r\n    setSubjectName,\r\n    handleDialogClose,\r\n    setError,\r\n    setAdded,\r\n}) => {\r\n    const { detectAlert, setAlert, loadingRoute, setLoadingRoute } = useContext(\r\n        UserContext\r\n    );\r\n\r\n    //Create a subject in subject account.\r\n    const create = async () => {\r\n        if (subjectCode.length != 9) {\r\n            setAlert({\r\n                status: \"warning\",\r\n                message:\r\n                    \"UniMelb subject code must have a length of 9 letters.\",\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (subjectName.length > 100) {\r\n            setAlert({\r\n                status: \"warning\",\r\n                message: \"Subject name too long.\",\r\n            });\r\n            return;\r\n        }\r\n\r\n        const verify = /[A-Z]{4}[0-9]{5}/;\r\n        if (!verify.test(subjectCode)) {\r\n            setAlert({\r\n                status: \"warning\",\r\n                message: \"Invalid form of subjectCode.\",\r\n            });\r\n            return;\r\n        }\r\n        setLoadingRoute(true);\r\n\r\n        const res = await myFetch(\"/api/staff/subjects/create\", \"POST\", {\r\n            subjectCode: subjectCode,\r\n            subjectName: subjectName,\r\n        });\r\n        detectAlert(\r\n            res,\r\n            `You have successfully created subject ${subjectCode}.`\r\n        );\r\n\r\n        setLoadingRoute(false);\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={handleDialogClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n            fullWidth\r\n        >\r\n            <DialogTitle id=\"form-dialog-title\">\r\n                Create a new Subject\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <TextField\r\n                    label=\"Subject Code\"\r\n                    required\r\n                    onChange={(event) => {\r\n                        setSubjectCode(event.target.value);\r\n                    }}\r\n                    fullWidth\r\n                />\r\n                <br />\r\n                <br />\r\n\r\n                <TextField\r\n                    label=\"Subject Name\"\r\n                    required\r\n                    onChange={(event) => {\r\n                        setSubjectName(event.target.value);\r\n                    }}\r\n                    fullWidth\r\n                />\r\n            </DialogContent>\r\n\r\n            <DialogActions>\r\n                <Button fullWidth onClick={handleDialogClose}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    fullWidth\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    onClick={create}\r\n                >\r\n                    Create\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n    Grid,\r\n    withWidth,\r\n    isWidthUp,\r\n    Typography,\r\n    Tooltip,\r\n    Fab,\r\n    IconButton,\r\n    List,\r\n    ListItem,\r\n    ListItemAvatar,\r\n    ListItemSecondaryAction,\r\n    ListItemText,\r\n    Avatar,\r\n    Grow,\r\n    Divider,\r\n    Snackbar,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport SchoolIcon from \"@material-ui/icons/School\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\n\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport SpeedDial from \"@material-ui/lab/SpeedDial\";\r\nimport SpeedDialIcon from \"@material-ui/lab/SpeedDialIcon\";\r\nimport SpeedDialAction from \"@material-ui/lab/SpeedDialAction\";\r\n\r\nimport { myFetch, UserContext } from \"../Methods\";\r\nimport Add from \"./Add\";\r\nimport Create from \"./Create\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        maxWidth: \"100%\",\r\n        marginTop: theme.spacing(10),\r\n    },\r\n    fab: {\r\n        position: \"fixed\",\r\n        bottom: theme.spacing(6),\r\n        right: theme.spacing(6),\r\n    },\r\n}));\r\n\r\nexport default ({ user, setMySubjects, mySubjects, fetchSubject }) => {\r\n    const classes = useStyles();\r\n    const [openJoin, setOpenJoin] = useState(false);\r\n    const [openCreate, setOpenCreate] = useState(false);\r\n    const [openSpeed, setOpenSpeed] = useState(false);\r\n    const [subjectCode, setSubjectCode] = useState(\"\");\r\n    const [newName, setNewName] = useState(\"\");\r\n\r\n    const { type, userInfo } = user;\r\n    const { firstName, lastName } = userInfo;\r\n\r\n    const {\r\n        setLoadingRoute,\r\n        alert,\r\n        setAlert,\r\n        detectAlert,\r\n        closeAlert,\r\n    } = useContext(UserContext);\r\n\r\n    useEffect(() => {\r\n        fetchSubject(\"staff\").then(setLoadingRoute(false));\r\n    }, [alert.status]);\r\n\r\n    const handleJoinOpen = () => {\r\n        if (mySubjects.subjectsInfo.length > 4) {\r\n            setAlert({\r\n                status: \"warning\",\r\n                message: \"Maximum 5 subjects in your account.\",\r\n            });\r\n            return;\r\n        }\r\n        setOpenJoin(true);\r\n    };\r\n\r\n    const leave = async (subjectCode) => {\r\n        setLoadingRoute(true);\r\n        const res = await myFetch(\"/api/staff/subjects/leave\", \"POST\", {\r\n            subjectCode: subjectCode,\r\n        });\r\n        detectAlert(res, `You have successfully left subject ${subjectCode}.`);\r\n\r\n        setLoadingRoute(false);\r\n    };\r\n\r\n    if (!mySubjects.subjectsInfo) return null;\r\n\r\n    return (\r\n        <div>\r\n            <SpeedDial\r\n                ariaLabel=\"SpeedDial example\"\r\n                className={classes.fab}\r\n                icon={<SpeedDialIcon />}\r\n                open={openSpeed}\r\n                onClose={() => {\r\n                    setOpenSpeed(false);\r\n                }}\r\n                onOpen={() => {\r\n                    setOpenSpeed(true);\r\n                }}\r\n                direction=\"up\"\r\n            >\r\n                <SpeedDialAction\r\n                    icon={<AddIcon />}\r\n                    tooltipTitle=\"Join new subject\"\r\n                    onClick={handleJoinOpen}\r\n                />\r\n                <SpeedDialAction\r\n                    icon={<CreateIcon />}\r\n                    tooltipTitle=\"Create new subject\"\r\n                    onClick={() => {\r\n                        closeAlert();\r\n                        setOpenCreate(true);\r\n                    }}\r\n                />\r\n            </SpeedDial>\r\n\r\n            <Add\r\n                open={openJoin}\r\n                handleDialogClose={() => {\r\n                    setOpenJoin(false);\r\n                }}\r\n                subjectCode={subjectCode}\r\n                setSubjectCode={setSubjectCode}\r\n                userType=\"staff\"\r\n            />\r\n            <Create\r\n                open={openCreate}\r\n                handleDialogClose={() => {\r\n                    setOpenCreate(false);\r\n                }}\r\n                subjectCode={subjectCode}\r\n                setSubjectCode={setSubjectCode}\r\n                subjectName={newName}\r\n                setSubjectName={setNewName}\r\n            />\r\n\r\n            <Grid container justify=\"center\" alignItems=\"center\">\r\n                <Grid item xs={12}>\r\n                    <Typography\r\n                        variant=\"h5\"\r\n                        style={{ fontWeight: 900, color: \"#455a64\" }}\r\n                    >\r\n                        Your current subject list:\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    {mySubjects.subjectsInfo.map(\r\n                        ({ subjectCode, subjectName }, index) => (\r\n                            <Grow in timeout={index + 1 * 200} key={index}>\r\n                                <List>\r\n                                    <Divider />\r\n                                    <ListItem>\r\n                                        <ListItemAvatar>\r\n                                            <Avatar>\r\n                                                <SchoolIcon />\r\n                                            </Avatar>\r\n                                        </ListItemAvatar>\r\n                                        <ListItemText\r\n                                            primary={subjectCode}\r\n                                            secondary={subjectName}\r\n                                        />\r\n                                        <ListItemSecondaryAction>\r\n                                            <IconButton\r\n                                                edge=\"end\"\r\n                                                aria-label=\"delete\"\r\n                                                onClick={() => {\r\n                                                    leave(subjectCode);\r\n                                                }}\r\n                                            >\r\n                                                <DeleteIcon />\r\n                                            </IconButton>\r\n                                        </ListItemSecondaryAction>\r\n                                    </ListItem>\r\n                                    <Divider />\r\n                                </List>\r\n                            </Grow>\r\n                        )\r\n                    )}\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\n\r\nimport { UserContext, getUser } from \"../Methods\";\r\nimport Layout from \"../Navigation/Layout\";\r\n\r\nimport { myFetch } from \"../Methods\";\r\nimport Student from \"./Student\";\r\nimport Staff from \"./Staff\";\r\nimport Loading from \"../Navigation/Loading\";\r\n\r\nexport default () => {\r\n    const [subjectInfo, setSubjectInfo] = useState({});\r\n    const {\r\n        setSelectedRoute,\r\n        setLoadingRoute,\r\n        loadingRoute,\r\n        detectAlert,\r\n        fetchUser,\r\n        user,\r\n    } = useContext(UserContext);\r\n\r\n    const fetchSubject = async (type) => {\r\n        console.log(type);\r\n        if (type === \"student\") {\r\n            const res = await myFetch(\"/api/student/subjects/all\", \"GET\");\r\n            setSubjectInfo(res);\r\n            detectAlert(res);\r\n            if (res.success) setLoadingRoute(false);\r\n\r\n            console.log(res);\r\n        } else {\r\n            const res = await myFetch(\"/api/staff/subjects/all\", \"GET\");\r\n            setSubjectInfo(res);\r\n            detectAlert(res);\r\n            if (res.success) setLoadingRoute(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        //Set Navigation to this page.\r\n        setSelectedRoute(\"settings\");\r\n        setLoadingRoute(true);\r\n        console.log(123);\r\n\r\n        const fetchData = async () => {\r\n            const res = await fetchUser();\r\n            if (res.success) {\r\n                detectAlert(\r\n                    res,\r\n                    false,\r\n                    `Welcome back! ${res.type} ${res.userInfo.firstName} ${res.userInfo.lastName}`\r\n                );\r\n            }\r\n            console.log(res);\r\n            fetchSubject(res.type).then(() => setLoadingRoute(false));\r\n        };\r\n        fetchData();\r\n    }, []);\r\n\r\n    if (loadingRoute || !user.type) {\r\n        return <Layout />;\r\n    }\r\n\r\n    return (\r\n        <Layout\r\n            content={\r\n                user.type === \"student\" ? (\r\n                    <Student\r\n                        user={user}\r\n                        mySubjects={subjectInfo}\r\n                        setMySubjects={setSubjectInfo}\r\n                    />\r\n                ) : (\r\n                    <Staff\r\n                        user={user}\r\n                        mySubjects={subjectInfo}\r\n                        setMySubjects={setSubjectInfo}\r\n                        fetchSubject={fetchSubject}\r\n                    />\r\n                )\r\n            }\r\n            type={user.type}\r\n        />\r\n    );\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\nimport {\n    Grid,\n    CardContent,\n    withWidth,\n    isWidthUp,\n    Button,\n    IconButton,\n    Paper,\n    Typography,\n    LinearProgress,\n    Card,\n    CardHeader,\n    List,\n    ListItem,\n    ListItemAvatar,\n    Collapse,\n    ListItemIcon,\n    ListItemText,\n    Avatar,\n    AppBar,\n    Select,\n    Tab,\n    Tabs,\n    MenuItem,\n    Grow,\n} from \"@material-ui/core\";\nimport { makeStyles, withStyles, lighten } from \"@material-ui/core/styles\";\nimport { red, green, lightBlue } from \"@material-ui/core/colors\";\nimport { myFetch, UserContext, StudentContext } from \"../Methods\";\nimport {\n    KeyboardTimePicker,\n    MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport MomentUtils from \"@date-io/moment\";\n\nimport RoomIcon from \"@material-ui/icons/Room\";\n\nimport AutorenewIcon from \"@material-ui/icons/Autorenew\";\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport AccessAlarmIcon from \"@material-ui/icons/AccessAlarm\";\nimport BlockIcon from \"@material-ui/icons/Block\";\nimport AddIcon from \"@material-ui/icons/PlaylistAdd\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        maxWidth: \"100%\",\n        marginTop: theme.spacing(10),\n    },\n    cardHeader: {\n        background: theme.palette.primary,\n    },\n    registered: {\n        background: green[100],\n    },\n    normal: {\n        background: lightBlue[100],\n    },\n}));\n\nconst getAction = (hub, user, setDeleteHub, join) => {\n    if (hub.creator.email == user.userInfo.email)\n        return (\n            <IconButton onClick={() => setDeleteHub(hub.id)}>\n                <DeleteIcon />\n            </IconButton>\n        );\n    if (hub.registered)\n        return (\n            <IconButton onClick={() => setDeleteHub(hub.id)}>\n                <BlockIcon />\n            </IconButton>\n        );\n    return (\n        <IconButton\n            onClick={() => {\n                join(hub.id);\n            }}\n        >\n            <AddIcon />\n        </IconButton>\n    );\n};\n\nexport default ({\n    date,\n    hub,\n    loading,\n    time,\n    setDeleteHub,\n    setLoading,\n    setHubs,\n    fetchHubs,\n    currentSubject,\n    detectAlert,\n    userInfo,\n}) => {\n    const classes = useStyles();\n\n    const [openStudent, setOpenStudent] = useState(false);\n\n    const { user } = useContext(UserContext);\n\n    const join = async (id) => {\n        setLoading(true);\n\n        const res = await myFetch(\"/api/student/hub/join\", \"POST\", {\n            id: id,\n        });\n        detectAlert(res, \"Successfully joined.\");\n\n        const subjectHubs = await await fetchHubs(\n            currentSubject,\n            detectAlert,\n            setLoading,\n            userInfo\n        );\n        if (!subjectHubs) return;\n        setHubs(subjectHubs);\n        setLoading(false);\n    };\n    return (\n        <Grow in={!loading} timeout={time}>\n            <Card>\n                <CardHeader\n                    title={hub.summary}\n                    subheader={`${hub.creator.firstName} ${hub.creator.lastName}(${hub.creator.email})`}\n                    className={\n                        hub.registered ? classes.registered : classes.normal\n                    }\n                    avatar={<Avatar>{hub.creator.lastName.charAt(0)}</Avatar>}\n                    action={getAction(hub, user, setDeleteHub, join)}\n                />\n                <CardContent>\n                    <List>\n                        <ListItem\n                            button\n                            onClick={() => setOpenStudent(!openStudent)}\n                        >\n                            <ListItemIcon>\n                                <PeopleIcon />\n                            </ListItemIcon>\n                            <ListItemText primary=\"Members\" />\n                            {openStudent ? <ExpandLess /> : <ExpandMore />}\n                        </ListItem>\n                        <Collapse in={openStudent} timeout=\"auto\" unmountOnExit>\n                            <List component=\"div\" disablePadding>\n                                <div className={classes.scroll}>\n                                    {hub.students.map((student, index) => (\n                                        <ListItem key={index}>\n                                            <ListItemIcon>\n                                                <AccountCircleIcon />\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                primary={`${student.firstName} ${student.lastName}`}\n                                                secondary={student.email}\n                                            />\n                                        </ListItem>\n                                    ))}\n                                </div>\n                            </List>\n                        </Collapse>\n                        <ListItem>\n                            <ListItemIcon>\n                                <AccessAlarmIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                primary={`Let's meet up every ${hub.day} at:`}\n                            />\n                        </ListItem>\n\n                        <ListItem>\n                            <ListItemIcon>\n                                <AutorenewIcon />\n                            </ListItemIcon>\n                            <MuiPickersUtilsProvider utils={MomentUtils}>\n                                <KeyboardTimePicker\n                                    openTo=\"hours\"\n                                    value={hub.startDate}\n                                    onChange={() => {}}\n                                    fullWidth\n                                />\n                            </MuiPickersUtilsProvider>\n                        </ListItem>\n\n                        <ListItem>\n                            <ListItemIcon>\n                                <RoomIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                primary=\"Location\"\n                                secondary={hub.location}\n                            />\n                        </ListItem>\n                    </List>\n                </CardContent>\n            </Card>\n        </Grow>\n    );\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport {\n    Grid,\n    CardContent,\n    withWidth,\n    isWidthUp,\n    Button,\n    Paper,\n    Typography,\n    LinearProgress,\n    Card,\n    CardHeader,\n    List,\n    ListItem,\n    ListItemAvatar,\n    Collapse,\n    ListItemIcon,\n    ListItemText,\n    Avatar,\n    AppBar,\n    Select,\n    Tab,\n    Tabs,\n    MenuItem,\n    Tooltip,\n    Fab,\n    Dialog,\n    DialogTitle,\n    DialogActions,\n    DialogContent,\n    Grow,\n    Slider,\n    Zoom,\n    TextField,\n    DialogContentText,\n} from \"@material-ui/core\";\nimport { makeStyles, withStyles, lighten } from \"@material-ui/core/styles\";\nimport { red, green } from \"@material-ui/core/colors\";\nimport { myFetch, UserContext, StudentContext } from \"../Methods\";\nimport {\n    KeyboardTimePicker,\n    MuiPickersUtilsProvider,\n    KeyboardDateTimePicker,\n} from \"@material-ui/pickers\";\nimport MomentUtils from \"@date-io/moment\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nimport RoomIcon from \"@material-ui/icons/Room\";\n\nimport AutorenewIcon from \"@material-ui/icons/Autorenew\";\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\n\nimport DraftsIcon from \"@material-ui/icons/Drafts\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\n\nimport SchoolIcon from \"@material-ui/icons/School\";\nimport ScheduleIcon from \"@material-ui/icons/Schedule\";\nimport GroupIcon from \"@material-ui/icons/GroupAddTwoTone\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport AddIcon from \"@material-ui/icons/PlaylistAdd\";\nimport CreateIcon from \"@material-ui/icons/Add\";\n\nimport HubCard from \"./HubCard\";\nimport { Create } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        maxWidth: \"100%\",\n        marginTop: theme.spacing(10),\n    },\n    hub: {\n        marginTop: theme.spacing(5),\n    },\n    fab: {\n        position: \"fixed\",\n        bottom: theme.spacing(1) * 10,\n        right: theme.spacing(1) * 8,\n    },\n    icon: {\n        margin: \"auto\",\n    },\n}));\n\nconst marks = [\n    {\n        value: 0,\n        label: \"0 Minutes\",\n    },\n    {\n        value: 60,\n        label: \"1 hour\",\n    },\n    {\n        value: 120,\n        label: \"2 hours\",\n    },\n    {\n        value: 240,\n        label: \"4 hours\",\n    },\n];\n\nexport default ({\n    open,\n    setOpen,\n    setLoading,\n    subjects,\n    fetchHubs,\n    userInfo,\n    setAlert,\n    detectAlert,\n    setHubs,\n    currentSubject,\n}) => {\n    const classes = useStyles();\n    const [subjectCode, setSubjectCode] = useState(subjects[0]);\n    const [startDate, setStartDate] = useState(new Date());\n    const [location, setLocation] = useState(\"\");\n    const [duration, setDuration] = useState(15);\n    const [summary, setSummary] = useState(\"\");\n    const [day, setDay] = useState(\"Monday\");\n\n    const create = async () => {\n        setLoading(true);\n        setOpen(false);\n        if (!subjectCode || !startDate || !subjectCode || location === \"\") {\n            setAlert({ status: \"warning\", message: \"Insufficient Input.\" });\n            return;\n        }\n        const body = {\n            subjectCode: subjectCode,\n            startDate: startDate,\n            duration: duration,\n            location: location,\n            day: day,\n            summary: summary,\n        };\n        const res = await myFetch(\"/api/student/hub/create\", \"POST\", body);\n        detectAlert(res, \"Successfully created.\");\n        const subjectHubs = await await fetchHubs(\n            currentSubject,\n            detectAlert,\n            setLoading,\n            userInfo\n        );\n        if (!subjectHubs) return;\n        setHubs(subjectHubs);\n        setLoading(false);\n    };\n\n    return (\n        <Dialog\n            open={open}\n            onClose={() => {\n                setOpen(false);\n            }}\n            aria-labelledby=\"form-dialog-title\"\n            fullWidth\n        >\n            <DialogTitle id=\"form-dialog-title\">Create a study hub</DialogTitle>\n            <DialogContent dividers>\n                <Grid container>\n                    <Grid container>\n                        <Grid item xs={1}>\n                            <GroupIcon className={classes.icon} />\n                        </Grid>\n                        <Grid item xs={11}>\n                            <TextField\n                                label=\"Name of your hub\"\n                                multiline\n                                fullWidth\n                                rowsMax={2}\n                                value={summary}\n                                onChange={(e) => {\n                                    setSummary(e.target.value);\n                                }}\n                                variant=\"outlined\"\n                            />\n                            <br />\n                            <br />\n                        </Grid>\n                        <Grid item xs={1}>\n                            <SchoolIcon className={classes.icon} />\n                        </Grid>\n                        <Grid item xs={11}>\n                            <Autocomplete\n                                id=\"addSubject\"\n                                options={subjects}\n                                getOptionLabel={(option) => option}\n                                value={subjectCode}\n                                onChange={(event, newValue) => {\n                                    setSubjectCode(newValue);\n                                }}\n                                renderInput={(params) => {\n                                    return (\n                                        <TextField\n                                            {...params}\n                                            label=\"Please choose a subject\"\n                                            variant=\"filled\"\n                                            required\n                                        />\n                                    );\n                                }}\n                            />\n                            <br />\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={1}>\n                        <ScheduleIcon className={classes.icon} />\n                    </Grid>\n                    <Grid item xs={11}>\n                        <Autocomplete\n                            options={[\n                                \"Monday\",\n                                \"Tuesday\",\n                                \"Wednesday\",\n                                \"Thursday\",\n                                \"Friday\",\n                                \"Saturday\",\n                                \"Sunday\",\n                            ]}\n                            getOptionLabel={(option) => option}\n                            value={day}\n                            onChange={(event, newValue) => {\n                                setDay(day);\n                            }}\n                            renderInput={(params) => {\n                                return (\n                                    <TextField\n                                        {...params}\n                                        label=\"Please choose a day\"\n                                        variant=\"filled\"\n                                        required\n                                    />\n                                );\n                            }}\n                        />\n                        <br />\n                    </Grid>\n                    <Grid item xs={1}>\n                        <ScheduleIcon className={classes.icon} />\n                    </Grid>\n                    <Grid item xs={11}>\n                        <MuiPickersUtilsProvider utils={MomentUtils}>\n                            <KeyboardTimePicker\n                                label=\"Time\"\n                                value={startDate}\n                                onChange={(date) => {\n                                    setStartDate(date);\n                                }}\n                                fullWidth\n                                required\n                            />\n                        </MuiPickersUtilsProvider>\n                        <br />\n                        <br />\n                    </Grid>\n                    <Grid item xs={1}>\n                        <br />\n                        <ScheduleIcon className={classes.icon} />\n                    </Grid>\n                    <Grid item xs={11}>\n                        <DialogContentText>\n                            {\"Duration: \"}\n                            {duration}\n                            {\" Minutes\"}\n                        </DialogContentText>\n                        <br />\n                        <Slider\n                            valueLabelDisplay=\"auto\"\n                            marks={marks}\n                            aria-labelledby=\"discrete-slider\"\n                            getAriaValueText={(value) => `${value} Minutes`}\n                            value={duration}\n                            onChange={(e, newValue) => {\n                                setDuration(newValue);\n                            }}\n                            step={15}\n                            max={300}\n                        />\n                        <br />\n                        <br />\n                    </Grid>\n                    <Grid item xs={1}>\n                        <RoomIcon className={classes.icon} />\n                    </Grid>\n                    <Grid item xs={11}>\n                        <TextField\n                            label=\"Location\"\n                            variant=\"filled\"\n                            required\n                            value={location}\n                            onChange={(e) => {\n                                setLocation(e.target.value);\n                            }}\n                            fullWidth\n                        />\n                        <DialogContentText></DialogContentText>\n                    </Grid>\n                </Grid>\n            </DialogContent>\n            <DialogActions>\n                <Button\n                    fullWidth\n                    onClick={() => {\n                        setOpen(false);\n                    }}\n                >\n                    Cancel\n                </Button>\n                <Button\n                    fullWidth\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={create}\n                >\n                    Create\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n    Grid,\r\n    Button,\r\n    Card,\r\n    CardHeader,\r\n    AppBar,\r\n    Tab,\r\n    Tabs,\r\n    Tooltip,\r\n    Fab,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogActions,\r\n    DialogContent,\r\n    Zoom,\r\n    ButtonGroup,\r\n} from \"@material-ui/core\";\r\nimport withWidth, { isWidthUp, isWidthDown } from \"@material-ui/core/withWidth\";\r\nimport { makeStyles, withStyles, lighten } from \"@material-ui/core/styles\";\r\nimport { red, green, grey } from \"@material-ui/core/colors\";\r\nimport { myFetch, UserContext, StudentContext } from \"../Methods\";\r\nimport CreateIcon from \"@material-ui/icons/Add\";\r\n\r\nimport HubCard from \"./HubCard\";\r\nimport { Create } from \"@material-ui/icons\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\nimport CreateDialog from \"./CreateDialog\";\r\n\r\nimport legend from \"./legend.svg\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        maxWidth: \"100%\",\r\n        marginTop: theme.spacing(10),\r\n    },\r\n    hub: {\r\n        marginTop: theme.spacing(5),\r\n    },\r\n    fab: {\r\n        [theme.breakpoints.down(\"lg\")]: {\r\n            marginTop: theme.spacing(5),\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            position: \"fixed\",\r\n            bottom: theme.spacing(1) * 10,\r\n            right: theme.spacing(1) * 8,\r\n        },\r\n    },\r\n    icon: {\r\n        margin: \"auto\",\r\n    },\r\n    delete: {\r\n        textTransform: \"none\",\r\n        color: theme.palette.getContrastText(grey[700]),\r\n        background: grey[700],\r\n        \"&:hover\": {\r\n            color: theme.palette.getContrastText(grey[900]),\r\n            background: grey[900],\r\n        },\r\n    },\r\n\r\n    media: {\r\n        height: \"33VH\",\r\n    },\r\n    legend: {\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: theme.spacing(2),\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            minWidth: \"25%\",\r\n            minHeight: \"25%\",\r\n        },\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            minWidth: \"100%\",\r\n            minHeight: \"100%\",\r\n        },\r\n    },\r\n}));\r\n\r\n//Fetch the appointments of the current subject.\r\nconst fetchHubs = async (currentSubject, detectAlert, setLoading, userInfo) => {\r\n    setLoading(true);\r\n    if (currentSubject == 0) {\r\n        const res = await myFetch(\"/api/student/hub/registered\", \"GET\");\r\n        return res.subjectHubs;\r\n    }\r\n    const body = {\r\n        subjectCode: userInfo.subjects[currentSubject - 1],\r\n    };\r\n    const res = await myFetch(\"/api/student/hub/all\", \"POST\", body);\r\n    detectAlert(res);\r\n    return res.subjectHubs;\r\n};\r\n\r\nconst DeleteDialog = ({\r\n    leaveHub,\r\n    setDeleteHub,\r\n    classes,\r\n    setLoading,\r\n    setAlert,\r\n    detectAlert,\r\n    setHubs,\r\n    currentSubject,\r\n    userInfo,\r\n}) => {\r\n    const deleteing = async () => {\r\n        setLoading(true);\r\n        const body = {\r\n            id: leaveHub,\r\n        };\r\n        const res = await myFetch(\"/api/student/hub/leave\", \"POST\", body);\r\n        detectAlert(res, \"Successfully left.\");\r\n        const subjectHubs = await fetchHubs(\r\n            currentSubject,\r\n            detectAlert,\r\n            setLoading,\r\n            userInfo\r\n        );\r\n        if (!subjectHubs) return;\r\n        setHubs(subjectHubs);\r\n        setLoading(false);\r\n    };\r\n    return (\r\n        <Dialog\r\n            open={leaveHub !== \"\"}\r\n            onClose={() => setDeleteHub(\"\")}\r\n            fullWidth\r\n        >\r\n            <DialogTitle>Leave the StudyHub?</DialogTitle>\r\n            <DialogContent>Do you want to leave this study hub?</DialogContent>\r\n            <DialogActions>\r\n                <ButtonGroup fullWidth>\r\n                    <Button\r\n                        fullWidth\r\n                        style={{\r\n                            textTransform: \"none\",\r\n                        }}\r\n                        onClick={() => {\r\n                            setDeleteHub(\"\");\r\n                        }}\r\n                    >\r\n                        No, thanks.\r\n                    </Button>\r\n                    <Button\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        className={classes.delete}\r\n                        onClick={() => {\r\n                            setDeleteHub(\"\");\r\n                            deleteing();\r\n                        }}\r\n                    >\r\n                        Yes, I do.\r\n                    </Button>\r\n                </ButtonGroup>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default withWidth()(({ width }) => {\r\n    const classes = useStyles();\r\n\r\n    const { user, detectAlert, setAlert } = useContext(UserContext);\r\n\r\n    const [date, changeDate] = useState(new Date());\r\n\r\n    const { type, userInfo } = user;\r\n    const { firstName, lastName } = userInfo;\r\n\r\n    const [currentSubject, setCurrentSubject] = useState(0);\r\n    const [loading, setLoading] = useState(true);\r\n    const [hubs, setHubs] = useState([]);\r\n    const [leaveHub, setDeleteHub] = useState(\"\");\r\n    const [openCreate, setOpenCreate] = useState(false);\r\n    const [openDelete, setOpenDelete] = useState(false);\r\n\r\n    const [sortBy, setSortBy] = useState(\"time\");\r\n    const largeScreen = isWidthUp(\"lg\", width);\r\n\r\n    //Updating consultations Information.\r\n    useEffect(() => {\r\n        fetchHubs(currentSubject, detectAlert, setLoading, userInfo).then(\r\n            (subjectHubs) => {\r\n                if (!subjectHubs) return;\r\n                setHubs(subjectHubs);\r\n                setLoading(false);\r\n            }\r\n        );\r\n    }, [alert.status, currentSubject]);\r\n\r\n    return (\r\n        <div>\r\n            <CreateDialog\r\n                open={openCreate}\r\n                setOpen={setOpenCreate}\r\n                setLoading={setLoading}\r\n                subjects={userInfo.subjects}\r\n                fetchHubs={fetchHubs}\r\n                setAlert={setAlert}\r\n                detectAlert={detectAlert}\r\n                setHubs={setHubs}\r\n                userInfo={userInfo}\r\n                currentSubject={currentSubject}\r\n            />\r\n            <DeleteDialog\r\n                setAlert={setAlert}\r\n                detectAlert={detectAlert}\r\n                setHubs={setHubs}\r\n                setLoading={setLoading}\r\n                leaveHub={leaveHub}\r\n                setDeleteHub={setDeleteHub}\r\n                classes={classes}\r\n                currentSubject={currentSubject}\r\n                detectAlert={detectAlert}\r\n                userInfo={userInfo}\r\n            />\r\n\r\n            <AppBar position=\"relative\" color=\"default\">\r\n                <Grid container justify=\"space-between\">\r\n                    <Grid item xs={12}>\r\n                        <Tabs\r\n                            value={currentSubject}\r\n                            indicatorColor=\"primary\"\r\n                            textColor=\"primary\"\r\n                            onChange={(event, newValue) => {\r\n                                setCurrentSubject(newValue);\r\n                                if (newValue == currentSubject)\r\n                                    setCurrentSubject(newValue);\r\n                            }}\r\n                            variant=\"scrollable\"\r\n                            scrollButtons=\"auto\"\r\n                        >\r\n                            <Tab label=\"Registered\" />\r\n                            {user.userInfo.subjects.map((subject) => (\r\n                                <Tab label={subject} key={subject} />\r\n                            ))}\r\n                        </Tabs>\r\n                    </Grid>\r\n                </Grid>\r\n            </AppBar>\r\n            <Grid container justify=\"flex-end\">\r\n                <img className={classes.legend} src={legend} alt=\"legend\" />\r\n            </Grid>\r\n\r\n            <Grid container justify=\"center\">\r\n                <Tooltip title=\"Create a study hub\" aria-label=\"add\">\r\n                    <Fab\r\n                        color=\"primary\"\r\n                        size=\"large\"\r\n                        className={classes.fab}\r\n                        onClick={() => {\r\n                            setOpenCreate(true);\r\n                        }}\r\n                    >\r\n                        <CreateIcon />\r\n                    </Fab>\r\n                </Tooltip>\r\n            </Grid>\r\n\r\n            <Grid container justify=\"space-around\" alignItems=\"center\">\r\n                {!loading\r\n                    ? hubs.map((hub, index) => (\r\n                          //stduy hubs cards...\r\n                          <Grid\r\n                              key={index}\r\n                              item\r\n                              xs={largeScreen ? 5 : 12}\r\n                              className={classes.hub}\r\n                          >\r\n                              <HubCard\r\n                                  hub={hub}\r\n                                  loading={loading}\r\n                                  time={(index + 1) * 200}\r\n                                  setDeleteHub={setDeleteHub}\r\n                                  setLoading={setLoading}\r\n                                  setHubs={setHubs}\r\n                                  fetchHubs={fetchHubs}\r\n                                  currentSubject={currentSubject}\r\n                                  detectAlert={detectAlert}\r\n                                  userInfo={userInfo}\r\n                              />\r\n                          </Grid>\r\n                      ))\r\n                    : [0, 1, 2, 3].map((index) => (\r\n                          //Loading skeletion....\r\n                          <Grid\r\n                              key={index}\r\n                              item\r\n                              xs={largeScreen ? 5 : 12}\r\n                              className={classes.hub}\r\n                          >\r\n                              <Card className={classes.card}>\r\n                                  <CardHeader\r\n                                      avatar={\r\n                                          <Skeleton\r\n                                              animation=\"wave\"\r\n                                              variant=\"circle\"\r\n                                              width={40}\r\n                                              height={40}\r\n                                          />\r\n                                      }\r\n                                      title={\r\n                                          <Skeleton\r\n                                              animation=\"wave\"\r\n                                              height={10}\r\n                                              width=\"80%\"\r\n                                              style={{ marginBottom: 6 }}\r\n                                          />\r\n                                      }\r\n                                      subheader={\r\n                                          <Skeleton\r\n                                              animation=\"wave\"\r\n                                              height={10}\r\n                                              width=\"40%\"\r\n                                          />\r\n                                      }\r\n                                  />\r\n\r\n                                  <Skeleton\r\n                                      animation=\"wave\"\r\n                                      variant=\"rect\"\r\n                                      className={classes.media}\r\n                                  />\r\n                              </Card>\r\n                          </Grid>\r\n                      ))}\r\n            </Grid>\r\n        </div>\r\n    );\r\n});\r\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { UserContext, myFetch } from \"../Methods\";\nimport Layout from \"../Navigation/Layout\";\nimport { useHistory } from \"react-router-dom\";\nimport Student from \"./Student\";\nimport { useRadioGroup } from \"@material-ui/core\";\n\nexport default () => {\n    const history = useHistory();\n    //Set the routes.\n    const {\n        setSelectedRoute,\n        closeAlert,\n        detectAlert,\n        loadingRoute,\n        setLoadingRoute,\n        user,\n        fetchUser,\n    } = useContext(UserContext);\n\n    //Loading user information.\n    useEffect(() => {\n        setSelectedRoute(\"hubs\");\n        fetchUser().then((user) => {\n            if (user.type !== \"student\") {\n                history.push(\"/Settings\");\n            }\n\n            setLoadingRoute(false);\n        });\n    }, []);\n\n    if (loadingRoute || !user.type) return <Layout />;\n\n    return <Layout content={<Student />} type={user.type} />;\n};\n","import React, { useContext, useEffect } from \"react\";\nimport {\n    Grid,\n    CardContent,\n    withWidth,\n    isWidthUp,\n    Button,\n    Paper,\n    Typography,\n    LinearProgress,\n} from \"@material-ui/core\";\nimport { makeStyles, withStyles, lighten } from \"@material-ui/core/styles\";\nimport { UserContext } from \"../Methods\";\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        maxWidth: \"100%\",\n        marginTop: theme.spacing(10),\n    },\n}));\n\nexport default () => {\n    const classes = useStyles();\n    const { user } = useContext(UserContext);\n    console.log(user);\n    const { type, userInfo } = user;\n    const { firstName, lastName } = userInfo;\n\n    return (\n        <h1>\n            Welcome {type} {firstName} {lastName}\n        </h1>\n    );\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { UserContext, myFetch } from \"../Methods\";\nimport Layout from \"../Navigation/Layout\";\nimport { useHistory } from \"react-router-dom\";\nimport Staff from \"./Staff\";\n\nexport default () => {\n    const history = useHistory();\n    //Set the routes.\n    const {\n        setSelectedRoute,\n        closeAlert,\n        detectAlert,\n        loadingRoute,\n        setLoadingRoute,\n        fetchUser,\n        user,\n    } = useContext(UserContext);\n\n    //Loading user information.\n    useEffect(() => {\n        setSelectedRoute(\"analytic\");\n        fetchUser().then(setLoadingRoute(false));\n    }, []);\n\n    if (loadingRoute || !user.type) return <Layout />;\n\n    return <Layout content={<Staff />} type={user.type} />;\n};\n","import React from \"react\";\r\n\r\nimport {\r\n    Grid,\r\n    Typography,\r\n    Card,\r\n    CardContent,\r\n    CardHeader,\r\n    Divider,\r\n    Paper,\r\n    Container,\r\n    Grow,\r\n} from \"@material-ui/core\";\r\n\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport withWidth, { isWidthUp, isWidthDown } from \"@material-ui/core/withWidth\";\r\n\r\nimport AppBar from \"../Navigation/AppBar\";\r\nimport aboutImg from \"./img/about.png\";\r\nimport background from \"./img/background.svg\";\r\nimport { cyan } from \"@material-ui/core/colors\";\r\nimport Login from \"../Login/login\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundImage:\r\n            \"linear-gradient(45deg, #42a5f5 0%, #c8e6c9 25%, #fad0ba 50%, #fff59d 100%)\",\r\n\r\n        minHeight: \"110VH\",\r\n    },\r\n    image: {\r\n        width: \"100%\",\r\n        marginTop: theme.spacing(20),\r\n    },\r\n    paper: {\r\n        borderRadius: 30,\r\n        [theme.breakpoints.down(\"md\")]: {\r\n            marginTop: theme.spacing(10),\r\n        },\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginTop: theme.spacing(20),\r\n        },\r\n        background: \"#fffde7\",\r\n    },\r\n\r\n    card: {\r\n        borderRadius: 30,\r\n\r\n        background: \"inherit\",\r\n        borderColor: cyan,\r\n        border: \"solid  #4dd0e1 5px\",\r\n        marginTop: theme.spacing(10),\r\n    },\r\n}));\r\n\r\nexport default withWidth()(({ width }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const largeScreen = isWidthUp(\"md\", width);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar aboutBar />\r\n            <Login />\r\n            <Container maxWidth=\"md\">\r\n                <Grid container spacing={4} alignItems=\"center\">\r\n                    <Grow in timeout={1000}>\r\n                        <Grid item xs={largeScreen ? 6 : 12}>\r\n                            <img\r\n                                src={aboutImg}\r\n                                alt=\"about\"\r\n                                className={classes.image}\r\n                            />\r\n                        </Grid>\r\n                    </Grow>\r\n                    <Grid item xs={largeScreen ? 6 : 12}>\r\n                        <Grow in timeout={1200}>\r\n                            <Paper className={classes.paper}>\r\n                                <CardHeader\r\n                                    title={\r\n                                        <Typography\r\n                                            align=\"center\"\r\n                                            style={\r\n                                                largeScreen\r\n                                                    ? {\r\n                                                          fontSize: \"30px\",\r\n                                                          color: \"#37474f\",\r\n                                                          fontWeight: 900,\r\n                                                          fontFamily: \"Arial\",\r\n                                                          textTransform: \"none\",\r\n                                                      }\r\n                                                    : {\r\n                                                          fontSize: \"25px\",\r\n                                                          color: \"#37474f\",\r\n                                                          fontWeight: 900,\r\n                                                          fontFamily: \"Arial\",\r\n                                                          textTransform: \"none\",\r\n                                                      }\r\n                                            }\r\n                                        >\r\n                                            Who is MeeTute?\r\n                                        </Typography>\r\n                                    }\r\n                                ></CardHeader>\r\n                                <Divider\r\n                                    style={{ width: \"80%\", margin: \"auto\" }}\r\n                                />\r\n                                <CardContent>\r\n                                    <Typography\r\n                                        align=\"center\"\r\n                                        style={\r\n                                            largeScreen\r\n                                                ? {\r\n                                                      fontSize: \"20px\",\r\n                                                      color: \"#37474f\",\r\n                                                      fontWeight: 900,\r\n                                                      fontFamily: \"Arial\",\r\n                                                      textTransform: \"none\",\r\n                                                  }\r\n                                                : {\r\n                                                      fontSize: \"15px\",\r\n                                                      color: \"#37474f\",\r\n                                                      fontWeight: 900,\r\n                                                      fontFamily: \"Arial\",\r\n                                                      textTransform: \"none\",\r\n                                                  }\r\n                                        }\r\n                                    >\r\n                                        {\" \"}\r\n                                        Our mission is to optimise your time\r\n                                        management for a better working life.\r\n                                        <br />\r\n                                        <br />\r\n                                    </Typography>\r\n\r\n                                    <Typography\r\n                                        style={\r\n                                            largeScreen\r\n                                                ? {\r\n                                                      fontSize: \"15px\",\r\n                                                      color: \"#37474f\",\r\n                                                      fontWeight: 600,\r\n                                                      fontFamily: \"Arial\",\r\n                                                      textTransform: \"none\",\r\n                                                  }\r\n                                                : {\r\n                                                      fontSize: \"13px\",\r\n                                                      color: \"#37474f\",\r\n                                                      fontWeight: 600,\r\n                                                      fontFamily: \"Arial\",\r\n                                                      textTransform: \"none\",\r\n                                                  }\r\n                                        }\r\n                                    >\r\n                                        {\" \"}\r\n                                        MeeTute identifies the problem of the\r\n                                        underutilisation of consultation hours\r\n                                        during off-peak times, potentially\r\n                                        leading to a negative impact on the work\r\n                                        efficiency of our teaching staff. In\r\n                                        addition, as students, we truly\r\n                                        understand the challenges of getting the\r\n                                        help we need from teaching staff during\r\n                                        assignment or exam seasons. This is an\r\n                                        issue that affects over 48,000 students\r\n                                        and staff, and probably the wider\r\n                                        community.\r\n                                        <br />\r\n                                        <br />\r\n                                        MeeTute wants to implement a platform\r\n                                        for staff to better manage their\r\n                                        consultation hours and for students to\r\n                                        easily book private appointments with\r\n                                        their lecturers/tutors and form study\r\n                                        groups with their fellow peers. The\r\n                                        ultimate goal of our solution is to\r\n                                        better connect students with teaching\r\n                                        staff as well as fellow classmates.\r\n                                        <br />\r\n                                        <br />\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </Paper>\r\n                        </Grow>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </div>\r\n    );\r\n});\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport Signup from \"./component/Signup/Signup\";\r\nimport Cookies from \"js-cookie\";\r\nimport Home from \"./component/Home/home\";\r\n\r\nimport Appointment from \"./component/Appointment/Appointment\";\r\nimport Consultation from \"./component/Consultation/Consultation\";\r\nimport Setting from \"./component/Setting/Setting\";\r\nimport Hub from \"./component/StudyHub/Hub\";\r\nimport Analytic from \"./component/Analytic/Analytic\";\r\nimport About from \"./component/About/About\";\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport { AuthApi, UserContext, myFetch } from \"./component/Methods\";\r\n\r\nconst HomeRoute = ({ component: Component, ...rest }) => {\r\n  const { auth } = useContext(AuthApi);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={() => (!auth ? <Component /> : <Redirect to=\"/Settings\" />)}\r\n    />\r\n  );\r\n};\r\n\r\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\r\n  const { auth } = useContext(AuthApi);\r\n  let checkAuth = false;\r\n\r\n  const cookie = Cookies.get(\"meetute\");\r\n  if (cookie) {\r\n    checkAuth = true;\r\n  }\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={() => (checkAuth || auth ? <Component /> : <Redirect to=\"/\" />)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default () => {\r\n  //Authentication state...\r\n  const [auth, setAuth] = useState(false);\r\n  const [loginEl, setLoginEl] = useState(null);\r\n  const [openLogin, setOpenLogin] = React.useState(false);\r\n\r\n  //Loading routes context...\r\n  const [selectedRoute, setSelectedRoute] = useState(\"settings\");\r\n  const [loadingRoute, setLoadingRoute] = useState(true);\r\n\r\n  //user information...\r\n  const [user, setUser] = useState({});\r\n\r\n  //Alerting responses from back end (eg. back end error)...\r\n  const [alert, setAlert] = useState({ status: \"\", message: \"\" });\r\n  const closeAlert = () => setAlert({ status: \"\", message: \"\" });\r\n  const detectAlert = (res, succeed, info) => {\r\n    if (res.success) {\r\n      if (succeed) {\r\n        setAlert({\r\n          status: \"success\",\r\n          message: succeed,\r\n        });\r\n      } else if (info) {\r\n        setAlert({\r\n          status: \"info\",\r\n          message: info,\r\n        });\r\n      }\r\n    } else {\r\n      let message = \"Unknown error.\";\r\n      if (res.error) message = res.error;\r\n      else if (res.message) message = res.message;\r\n\r\n      setAlert({\r\n        status: \"error\",\r\n        message: message,\r\n      });\r\n    }\r\n  };\r\n\r\n  //Loading user information.\r\n  const fetchUser = async () => {\r\n    setLoadingRoute(true);\r\n    const res = await myFetch(\"/api/shared/users/info\", \"GET\");\r\n    detectAlert(res);\r\n    setUser(res);\r\n    return res;\r\n  };\r\n\r\n  //Make authentication.\r\n  useEffect(() => {\r\n    const cookie = Cookies.get(\"meetute\");\r\n    if (cookie) setAuth(true);\r\n  }, [auth]);\r\n\r\n  return (\r\n    <AuthApi.Provider\r\n      value={{\r\n        auth,\r\n        setAuth,\r\n        loginEl,\r\n        setLoginEl,\r\n        openLogin,\r\n        setOpenLogin,\r\n      }}\r\n    >\r\n      <UserContext.Provider\r\n        value={{\r\n          selectedRoute,\r\n          setSelectedRoute,\r\n          alert,\r\n          detectAlert,\r\n          closeAlert,\r\n          setAlert,\r\n          loadingRoute,\r\n          setLoadingRoute,\r\n          fetchUser,\r\n          user,\r\n          setUser,\r\n        }}\r\n      >\r\n        <Router>\r\n          <Switch>\r\n            <ProtectedRoute\r\n              exact\r\n              path=\"/Consultations\"\r\n              component={Consultation}\r\n            />\r\n            <ProtectedRoute exact path=\"/Hubs\" component={Hub} />\r\n            <ProtectedRoute exact path=\"/Analytic\" component={Analytic} />\r\n            <ProtectedRoute\r\n              exact\r\n              path=\"/Appointments\"\r\n              component={Appointment}\r\n            />\r\n            <ProtectedRoute exact path=\"/Settings\" component={Setting} />\r\n            <HomeRoute exact path=\"/\" component={Home} />\r\n            <Route exact path=\"/about\" component={About} />\r\n            <Route exact path=\"/signup\" component={Signup} />\r\n          </Switch>\r\n        </Router>\r\n      </UserContext.Provider>\r\n    </AuthApi.Provider>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport {\r\n    MuiThemeProvider,\r\n    createMuiTheme,\r\n    responsiveFontSizes,\r\n} from \"@material-ui/core\";\r\nimport { cyan, lightGreen } from \"@material-ui/core/colors\";\r\n\r\nlet theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: cyan[800],\r\n            light: cyan[50],\r\n            dark: cyan[900],\r\n        },\r\n        secondary: {\r\n            main: lightGreen.A200,\r\n            light: lightGreen[100],\r\n            dark: lightGreen[400],\r\n        },\r\n    },\r\n    typography: {\r\n        fontFamily: \"sans-serif\",\r\n        h1: {\r\n            fontWeight: 900,\r\n        },\r\n        h2: {\r\n            fontWeight: 700,\r\n        },\r\n        h3: {\r\n            fontWeight: 900,\r\n        },\r\n        h4: {\r\n            fontWeight: 900,\r\n            fontSize: 30,\r\n        },\r\n        h5: {\r\n            fontWeight: 500,\r\n        },\r\n\r\n        subtitle1: {\r\n            fontSize: 12,\r\n        },\r\n        button: {\r\n            fontWeight: 900,\r\n            fontSize: \"20px\",\r\n        },\r\n    },\r\n    shape: {},\r\n    background: \"linear-gradient(to right,#ffffff 0%, #b9e2fa 100%)\",\r\n});\r\n\r\ntheme = responsiveFontSizes(theme);\r\n\r\nReactDOM.render(\r\n    <MuiThemeProvider theme={theme}>\r\n        <App />\r\n    </MuiThemeProvider>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}
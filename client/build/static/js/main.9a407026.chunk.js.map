{"version":3,"sources":["component/Navigation/logo.png","component/Home/img/chat.png","component/Home/img/f1.png","component/Home/img/f2.png","component/Home/img/f3.png","component/Home/img/f4.png","component/About/img/about.png","component/Methods.js","component/Navigation/AppBar.jsx","component/Login/MyField.jsx","component/Login/loginForm.jsx","component/Login/login.jsx","component/Signup/stepper.jsx","component/Signup/subjects.jsx","component/Signup/stepCard.jsx","component/Signup/signupForm.jsx","component/Home/waveBorder.jsx","component/Signup/Signup.jsx","component/Home/header.jsx","component/Home/featureCard.jsx","component/Home/stepper.jsx","component/Home/features.jsx","component/Home/home.jsx","component/Test/Test.jsx","component/Test/StaffForm.jsx","component/Test/Test2.jsx","component/Test/Test3.jsx","component/Test/Test4.jsx","component/Navigation/Loading.jsx","component/Navigation/Layout.jsx","component/Timetable.jsx","component/Appointment/StudentHeader.jsx","component/Appointment/StaffHeader.jsx","component/Appointment/StudentQuery.jsx","component/Appointment/TimetableBar.jsx","component/Appointment/Staff.jsx","component/Appointment/StudentContent.jsx","component/Appointment/Student.jsx","component/Appointment/Appointment.jsx","component/Consultation/ConsultDialog.jsx","component/Consultation/StudentHeader.jsx","component/Consultation/StaffHeader.jsx","component/Consultation/StaffContent.jsx","component/Consultation/Staff.jsx","component/Consultation/StudentContent.jsx","component/Consultation/Student.jsx","component/Consultation/Consultation.jsx","component/Setting/Add.jsx","component/Setting/Student.jsx","component/Setting/Create.jsx","component/Setting/Staff.jsx","component/Setting/Setting.jsx","component/StudyHub/HubCard.jsx","component/StudyHub/CreateDialog.jsx","component/StudyHub/Student.jsx","component/StudyHub/Hub.jsx","component/Analytic/Staff.jsx","component/Analytic/Analytic.jsx","component/About/About.jsx","App.js","index.js"],"names":["module","exports","myFetch","url","method","body","a","fetch","JSON","stringify","headers","Cookies","get","res","json","msg","AuthApi","createContext","UserContext","StaffContext","StudentContext","useStyles","makeStyles","theme","logo","maxHeight","link","marginLeft","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","background","palette","default","appBarShift","width","enteringScreen","menuButton","marginRight","hide","display","menuItem","fontWeight","noDecoration","textDecoration","spacing","openDrawer","handleDrawerOpen","logOut","classes","useContext","loginEl","setLoginEl","auth","setOpenLogin","setLoadingRoute","history","useHistory","location","useLocation","handleClose","open","Boolean","id","undefined","AppBar","position","className","clsx","Toolbar","IconButton","aria-label","onClick","edge","Button","pathname","push","console","log","src","logoImage","alt","to","style","fontSize","color","fontFamily","textTransform","event","currentTarget","Avatar","Menu","anchorEl","onClose","keepMounted","MenuItem","label","required","variant","setState","type","error","TextField","margin","fullWidth","autoComplete","onChange","e","target","value","paper","flexDirection","alignItems","height","marginTop","avatar","form","submit","signUpButton","flexGrow","text","cancel","warn","close","right","top","grey","closeLoginWindow","useState","email","setEmail","password","setPassword","userType","setUserType","setError","setAuth","login","setUserInfo","preventDefault","success","set","token","setTimeout","Paper","elevation","Grow","in","Card","Alert","severity","onSubmit","MyField","FormControl","component","FormLabel","RadioGroup","row","name","FormControlLabel","control","Radio","size","root","maxWidth","openLogin","Dialog","aria-labelledby","Grid","container","justify","item","xs","Close","ColorlibConnector","withStyles","alternativeLabel","line","border","backgroundColor","borderRadius","completed","backgroundImage","StepConnector","useColorlibStepIconStyles","justifyContent","active","boxShadow","ColorlibStepIcon","props","icons","1","2","3","4","5","String","icon","activeStep","getSteps","steps","Stepper","connector","map","index","Step","key","StepLabel","StepIconComponent","setChosenSubjects","allSubjects","Autocomplete","multiple","options","getOptionLabel","option","defaultValue","renderTags","getTagProps","Chip","renderInput","params","buttons","staff","minHeight","student","largeIcon","SchoolIcon","handleNext","handleBack","cardID","handleSubmit","setFirstName","setLasName","setConformPassword","status","Collapse","timeout","Container","Typography","align","newValue","getField","Fab","disabled","getButton","stepper","button","actionsContainer","marginBottom","resetContainer","padding","firstName","lastName","confirmPassword","setStatus","chosenSubjects","React","setActiveStep","loading","setLoading","setAllSubjects","useEffect","subjectList","fetchSubjects","includes","prevActiveStep","HandleStatus","signUp","subjects","title","waves","from","transform","parallax","animation","animationDelay","animationNegativeDelay","Math","random","lowerColor","upperColor","rest","xmlns","xlink","viewBox","preserveAspectRatio","shapeRendering","d","href","x","y","fill","c1","c2","secondary","light","useTheme","image","images","about","getStarted","minWidth","fixed","direction","md","startIcon","headerImage","cover","card","headline","maxSteps","CardContent","content","features","nonLinear","step","StepButton","AutoPlaySwipeableViews","autoPlay","SwipeableViews","f1","f2","f3","f4","length","axis","onChangeIndex","enableMouseEvents","swipe","interval","element","primary","appointments","startDate","Date","endDate","AppointmentFormContainerBasic","state","appointmentChanges","getAppointmentData","appointmentData","getAppointmentChanges","changeAppointment","bind","commitAppointment","field","changes","nextChanges","this","commitChanges","appointment","visible","visibleChange","cancelAppointment","onHide","displayAppointmentData","isNewAppointment","applyChanges","textEditorProps","change","toUpperCase","slice","textField","pickerEditorProps","picker","ampm","date","toDate","inputVariant","format","onError","setEditOpen","setEditingAppointment","Overlay","fullSize","Header","showCloseButton","showOpenButton","onOpenButtonClick","header","closeButton","wrapper","utils","MomentUtils","multiline","rows","buttonGroup","PureComponent","AppointmentFormContainer","paddingBottom","paddingTop","overflow","float","Demo","data","currentDate","confirmationVisible","editingFormVisible","deletedAppointmentId","editingAppointment","previousAppointment","addedAppointment","startDayHour","endDayHour","toggleConfirmationVisible","commitDeletedAppointment","toggleEditingFormVisibility","onEditingAppointmentChange","onAddedAppointmentChange","appointmentForm","connectProps","filter","update","added","changed","deleted","startingAddedId","setDeletedAppointmentId","onCommitChanges","showDeleteButton","overlayComponent","onVisibilityChange","cancelDelete","DialogTitle","DialogContent","DialogContentText","DialogActions","addButton","setHours","bottom","setAppointmentChanges","List","ListItem","ListItemIcon","ListItemText","Badge","badgeContent","slotsAvailable","showZero","totalStudent","fab","setData","SetConfirmationVisible","setEditingFormVisible","setPreviousAppointment","setAddedAppointment","setIsNewAppointment","newEditingAppointment","temp","newAddedAppointment","currentAppointment","cellDuration","nextData","BorderLinearProgress","lighten","bar","LinearProgress","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","toolbar","mixins","selectedRoute","alert","closeAlert","setUser","loadingRoute","setOpen","handleRouting","newRoute","handleDrawerClose","remove","CssBaseline","Snackbar","autoHideDuration","message","Drawer","selected","Divider","Loading","ToolbarWithLoading","toolbarRoot","progress","left","children","restProps","Root","resources","fieldName","instances","green","blue","red","amber","setCurrentDate","mainResourceName","viewChange","each","subjectCode","loadSubjectResources","onCurrentDateChange","excludedDays","headerComponent","contentComponent","cyan","teal","lime","rootComponent","action","textCenter","textAlign","backgroundSize","setCancelAppointment","detectAlert","setPendAppointment","pendAppointment","delete","select","skeleton","marks","getDuration","getEndDate","start","end","setMinutes","getMinutes","CreateDialog","staffInfo","comments","toggle","createAppointment","setStartDate","setEndDate","setLocation","setComments","dividers","Slider","valueLabelDisplay","getAriaValueText","max","Send","rowsMax","ButtonGroup","then","userInfo","currentSubject","setCurrentSubject","staffs","setStaffs","setStaffInfo","setAlert","fetchStaffs","staffsInfo","staffId","_id","comment","Select","subject","ListItemAvatar","Skeleton","currentStatus","setCurrentStatus","setMainResourceName","Tabs","indicatorColor","textColor","scrollButtons","Tab","getContrastText","approve","decline","PendDialog","pend","user","reloadUser","fetchAppoint","appoints","formatData","Provider","Fade","TimetableBar","Content","StatusIcon","getCommentTitle","pending","approved","declined","scroll","openComments","setOpenComments","dense","unmountOnExit","disablePadding","mail","getStatusStyle","disableTouchRipple","disableRipple","CancelDialog","StudentQuery","setSelectedRoute","fetchUser","Layout","Student","Staff","SlotSlider","thumb","valueLabel","track","rail","DeleteButton","edit","api","setSubjectCode","slot","setSlot","createTime","editTime","deleteTime","booking","commandButton","createOpen","setCreateOpen","editOpen","consultations","fetchConsult","consults","consultation","studentRegistered","ConsultDialog","context","Zoom","setBookOpen","book","checkBooked","registeredConsult","simpleReload","getBookingStatus","changeMainResource","handleDialogClose","fetchAllSubject","GetField","join","setMySubjects","mySubjects","fetchMySubject","leave","Tooltip","subjectsInfo","subjectName","ListItemSecondaryAction","setSubjectName","setAdded","fetchSubject","openJoin","setOpenJoin","openCreate","setOpenCreate","openSpeed","setOpenSpeed","newName","setNewName","SpeedDial","ariaLabel","SpeedDialIcon","onOpen","SpeedDialAction","tooltipTitle","subjectInfo","setSubjectInfo","fetchData","cardHeader","registered","normal","lightBlue","getAction","hub","setDeleteHub","creator","time","setHubs","fetchHubs","openStudent","setOpenStudent","subjectHubs","CardHeader","summary","subheader","charAt","students","day","openTo","setDuration","setSummary","setDay","media","DeleteDialog","leaveHub","deleteing","hubs","sortBy","setSortBy","HubCard","borderColor","aboutImg","HomeRoute","Component","render","ProtectedRoute","checkAuth","succeed","info","exact","path","Consultation","Hub","Analytic","Appointment","Setting","Home","About","Signup","Test","Test2","Test3","Test4","createMuiTheme","main","dark","lightGreen","A200","typography","h1","h2","fontStyle","h3","h4","h5","subtitle1","shape","ReactDOM","App","document","getElementById"],"mappings":"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","file":"static/js/main.9a407026.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.bcec5f9e.png\";","module.exports = __webpack_public_path__ + \"static/media/chat.77ff7adb.png\";","module.exports = __webpack_public_path__ + \"static/media/f1.ac70137d.png\";","module.exports = __webpack_public_path__ + \"static/media/f2.536d31bc.png\";","module.exports = __webpack_public_path__ + \"static/media/f3.6751975b.png\";","module.exports = __webpack_public_path__ + \"static/media/f4.3322bc49.png\";","module.exports = __webpack_public_path__ + \"static/media/about.eb5f65ec.png\";","import { useState, useEffect, createContext } from \"react\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nconst myFetch = async (url, method, body) => {\r\n    const res = await fetch(\"https://meetute.herokuapp.com\" + url, {\r\n        method: method,\r\n        body: JSON.stringify(body),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"meetute-token\": Cookies.get(\"meetute\"),\r\n        },\r\n    });\r\n\r\n    const msg = await res.json();\r\n    return msg;\r\n};\r\n\r\nconst AuthApi = createContext();\r\n\r\nconst UserContext = createContext();\r\n\r\nconst StaffContext = createContext();\r\n\r\nconst StudentContext = createContext();\r\n\r\nexport { AuthApi, UserContext, myFetch, StaffContext, StudentContext };\r\n","import React, { useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n    Avatar,\r\n    AppBar,\r\n    Toolbar,\r\n    Button,\r\n    ButtonGroup,\r\n    Popover,\r\n    IconButton,\r\n    Menu,\r\n    MenuItem,\r\n    Fab,\r\n} from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { AuthApi, UserContext } from \"../Methods\";\r\n\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nimport logoImage from \"./logo.png\";\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n    logo: {\r\n        maxHeight: \"3rem\",\r\n    },\r\n    link: {\r\n        marginLeft: \"auto\",\r\n    },\r\n\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create([\"width\", \"margin\"], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        background: theme.palette.background.default,\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create([\"width\", \"margin\"], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 10,\r\n    },\r\n    hide: {\r\n        display: \"none\",\r\n    },\r\n    menuItem: {\r\n        fontWeight: 900,\r\n    },\r\n    noDecoration: {\r\n        textDecoration: \"none !important\",\r\n        marginLeft: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nexport default ({ openDrawer, handleDrawerOpen, logOut }) => {\r\n    const classes = useStyles();\r\n\r\n    const { loginEl, setLoginEl, auth, setOpenLogin } = useContext(AuthApi);\r\n\r\n    const { setLoadingRoute } = useContext(UserContext);\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n\r\n    const handleClick = (event) => {\r\n        setLoginEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setLoginEl(null);\r\n    };\r\n\r\n    const open = Boolean(loginEl);\r\n    const id = open ? \"simple-popover\" : undefined;\r\n\r\n    return (\r\n        <AppBar\r\n            position=\"fixed\"\r\n            className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: openDrawer,\r\n            })}\r\n        >\r\n            <Toolbar>\r\n                {auth ? (\r\n                    <IconButton\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, {\r\n                            [classes.hide]: openDrawer,\r\n                        })}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                ) : null}\r\n\r\n                <Button\r\n                    onClick={() => {\r\n                        if (location.pathname === \"/Settings\") return;\r\n                        setLoadingRoute(true);\r\n                        history.push(\"/Settings\");\r\n                        console.log(location.pathname);\r\n                    }}\r\n                >\r\n                    <img\r\n                        className={classes.logo}\r\n                        src={logoImage}\r\n                        alt=\"meetute\"\r\n                    />\r\n                </Button>\r\n\r\n                <Link className={classes.noDecoration} to={\"/about\"}>\r\n                    <Button\r\n                        style={{\r\n                            fontSize: \"18px\",\r\n                            color: \"#616161\",\r\n                            fontWeight: 530,\r\n                            fontFamily: \"Arial\",\r\n                            textTransform: \"none\",\r\n                        }}\r\n                    >\r\n                        About Us\r\n                    </Button>\r\n                </Link>\r\n\r\n                <div className={classes.link}>\r\n                    <Button className={classes.link} onClick={handleClick}>\r\n                        <Avatar />\r\n                    </Button>\r\n                    <Menu\r\n                        id={id}\r\n                        open={open}\r\n                        anchorEl={loginEl}\r\n                        onClose={handleClose}\r\n                        keepMounted\r\n                    >\r\n                        {auth ? (\r\n                            <MenuItem\r\n                                onClick={() => {\r\n                                    logOut();\r\n                                    handleClose();\r\n                                }}\r\n                                className={classes.menuItem}\r\n                            >\r\n                                Logout\r\n                            </MenuItem>\r\n                        ) : (\r\n                            <div>\r\n                                <MenuItem\r\n                                    onClick={() => {\r\n                                        setOpenLogin(true);\r\n                                        handleClose();\r\n                                    }}\r\n                                    className={classes.menuItem}\r\n                                >\r\n                                    Login\r\n                                </MenuItem>\r\n                                <MenuItem\r\n                                    onClick={() => {\r\n                                        handleClose();\r\n                                        history.push(\"/signup\");\r\n                                    }}\r\n                                    className={classes.menuItem}\r\n                                >\r\n                                    Sign Up\r\n                                </MenuItem>\r\n                            </div>\r\n                        )}\r\n                    </Menu>\r\n                </div>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\n\r\nexport default ({ label, required, variant, setState, type, error }) => {\r\n\tlet style = \"filled\";\r\n\tif (variant != null) style = \"variant\";\r\n\r\n\treturn (\r\n\t\t<TextField\r\n\t\t\tvariant={style}\r\n\t\t\tmargin=\"normal\"\r\n\t\t\trequired={required}\r\n\t\t\tfullWidth\r\n\t\t\tid={label}\r\n\t\t\tlabel={label}\r\n\t\t\tautoComplete={label}\r\n\t\t\ttype={type}\r\n\t\t\tonChange={(e) => {\r\n\t\t\t\tsetState(e.target.value);\r\n\t\t\t}}\r\n\t\t\terror={error !== \"\" ? true : false}\r\n\t\t/>\r\n\t);\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n\tAvatar,\r\n\tButton,\r\n\tFormControlLabel,\r\n\tFormControl,\r\n\tRadioGroup,\r\n\tFormLabel,\r\n\tRadio,\r\n\tCard,\r\n\tPaper,\r\n\tGrow,\r\n} from \"@material-ui/core\";\r\nimport MyField from \"./MyField\";\r\n\r\nimport { AuthApi } from \"./../Methods\";\r\nimport Cookies from \"js-cookie\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { myFetch } from \"../Methods\";\r\n\r\n// Extension Styles\r\nconst useStyles = makeStyles((theme) => ({\r\n\tpaper: {\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t\talignItems: \"center\",\r\n\t\twidth: \"90%\",\r\n\t\theight: \"90%\",\r\n\t},\r\n\terror: {\r\n\t\tmarginTop: theme.spacing(2),\r\n\t},\r\n\tavatar: {\r\n\t\twidth: theme.spacing(10),\r\n\t\theight: theme.spacing(10),\r\n\t},\r\n\tform: {\r\n\t\tmarginTop: theme.spacing(3),\r\n\t},\r\n\tsubmit: {\r\n\t\tmargin: theme.spacing(2, 0, 0),\r\n\t},\r\n\tsignUpButton: {\r\n\t\ttextTransform: \"none\",\r\n\t\tflexGrow: \"1\",\r\n\t\tcolor: \"#31a065\",\r\n\t},\r\n\ttext: {\r\n\t\tfontWeight: \"500\",\r\n\t\tmargin: \"auto\",\r\n\t},\r\n\tcancel: {\r\n\t\tmarginTop: theme.spacing(1.4),\r\n\t},\r\n\twarn: {\r\n\t\tmarginTop: theme.spacing(0.8),\r\n\t},\r\n\tclose: {\r\n\t\tposition: \"absolute\",\r\n\t\tright: theme.spacing(1),\r\n\t\ttop: theme.spacing(1),\r\n\t\tcolor: theme.palette.grey[500],\r\n\t},\r\n}));\r\n\r\nexport default ({ closeLoginWindow }) => {\r\n\tconst history = useHistory();\r\n\tconst classes = useStyles();\r\n\tconst [email, setEmail] = useState(\"\");\r\n\tconst [password, setPassword] = useState(\"\");\r\n\tconst [userType, setUserType] = useState(\"student\");\r\n\tconst [error, setError] = useState(\"\");\r\n\tconst { setAuth, setUserInfo } = useContext(AuthApi);\r\n\r\n\tconst login = async (e) => {\r\n\t\te.preventDefault();\r\n\t\tsetError(\"\");\r\n\t\tconst msg = await myFetch(\"/api/shared/users/login\", \"POST\", {\r\n\t\t\temail: email,\r\n\t\t\tpassword: password,\r\n\t\t\tuserType: userType,\r\n\t\t});\r\n\t\tif (msg.success) {\r\n\t\t\tCookies.set(\"meetute\", msg.token);\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsetAuth(true);\r\n\t\t\t\thistory.push(\"/settings\");\r\n\t\t\t}, 100);\r\n\t\t} else {\r\n\t\t\tsetError(msg.error);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Paper elevation={0} className={classes.paper}>\r\n\t\t\t<Avatar className={classes.avatar}></Avatar>\r\n\t\t\t{error !== \"\" ? (\r\n\t\t\t\t<Grow in={true}>\r\n\t\t\t\t\t<Card className={classes.error}>\r\n\t\t\t\t\t\t<Alert\r\n\t\t\t\t\t\t\tseverity=\"error\"\r\n\t\t\t\t\t\t\tonClose={() => {\r\n\t\t\t\t\t\t\t\tsetError(\"\");\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{error}\r\n\t\t\t\t\t\t</Alert>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</Grow>\r\n\t\t\t) : null}\r\n\r\n\t\t\t<form className={classes.form} onSubmit={login}>\r\n\t\t\t\t<MyField\r\n\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\tsetState={setEmail}\r\n\t\t\t\t\trequired={true}\r\n\t\t\t\t\terror={error}\r\n\t\t\t\t/>\r\n\t\t\t\t<MyField\r\n\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\tsetState={setPassword}\r\n\t\t\t\t\trequired={true}\r\n\t\t\t\t\ttype={\"password\"}\r\n\t\t\t\t\terror={error}\r\n\t\t\t\t/>\r\n\t\t\t\t<FormControl component=\"fieldset\">\r\n\t\t\t\t\t<FormLabel component=\"legend\">login as</FormLabel>\r\n\t\t\t\t\t<RadioGroup\r\n\t\t\t\t\t\trow\r\n\t\t\t\t\t\taria-label=\"position\"\r\n\t\t\t\t\t\tname=\"position\"\r\n\t\t\t\t\t\tvalue={userType}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\tvalue=\"student\"\r\n\t\t\t\t\t\t\tcontrol={<Radio color=\"primary\" />}\r\n\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\tsetUserType(event.target.value);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tlabel=\"Student\"\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\tvalue=\"staff\"\r\n\t\t\t\t\t\t\tcontrol={<Radio color=\"primary\" />}\r\n\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\tsetUserType(event.target.value);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tlabel=\"Staff\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</RadioGroup>\r\n\t\t\t\t</FormControl>\r\n\t\t\t\t<Button\r\n\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\tclassName={classes.submit}\r\n\t\t\t\t\tsize=\"large\"\r\n\t\t\t\t>\r\n\t\t\t\t\tLogin In\r\n\t\t\t\t</Button>\r\n\t\t\t</form>\r\n\t\t\t<br />\r\n\t\t\t<Button\r\n\t\t\t\tsize=\"small\"\r\n\t\t\t\tcolor=\"primary\"\r\n\t\t\t\tclassName={classes.signUpButton}\r\n\t\t\t\tfullWidth\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tcloseLoginWindow();\r\n\t\t\t\t\thistory.push(\"/signup\");\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\tDon't have an account? Sign Up\r\n\t\t\t</Button>\r\n\t\t\t<br />\r\n\t\t</Paper>\r\n\t);\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { Grid, Dialog, IconButton } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport LoginForm from \"./loginForm.jsx\";\r\nimport { AuthApi } from \"./../Methods\";\r\nimport { Close } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        margin: \"auto\",\r\n        maxWidth: theme.spacing(55),\r\n    },\r\n    close: {\r\n        marginTop: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nexport default () => {\r\n    const classes = useStyles();\r\n    const { setLoginEl, openLogin, setOpenLogin } = useContext(AuthApi);\r\n\r\n    const closeLoginWindow = () => {\r\n        setOpenLogin(false);\r\n        setLoginEl(null);\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n            onClose={closeLoginWindow}\r\n            aria-labelledby=\"customized-dialog-title\"\r\n            open={openLogin}\r\n            className={classes.root}\r\n        >\r\n            <Grid container justify=\"flex-end\">\r\n                <Grid item xs={2}>\r\n                    <IconButton\r\n                        className={classes.close}\r\n                        onClick={closeLoginWindow}\r\n                    >\r\n                        <Close />\r\n                    </IconButton>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid container justify=\"center\">\r\n                <LoginForm closeLoginWindow={closeLoginWindow} />\r\n            </Grid>\r\n        </Dialog>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport {\r\n\tStepConnector,\r\n\tStepper,\r\n\tStep,\r\n\tStepLabel,\r\n\tGrow,\r\n} from \"@material-ui/core\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst ColorlibConnector = withStyles({\r\n\talternativeLabel: {\r\n\t\ttop: 22,\r\n\t},\r\n\tline: {\r\n\t\theight: 3,\r\n\t\tborder: 0,\r\n\t\tbackgroundColor: \"#eaeaf0\",\r\n\t\tborderRadius: 1,\r\n\t},\r\n\r\n\tcompleted: {\r\n\t\t\"& $line\": {\r\n\t\t\tbackgroundImage:\r\n\t\t\t\t\"linear-gradient(to right, #47cc89 0%, #47cc89 100%)\",\r\n\t\t},\r\n\t},\r\n})(StepConnector);\r\n\r\nconst useColorlibStepIconStyles = makeStyles({\r\n\troot: {\r\n\t\tbackgroundColor: \"#ccc\",\r\n\t\tzIndex: 1,\r\n\t\tcolor: \"#fff\",\r\n\t\twidth: 50,\r\n\t\theight: 50,\r\n\t\tdisplay: \"flex\",\r\n\t\tborderRadius: \"50%\",\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t},\r\n\tactive: {\r\n\t\tbackgroundImage: \"linear-gradient(to right, #47cc89 0%, #47cc89 100%)\",\r\n\t\tboxShadow: \"0 4px 10px 0 rgba(0,0,0,.25)\",\r\n\t},\r\n\tcompleted: {\r\n\t\tbackgroundImage: \"linear-gradient(to right, #47cc89 0%, #47cc89 100%)\",\r\n\t},\r\n});\r\n\r\nfunction ColorlibStepIcon(props) {\r\n\tconst classes = useColorlibStepIconStyles();\r\n\tconst { active, completed } = props;\r\n\r\n\tconst icons = {\r\n\t\t1: <LockOutlinedIcon />,\r\n\t\t2: <LockOutlinedIcon />,\r\n\t\t3: <LockOutlinedIcon />,\r\n\t\t4: <LockOutlinedIcon />,\r\n\t\t5: <LockOutlinedIcon />,\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={clsx(classes.root, {\r\n\t\t\t\t[classes.active]: active,\r\n\t\t\t\t[classes.completed]: completed,\r\n\t\t\t})}\r\n\t\t>\r\n\t\t\t{icons[String(props.icon)]}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tbackground: theme.background,\r\n\t},\r\n}));\r\n\r\nexport default ({ activeStep, getSteps }) => {\r\n\tconst classes = useStyles();\r\n\tconst steps = getSteps();\r\n\r\n\treturn (\r\n\t\t<Grow in>\r\n\t\t\t<Stepper\r\n\t\t\t\tconnector={<ColorlibConnector />}\r\n\t\t\t\talternativeLabel\r\n\t\t\t\tactiveStep={activeStep}\r\n\t\t\t\tclassName={classes.root}\r\n\t\t\t>\r\n\t\t\t\t{steps.map((label, index) => (\r\n\t\t\t\t\t<Step key={label}>\r\n\t\t\t\t\t\t<StepLabel StepIconComponent={ColorlibStepIcon}>\r\n\t\t\t\t\t\t\t{label}\r\n\t\t\t\t\t\t</StepLabel>\r\n\t\t\t\t\t</Step>\r\n\t\t\t\t))}\r\n\t\t\t</Stepper>\r\n\t\t</Grow>\r\n\t);\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Autocomplete from \"@material-ui/lab/autocomplete\";\r\nimport { TextField, Chip } from \"@material-ui/core\";\r\nimport { myFetch } from \"../Methods\";\r\n\r\nexport default ({ setChosenSubjects, allSubjects }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Autocomplete\r\n\t\t\t\tmultiple\r\n\t\t\t\tid=\"size-small-filled-multi\"\r\n\t\t\t\tsize=\"small\"\r\n\t\t\t\toptions={allSubjects}\r\n\t\t\t\tgetOptionLabel={(option) => option}\r\n\t\t\t\tdefaultValue={[allSubjects[1]]}\r\n\t\t\t\trenderTags={(value, getTagProps) =>\r\n\t\t\t\t\tvalue.map((option, index) => (\r\n\t\t\t\t\t\t<Chip\r\n\t\t\t\t\t\t\tlabel={option}\r\n\t\t\t\t\t\t\tsize=\"medium\"\r\n\t\t\t\t\t\t\t{...getTagProps({ index })}\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\tvariant=\"default\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))\r\n\t\t\t\t}\r\n\t\t\t\tonChange={(event, value) => setChosenSubjects(value)}\r\n\t\t\t\trenderInput={(params) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t{...params}\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\tlabel=\"Subjects\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n\tGrid,\r\n\tPaper,\r\n\tTypography,\r\n\tCollapse,\r\n\tButton,\r\n\tFab,\r\n\tContainer,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nimport NextIcon from \"@material-ui/icons/ArrowForward\";\r\nimport BackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport SchoolIcon from \"@material-ui/icons/School\";\r\n\r\nimport { myFetch } from \"../Methods\";\r\nimport MyField from \"../Login/MyField\";\r\n\r\nimport Subjects from \"./subjects\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tpaper: {\r\n\t\tbackground: theme.background,\r\n\t},\r\n\tbuttons: {\r\n\t\tmarginTop: theme.spacing(2),\r\n\t},\r\n\tstaff: {\r\n\t\tminHeight: \"4rem\",\r\n\t\tbackground: \"linear-gradient(to right, #f7985d 0%, #f7985d 100%)\",\r\n\t\tborderRadius: 30,\r\n\t},\r\n\tstudent: {\r\n\t\tminHeight: \"4rem\",\r\n\t\tbackground: \"linear-gradient(to right, #f7985d 0%, #f7985d 100%)\",\r\n\t\tborderRadius: 30,\r\n\t},\r\n\tlargeIcon: {\r\n\t\twidth: 30,\r\n\t\theight: 30,\r\n\t},\r\n\tnoDecoration: {\r\n\t\ttextDecoration: \"none !important\",\r\n\t},\r\n\tSchoolIcon: {\r\n\t\tmarginRight: theme.spacing(1),\r\n\t},\r\n}));\r\n\r\nexport default (props) => {\r\n\tconst classes = useStyles();\r\n\r\n\tconst {\r\n\t\tactiveStep,\r\n\t\thandleNext,\r\n\t\thandleBack,\r\n\t\ttext,\r\n\t\tcardID,\r\n\t\thandleSubmit,\r\n\t} = props;\r\n\r\n\tconst history = useHistory();\r\n\r\n\tconst getButton = (cardID) => {\r\n\t\tswitch (cardID) {\r\n\t\t\tcase 5:\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Grid container justify=\"space-between\" alignItems=\"center\">\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<Grid container justify=\"center\">\r\n\t\t\t\t\t\t\t\t<Link to=\"/\" className={classes.noDecoration}>\r\n\t\t\t\t\t\t\t\t\t<Fab\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"extended\"\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\taria-label=\"add\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<SchoolIcon\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.SchoolIcon}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\tStart your meetute life\r\n\t\t\t\t\t\t\t\t\t</Fab>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t);\r\n\r\n\t\t\tcase 4:\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Grid container justify=\"space-between\" alignItems=\"center\">\r\n\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tdisabled={cardID === 0}\r\n\t\t\t\t\t\t\t\tonClick={handleBack}\r\n\t\t\t\t\t\t\t\tsize=\"large\"\r\n\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<BackIcon />\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tonClick={handleSubmit}\r\n\t\t\t\t\t\t\t\tsize=\"large\"\r\n\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t);\r\n\r\n\t\t\tdefault:\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Grid container justify=\"space-between\" alignItems=\"center\">\r\n\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tdisabled={cardID === 0}\r\n\t\t\t\t\t\t\t\tonClick={handleBack}\r\n\t\t\t\t\t\t\t\tsize=\"large\"\r\n\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<BackIcon />\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tonClick={handleNext}\r\n\t\t\t\t\t\t\t\tsize=\"large\"\r\n\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<NextIcon />\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\tconst {\r\n\t\tsetEmail,\r\n\t\tuserType,\r\n\t\tsetUserType,\r\n\t\tsetFirstName,\r\n\t\tsetLasName,\r\n\t\tsetPassword,\r\n\t\tsetConformPassword,\r\n\t\tstatus,\r\n\t\tsetChosenSubjects,\r\n\t\tallSubjects,\r\n\t} = props;\r\n\r\n\tconst getField = (cardID) => {\r\n\t\tswitch (cardID) {\r\n\t\t\tcase 0:\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Autocomplete\r\n\t\t\t\t\t\tid=\"combo-box-demo\"\r\n\t\t\t\t\t\toptions={[\"student\", \"staff\"]}\r\n\t\t\t\t\t\tdefaultValue=\"student\"\r\n\t\t\t\t\t\tgetOptionLabel={(option) => option}\r\n\t\t\t\t\t\tvalue={userType}\r\n\t\t\t\t\t\tonChange={(event, newValue) => {\r\n\t\t\t\t\t\t\tsetUserType(newValue);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\trenderInput={(params) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t{...params}\r\n\t\t\t\t\t\t\t\t\tlabel=\"I'm a\"\r\n\t\t\t\t\t\t\t\t\tvariant=\"filled\"\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\tcase 2:\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<MyField\r\n\t\t\t\t\t\tlabel=\"Please Enter your Email\"\r\n\t\t\t\t\t\tsetState={setEmail}\r\n\t\t\t\t\t\trequired={true}\r\n\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\tstatus === \"Error! email cannot be blank\"\r\n\t\t\t\t\t\t\t\t? status\r\n\t\t\t\t\t\t\t\t: \"\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\tcase 3:\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<MyField\r\n\t\t\t\t\t\t\tlabel=\"Set Password\"\r\n\t\t\t\t\t\t\tsetState={setPassword}\r\n\t\t\t\t\t\t\trequired={true}\r\n\t\t\t\t\t\t\ttype={\"password\"}\r\n\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\tstatus === \"Error! password cannot be blank\"\r\n\t\t\t\t\t\t\t\t\t? status\r\n\t\t\t\t\t\t\t\t\t: \"\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<MyField\r\n\t\t\t\t\t\t\tlabel=\"Confirm Password\"\r\n\t\t\t\t\t\t\tsetState={setConformPassword}\r\n\t\t\t\t\t\t\trequired={true}\r\n\t\t\t\t\t\t\ttype={\"password\"}\r\n\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\tstatus === \"Error! password cannot be blank\"\r\n\t\t\t\t\t\t\t\t\t? status\r\n\t\t\t\t\t\t\t\t\t: \"\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\tcase 4:\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Subjects\r\n\t\t\t\t\t\tallSubjects={allSubjects}\r\n\t\t\t\t\t\tsetChosenSubjects={setChosenSubjects}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\tcase 1:\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<MyField\r\n\t\t\t\t\t\t\tlabel=\"First Name\"\r\n\t\t\t\t\t\t\tsetState={setFirstName}\r\n\t\t\t\t\t\t\trequired={true}\r\n\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\tstatus === \"Error! FirstName cannot be blank\"\r\n\t\t\t\t\t\t\t\t\t? status\r\n\t\t\t\t\t\t\t\t\t: \"\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<MyField\r\n\t\t\t\t\t\t\tlabel=\"Last Name\"\r\n\t\t\t\t\t\t\tsetState={setLasName}\r\n\t\t\t\t\t\t\trequired={true}\r\n\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\tstatus === \"Error! lastName cannot be blank\"\r\n\t\t\t\t\t\t\t\t\t? status\r\n\t\t\t\t\t\t\t\t\t: \"\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\r\n\t\t\tdefault:\r\n\t\t\t\treturn null;\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Collapse in={activeStep === cardID} timeout={500}>\r\n\t\t\t\t<Paper\r\n\t\t\t\t\tvariant=\"elevation\"\r\n\t\t\t\t\televation={0}\r\n\t\t\t\t\tclassName={classes.paper}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Container maxWidth=\"md\">\r\n\t\t\t\t\t\t<Typography align=\"center\" variant=\"h5\">\r\n\t\t\t\t\t\t\t{text}\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t</Typography>\r\n\r\n\t\t\t\t\t\t<Container className={classes.buttons} maxWidth=\"sm\">\r\n\t\t\t\t\t\t\t<form\r\n\t\t\t\t\t\t\t\tonSubmit={(event) => {\r\n\t\t\t\t\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{getField(cardID)}\r\n\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t{getButton(cardID)}\r\n\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t</Paper>\r\n\t\t\t</Collapse>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport {\r\n\tTypography,\r\n\tContainer,\r\n\tGrow,\r\n\tPaper,\r\n\tCollapse,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { AuthApi } from \"./../Methods\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nimport Stepper from \"./stepper\";\r\n\r\nimport StepCard from \"./stepCard\";\r\n\r\nimport { myFetch } from \"../Methods\";\r\n\r\nfunction getSteps() {\r\n\treturn [\"User Type\", \"Name\", \"Email\", \"Password\", \"Subjects\"];\r\n}\r\n\r\nconst steps = [\r\n\t{\r\n\t\ttext: \"Sign up as...\",\r\n\t\tcardID: 0,\r\n\t},\r\n\t{\r\n\t\ttext: \"What's your name?\",\r\n\t\tcardID: 1,\r\n\t},\r\n\r\n\t{\r\n\t\ttext: \"Please enter your email:\",\r\n\t\tcardID: 2,\r\n\t},\r\n\r\n\t{\r\n\t\ttext: \"Set your password:\",\r\n\t\tcardID: 3,\r\n\t},\r\n\t{\r\n\t\ttext: \"Subjects you would like to pick?\",\r\n\t\tcardID: 4,\r\n\t},\r\n\t{\r\n\t\ttext: \"We are all set! enjoy meeting tutors!\",\r\n\t\tcardID: 5,\r\n\t},\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\twidth: \"100%\",\r\n\t\tbackground: theme.background,\r\n\t},\r\n\tstepper: {\r\n\t\tbackground: theme.background,\r\n\t},\r\n\tbutton: {\r\n\t\tmarginTop: theme.spacing(1),\r\n\t\tmarginRight: theme.spacing(1),\r\n\t},\r\n\tactionsContainer: {\r\n\t\tmarginBottom: theme.spacing(2),\r\n\t},\r\n\tresetContainer: {\r\n\t\tpadding: theme.spacing(3),\r\n\t},\r\n\tpaper: {\r\n\t\tminHeight: \"50VH\",\r\n\t},\r\n}));\r\n\r\nexport default () => {\r\n\tconst classes = useStyles();\r\n\r\n\t//Sign up states\r\n\tconst [email, setEmail] = useState(\"\");\r\n\tconst [userType, setUserType] = useState(\"student\");\r\n\tconst [firstName, setFirstName] = useState(\"\");\r\n\tconst [lastName, setLasName] = useState(\"\");\r\n\tconst [password, setPassword] = useState(\"\");\r\n\tconst [confirmPassword, setConformPassword] = useState(\"\");\r\n\tconst [status, setStatus] = useState(\"\");\r\n\tconst [chosenSubjects, setChosenSubjects] = useState([\"INFO30005\"]);\r\n\r\n\t//Steps states\r\n\tconst [activeStep, setActiveStep] = React.useState(0);\r\n\r\n\t//loading data.\r\n\tconst [loading, setLoading] = useState(true);\r\n\tconst [allSubjects, setAllSubjects] = useState([]);\r\n\r\n\tconst { setAuth } = useContext(AuthApi);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchSubjects = async () => {\r\n\t\t\tconst { subjectList } = await myFetch(\r\n\t\t\t\t\"/api/shared/users/allSubjects\",\r\n\t\t\t\t\"GET\"\r\n\t\t\t);\r\n\t\t\tsetAllSubjects(subjectList);\r\n\t\t\tsetLoading(false);\r\n\t\t\tconsole.log(subjectList);\r\n\t\t};\r\n\t\tfetchSubjects();\r\n\t}, [status]);\r\n\r\n\tconst handleNext = () => {\r\n\t\tswitch (activeStep) {\r\n\t\t\tcase 1:\r\n\t\t\t\tif (firstName === \"\" || lastName === \"\") {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tif (email === \"\" || !email.includes(\"@\")) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tif (password === \"\" || confirmPassword === \"\") {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (password !== confirmPassword) {\r\n\t\t\t\t\tsetStatus(\"Sorry password does not match\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tsetActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n\t\tconsole.log(userType);\r\n\t};\r\n\r\n\tconst handleBack = () => {\r\n\t\tsetActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n\t};\r\n\r\n\tconst HandleStatus = () => {\r\n\t\tif (status === \"success\") {\r\n\t\t\treturn (\r\n\t\t\t\t<Alert variant=\"filled\" elevation={6} severity=\"success\">\r\n\t\t\t\t\tYou are good to go!\r\n\t\t\t\t</Alert>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<Alert\r\n\t\t\t\tseverity=\"error\"\r\n\t\t\t\tvariant=\"filled\"\r\n\t\t\t\televation={6}\r\n\t\t\t\tonClose={() => {\r\n\t\t\t\t\tsetStatus(\"\");\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{status}\r\n\t\t\t</Alert>\r\n\t\t);\r\n\t};\r\n\r\n\tconst signUp = async (e) => {\r\n\t\tsetStatus(\"\");\r\n\t\tconst msg = await myFetch(\"/api/shared/users/signup\", \"POST\", {\r\n\t\t\temail: email,\r\n\t\t\tpassword: password,\r\n\t\t\tfirstName: firstName,\r\n\t\t\tlastName: lastName,\r\n\t\t\tsubjects: chosenSubjects,\r\n\t\t\tuserType: userType,\r\n\t\t});\r\n\r\n\t\tif (msg.success) {\r\n\t\t\tsetStatus(\"success\");\r\n\t\t\thandleNext();\r\n\t\t\tCookies.set(\"meetute\", msg.token);\r\n\t\t\tsetAuth(true);\r\n\t\t} else {\r\n\t\t\tconsole.log(msg);\r\n\t\t\tsetStatus(msg.error);\r\n\t\t\tif (msg.error.includes(\"ype\")) {\r\n\t\t\t\tsetActiveStep(0);\r\n\t\t\t}\r\n\t\t\tif (msg.error.includes(\"Name\")) {\r\n\t\t\t\tsetActiveStep(1);\r\n\t\t\t}\r\n\t\t\tif (msg.error.includes(\"email\")) {\r\n\t\t\t\tsetActiveStep(2);\r\n\t\t\t}\r\n\t\t\tif (msg.error.includes(\"password\")) {\r\n\t\t\t\tsetActiveStep(3);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<Typography variant=\"h1\">\r\n\t\t\t\t<br />\r\n\t\t\t</Typography>\r\n\t\t\t<Stepper activeStep={activeStep} getSteps={getSteps} />\r\n\r\n\t\t\t<Container maxWidth=\"md\">\r\n\t\t\t\t<Grow in={status !== \"\"}>\r\n\t\t\t\t\t<Paper elevation={0}>\r\n\t\t\t\t\t\t<HandleStatus />\r\n\t\t\t\t\t</Paper>\r\n\t\t\t\t</Grow>\r\n\t\t\t\t<br />\r\n\t\t\t</Container>\r\n\t\t\t<Collapse in={!loading} timeout={1000}>\r\n\t\t\t\t{loading ? null : (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{steps.map(({ title, text, cardID }) => (\r\n\t\t\t\t\t\t\t<StepCard\r\n\t\t\t\t\t\t\t\tcardID={cardID}\r\n\t\t\t\t\t\t\t\ttitle={title}\r\n\t\t\t\t\t\t\t\ttext={text}\r\n\t\t\t\t\t\t\t\thandleBack={handleBack}\r\n\t\t\t\t\t\t\t\thandleNext={handleNext}\r\n\t\t\t\t\t\t\t\tactiveStep={activeStep}\r\n\t\t\t\t\t\t\t\tuserType={userType}\r\n\t\t\t\t\t\t\t\tsetUserType={setUserType}\r\n\t\t\t\t\t\t\t\tsetEmail={setEmail}\r\n\t\t\t\t\t\t\t\tsetFirstName={setFirstName}\r\n\t\t\t\t\t\t\t\tsetLasName={setLasName}\r\n\t\t\t\t\t\t\t\tsetPassword={setPassword}\r\n\t\t\t\t\t\t\t\tsetConformPassword={setConformPassword}\r\n\t\t\t\t\t\t\t\tstatus={status}\r\n\t\t\t\t\t\t\t\tsetChosenSubjects={setChosenSubjects}\r\n\t\t\t\t\t\t\t\thandleSubmit={signUp}\r\n\t\t\t\t\t\t\t\tkey={cardID}\r\n\t\t\t\t\t\t\t\tallSubjects={allSubjects}\r\n\t\t\t\t\t\t\t></StepCard>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</Collapse>\r\n\t\t\t<Typography variant=\"h1\">\r\n\t\t\t\t<br />\r\n\t\t\t</Typography>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core\";\r\n\r\nconst styles = {\r\n\twaves: {\r\n\t\tposition: \"relative\",\r\n\t\twidth: \"100%\",\r\n\t\tmarginBottom: -7,\r\n\t\theight: \"7vw\",\r\n\t\tminHeight: \"7vw\",\r\n\t},\r\n\t\"@keyframes moveForever\": {\r\n\t\tfrom: { transform: \"translate3d(-90px, 0, 0)\" },\r\n\t\tto: { transform: \"translate3d(85px, 0, 0)\" },\r\n\t},\r\n\tparallax: {\r\n\t\t\"& > use\": {\r\n\t\t\tanimation:\r\n\t\t\t\t\"$moveForever 4s cubic-bezier(0.62, 0.5, 0.38, 0.5) infinite\",\r\n\t\t\tanimationDelay: (props) => `-${props.animationNegativeDelay}s`,\r\n\t\t},\r\n\t},\r\n};\r\n\r\n/**\r\n *  https://codepen.io/csspoints/pen/WNeOEqd\r\n */\r\nfunction WaveBorder(props) {\r\n\tconst id = String(Math.random());\r\n\tconst {\r\n\t\tclassName,\r\n\t\tlowerColor,\r\n\t\tupperColor,\r\n\t\tclasses,\r\n\t\tanimationNegativeDelay,\r\n\t\t...rest\r\n\t} = props;\r\n\treturn (\r\n\t\t<div className={className} style={{ background: upperColor }} {...rest}>\r\n\t\t\t<svg\r\n\t\t\t\tclassName={classes.waves}\r\n\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\txlink=\"http://www.w3.org/1999/xlink\"\r\n\t\t\t\tviewBox=\"0 24 150 28\"\r\n\t\t\t\tpreserveAspectRatio=\"none\"\r\n\t\t\t\tshapeRendering=\"auto\"\r\n\t\t\t>\r\n\t\t\t\t<defs>\r\n\t\t\t\t\t<path\r\n\t\t\t\t\t\tid={id}\r\n\t\t\t\t\t\td=\"M-160 44c30 0 58-18 88-18s 58 18 88 18 58-18 88-18 58 18 88 18 v44h-352z\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</defs>\r\n\t\t\t\t<g className={classes.parallax}>\r\n\t\t\t\t\t<use href={`#${id}`} x=\"48\" y=\"0\" fill={lowerColor} />\r\n\t\t\t\t</g>\r\n\t\t\t</svg>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nWaveBorder.propTypes = {\r\n\tlowerColor: PropTypes.string.isRequired,\r\n\tupperColor: PropTypes.string.isRequired,\r\n\tclasses: PropTypes.object.isRequired,\r\n\tanimationNegativeDelay: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(WaveBorder);\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nimport AppBar from \"../Navigation/AppBar\";\r\n\r\nimport Login from \"../Login/login\";\r\n\r\nimport SignupForm from \"./signupForm\";\r\n\r\nimport WaveBorder from \"../Home/waveBorder\";\r\n\r\nimport { myFetch } from \"../Methods\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tc1: {\r\n\t\tbackground: theme.background,\r\n\t\tmaxWidth: \"100WH\",\r\n\t},\r\n\tc2: {\r\n\t\tbackground: theme.palette.secondary.light,\r\n\t\theight: \"50VH\",\r\n\t},\r\n}));\r\n\r\nexport default () => {\r\n\tconst classes = useStyles();\r\n\tconst theme = useTheme();\r\n\tconst [openLogin, setOpenLogin] = useState(false);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<AppBar setOpenLogin={setOpenLogin} />\r\n\t\t\t<Login open={openLogin} setOpenLogin={setOpenLogin} />\r\n\r\n\t\t\t<div className={classes.c1}>\r\n\t\t\t\t<SignupForm />\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.c2}>\r\n\t\t\t\t<WaveBorder\r\n\t\t\t\t\tupperColor={theme.background}\r\n\t\t\t\t\tlowerColor={theme.palette.secondary.light}\r\n\t\t\t\t\tanimationNegativeDelay={100}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n    Grid,\r\n    Container,\r\n    Hidden,\r\n    withWidth,\r\n    isWidthUp,\r\n    Typography,\r\n    Grow,\r\n    Button,\r\n} from \"@material-ui/core\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport headerImage from \"./img/chat.png\";\r\nimport ChatBubbleOutlineIcon from \"@material-ui/icons/VpnKey\";\r\nimport FaceIcon from \"@material-ui/icons/Face\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    image: {\r\n        maxHeight: \"70%\",\r\n        maxWidth: \"100%\",\r\n    },\r\n\r\n    root: {\r\n        minHeight: \"70%\",\r\n        background: theme.background,\r\n    },\r\n    images: {\r\n        minHeight: \"70%\",\r\n    },\r\n    background: {\r\n        background: theme.background,\r\n    },\r\n    title: {\r\n        background: theme.background,\r\n    },\r\n    body: {\r\n        color: \"#595e53\",\r\n    },\r\n    about: {\r\n        minHeight: \"4rem\",\r\n        background:\r\n            \"linear-gradient(45deg, #ff9a9e 0%, #fad0c4 99%, #fad0c4 100%)\",\r\n        borderRadius: 30,\r\n    },\r\n    getStarted: {\r\n        minHeight: \"4rem\",\r\n        background: \"linear-gradient(to right, #92fe9d 0%, #00c9ff 100%)\",\r\n        borderRadius: 30,\r\n    },\r\n    largeIcon: {\r\n        width: 30,\r\n        height: 30,\r\n    },\r\n    noDecoration: {\r\n        textDecoration: \"none !important\",\r\n        fontSize: \"\",\r\n        fontWeight: 0,\r\n        minWidth: \"100%\",\r\n    },\r\n}));\r\n\r\nexport default ({ setOpenLogin }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Container fixed>\r\n                <Grid\r\n                    container\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                    direction=\"row\"\r\n                >\r\n                    <Grid item xs={12} md={6}>\r\n                        <Grow in timeout=\"auto\">\r\n                            <Grid\r\n                                container\r\n                                direction=\"column\"\r\n                                justify=\"center\"\r\n                                alignItems=\"center\"\r\n                            >\r\n                                <Typography variant=\"h2\">\r\n                                    <br />\r\n                                    <br />\r\n                                </Typography>\r\n                                <Grid item xs={8}>\r\n                                    <Typography variant=\"h3\" align=\"center\">\r\n                                        Ask your questions today, for an easier\r\n                                        life tomorrow.\r\n                                    </Typography>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={8}>\r\n                                    <Typography\r\n                                        className={classes.body}\r\n                                        variant=\"h5\"\r\n                                    >\r\n                                        <br />\r\n                                        MeeTute wants to make consultation and\r\n                                        support services more accessible for\r\n                                        students and more manageable for\r\n                                        teaching staff.\r\n                                        <br />\r\n                                        <br />\r\n                                    </Typography>\r\n                                    <Grid\r\n                                        container\r\n                                        direction=\"row\"\r\n                                        justify=\"center\"\r\n                                        spacing={3}\r\n                                    >\r\n                                        <Grid item xs={6}>\r\n                                            <Grid container justify=\"center\">\r\n                                                <Link\r\n                                                    to={\"/signup\"}\r\n                                                    className={\r\n                                                        classes.noDecoration\r\n                                                    }\r\n                                                >\r\n                                                    <Button\r\n                                                        fullWidth\r\n                                                        size=\"large\"\r\n                                                        className={\r\n                                                            classes.getStarted\r\n                                                        }\r\n                                                        startIcon={\r\n                                                            <ChatBubbleOutlineIcon\r\n                                                                className={\r\n                                                                    classes.largeIcon\r\n                                                                }\r\n                                                            />\r\n                                                        }\r\n                                                    >\r\n                                                        get started\r\n                                                    </Button>\r\n                                                </Link>\r\n                                            </Grid>\r\n                                        </Grid>\r\n\r\n                                        <Grid item xs={6}>\r\n                                            <Grid container justify=\"center\">\r\n                                                <Button\r\n                                                    fullWidth\r\n                                                    size=\"large\"\r\n                                                    className={classes.about}\r\n                                                    startIcon={\r\n                                                        <FaceIcon\r\n                                                            className={\r\n                                                                classes.largeIcon\r\n                                                            }\r\n                                                        />\r\n                                                    }\r\n                                                    onClick={() => {\r\n                                                        setOpenLogin(true);\r\n                                                    }}\r\n                                                >\r\n                                                    Login in\r\n                                                </Button>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grow>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} md={6}>\r\n                        <Typography variant=\"h1\">\r\n                            <br />\r\n                        </Typography>\r\n                        <Grow in>\r\n                            <Grid\r\n                                container\r\n                                justify=\"center\"\r\n                                alignItems=\"flex-end\"\r\n                            >\r\n                                <img\r\n                                    src={headerImage}\r\n                                    className={classes.image}\r\n                                />\r\n                            </Grid>\r\n                        </Grow>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"h5\">\r\n                            <br />\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nimport {\r\n\tGrid,\r\n\tCardContent,\r\n\twithWidth,\r\n\tisWidthUp,\r\n\tTypography,\r\n\tButton,\r\n\tPaper,\r\n} from \"@material-ui/core\";\r\n\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcover: {\r\n\t\tmaxWidth: \"100%\",\r\n\t},\r\n\tcard: {\r\n\t\tmarginTop: theme.spacing(3),\r\n\t\tbackgroundColor: theme.palette.secondary.light,\r\n\t},\r\n\ttext: {\r\n\t\tcolor: \"#6984aa\",\r\n\t\tfontWeight: 500,\r\n\t},\r\n\theadline: {\r\n\t\tcolor: \"#33456b\",\r\n\t\tfontWeight: 900,\r\n\t},\r\n}));\r\n\r\nexport default (props) => {\r\n\tconst theme = useTheme();\r\n\tconst {\r\n\t\tsetActiveStep,\r\n\t\tactiveStep,\r\n\t\theadline,\r\n\t\ttext,\r\n\t\tmaxSteps,\r\n\t\timage,\r\n\t} = props;\r\n\r\n\tconst handleNext = () => {\r\n\t\tsetActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n\t};\r\n\r\n\tconst handleBack = () => {\r\n\t\tsetActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n\t};\r\n\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<Grid container justify=\"center\" alignItems=\"center\">\r\n\t\t\t<Grid item xs={1}>\r\n\t\t\t\t<Grid container justify=\"center\">\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\tonClick={handleBack}\r\n\t\t\t\t\t\tdisabled={activeStep === 0}\r\n\t\t\t\t\t\tclassName={classes.button}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{theme.direction === \"rtl\" ? (\r\n\t\t\t\t\t\t\t<KeyboardArrowRight />\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<KeyboardArrowLeft />\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={8}>\r\n\t\t\t\t<Paper elevation={0} className={classes.card}>\r\n\t\t\t\t\t{/*Image*/}\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\tdirection=\"row\"\r\n\t\t\t\t\t\tjustify=\"space-around\"\r\n\t\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\t\t\tdirection=\"column\"\r\n\t\t\t\t\t\t\t\tjustify=\"center\"\r\n\t\t\t\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\tclassName={classes.cover}\r\n\t\t\t\t\t\t\t\t\tsrc={image}\r\n\t\t\t\t\t\t\t\t\talt=\"Live from space album cover\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t{/*Headline of the card*/}\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<CardContent className={classes.content}>\r\n\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\tclassName={classes.headline}\r\n\t\t\t\t\t\t\t\t\tvariant=\"h4\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{headline}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\tclassName={classes.text}\r\n\t\t\t\t\t\t\t\t\tvariant=\"h5\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t{text}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Paper>\r\n\t\t\t</Grid>\r\n\r\n\t\t\t<Grid item xs={1}>\r\n\t\t\t\t<Grid container justify=\"center\">\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\tonClick={handleNext}\r\n\t\t\t\t\t\tdisabled={activeStep === maxSteps - 1}\r\n\t\t\t\t\t\tclassName={classes.button}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{theme.direction === \"rtl\" ? (\r\n\t\t\t\t\t\t\t<KeyboardArrowLeft />\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<KeyboardArrowRight />\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n","import React from \"react\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n\tStepper,\r\n\tStep,\r\n\tStepButton,\r\n\tStepLabel,\r\n\tStepConnector,\r\n} from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\n\r\nimport TodayIcon from \"@material-ui/icons/Today\";\r\nimport AlarmIcon from \"@material-ui/icons/Alarm\";\r\nimport GroupAddIcon from \"@material-ui/icons/GroupAdd\";\r\nimport TimelineIcon from \"@material-ui/icons/Timeline\";\r\n\r\nconst ColorlibConnector = withStyles({\r\n\talternativeLabel: {\r\n\t\ttop: 22,\r\n\t},\r\n\tline: {\r\n\t\theight: 3,\r\n\t\tborder: 0,\r\n\t\tbackgroundColor: \"#eaeaf0\",\r\n\t\tborderRadius: 1,\r\n\t},\r\n})(StepConnector);\r\n\r\nconst useColorlibStepIconStyles = makeStyles({\r\n\troot: {\r\n\t\tbackgroundColor: \"#ccc\",\r\n\t\tzIndex: 1,\r\n\t\tcolor: \"#fff\",\r\n\t\twidth: 50,\r\n\t\theight: 50,\r\n\t\tdisplay: \"flex\",\r\n\t\tborderRadius: \"50%\",\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t},\r\n\tactive: {\r\n\t\tbackgroundImage: \"linear-gradient(to top, #0a6aab 0%, #0a6aab 100%)\",\r\n\t\tboxShadow: \"0 4px 10px 0 rgba(0,0,0,.25)\",\r\n\t},\r\n});\r\n\r\nfunction ColorlibStepIcon(props) {\r\n\tconst classes = useColorlibStepIconStyles();\r\n\tconst { active, completed } = props;\r\n\r\n\tconst icons = {\r\n\t\t1: <TodayIcon />,\r\n\t\t2: <AlarmIcon />,\r\n\t\t3: <GroupAddIcon />,\r\n\t\t4: <TimelineIcon />,\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={clsx(classes.root, {\r\n\t\t\t\t[classes.active]: active,\r\n\t\t\t\t[classes.completed]: completed,\r\n\t\t\t})}\r\n\t\t>\r\n\t\t\t{icons[String(props.icon)]}\r\n\t\t</div>\r\n\t);\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tbackgroundColor: theme.palette.secondary.light,\r\n\t\twidth: \"60%\",\r\n\t\tmargin: \"auto\",\r\n\t},\r\n}));\r\n\r\nexport default ({ activeStep, setActiveStep, features }) => {\r\n\tconst classes = useStyles();\r\n\r\n\tconst handleStep = (step) => () => {\r\n\t\tsetActiveStep(step);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Stepper\r\n\t\t\talternativeLabel\r\n\t\t\tactiveStep={activeStep}\r\n\t\t\tconnector={<ColorlibConnector />}\r\n\t\t\tclassName={classes.root}\r\n\t\t\tnonLinear\r\n\t\t>\r\n\t\t\t{features.map(({ headline }, index) => (\r\n\t\t\t\t<Step key={headline}>\r\n\t\t\t\t\t<StepButton\r\n\t\t\t\t\t\tclassName={classes.button}\r\n\t\t\t\t\t\tonClick={handleStep(index)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<StepLabel StepIconComponent={ColorlibStepIcon}>\r\n\t\t\t\t\t\t\t{headline}\r\n\t\t\t\t\t\t</StepLabel>\r\n\t\t\t\t\t</StepButton>\r\n\t\t\t\t</Step>\r\n\t\t\t))}\r\n\t\t</Stepper>\r\n\t);\r\n};\r\n\r\n/*\r\n\t\t<Stepper nonLinear activeStep={activeStep} className={classes.root}>\r\n\t\t\t{features.map(({ headline, text, icon }, index) => (\r\n\t\t\t\t<Step key={headline}>\r\n\t\t\t\t\t<StepButton\r\n\t\t\t\t\t\tonClick={handleStep(index)}\r\n\t\t\t\t\t\tclassName={classes.button}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{headline}\r\n\t\t\t\t\t</StepButton>\r\n\t\t\t\t</Step>\r\n\t\t\t))}\r\n\t\t\t</Stepper>*/\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\n//Icons\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport { autoPlay } from \"react-swipeable-views-utils\";\r\nimport FeatureCard from \"./featureCard\";\r\nimport Stepper from \"./stepper\";\r\n\r\nimport f1 from \"./img/f1.png\";\r\nimport f2 from \"./img/f2.png\";\r\nimport f3 from \"./img/f3.png\";\r\nimport f4 from \"./img/f4.png\";\r\n\r\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\r\n\r\nconst features = [\r\n\t{\r\n\t\theadline: \"Consultation Booking System\",\r\n\t\ttext:\r\n\t\t\t\"MeeTute makes it simple for students and teaching staff to schedule or book consultation appointments.\",\r\n\t\timage: f1,\r\n\t},\r\n\t{\r\n\t\theadline: \"Scheduling Assistant\",\r\n\t\ttext:\r\n\t\t\t\"Cannot make the consultation time? Don’t worry, use our scheduling assistant to book one-on-one sessions.\",\r\n\r\n\t\timage: f2,\r\n\t},\r\n\t{\r\n\t\theadline: \"Study Group Helper\",\r\n\t\ttext:\r\n\t\t\t\"Connect with your peers in the same subject and develop better learning experiences.\",\r\n\r\n\t\timage: f3,\r\n\t},\r\n\t{\r\n\t\theadline: \"User Analytics Tool\",\r\n\t\ttext:\r\n\t\t\t\"MeeTute delivers beautiful visualisations for past consultation registration statistics, making it easier for teaching staff for future planning\",\r\n\r\n\t\timage: f4,\r\n\t},\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tbackgroundColor: theme.palette.secondary.light,\r\n\t},\r\n\r\n\theadline: {\r\n\t\tcolor: \"#05578e\",\r\n\t},\r\n}));\r\n\r\nexport default ({ width }) => {\r\n\tconst classes = useStyles();\r\n\tconst theme = useTheme();\r\n\r\n\tconst [activeStep, setActiveStep] = useState(0);\r\n\tconst maxSteps = features.length;\r\n\r\n\tconst handleStepChange = (step) => {\r\n\t\tsetActiveStep(step);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<Typography\r\n\t\t\t\tclassName={classes.headline}\r\n\t\t\t\tvariant=\"h3\"\r\n\t\t\t\talign=\"center\"\r\n\t\t\t>\r\n\t\t\t\t<br />\r\n\t\t\t\tSee how MeeTute can help you...\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t</Typography>\r\n\r\n\t\t\t<Stepper\r\n\t\t\t\tactiveStep={activeStep}\r\n\t\t\t\tsetActiveStep={setActiveStep}\r\n\t\t\t\tfeatures={features}\r\n\t\t\t/>\r\n\r\n\t\t\t<AutoPlaySwipeableViews\r\n\t\t\t\taxis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\r\n\t\t\t\tindex={activeStep}\r\n\t\t\t\tonChangeIndex={handleStepChange}\r\n\t\t\t\tenableMouseEvents\r\n\t\t\t\tclassName={classes.swipe}\r\n\t\t\t\tinterval={9000}\r\n\t\t\t>\r\n\t\t\t\t{features.map((element) => (\r\n\t\t\t\t\t<FeatureCard\r\n\t\t\t\t\t\tkey={element.headline}\r\n\t\t\t\t\t\theadline={element.headline}\r\n\t\t\t\t\t\ttext={element.text}\r\n\t\t\t\t\t\tactiveStep={activeStep}\r\n\t\t\t\t\t\tsetActiveStep={setActiveStep}\r\n\t\t\t\t\t\tmaxSteps={maxSteps}\r\n\t\t\t\t\t\timage={element.image}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</AutoPlaySwipeableViews>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React, { useCallback, useContext } from \"react\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles, useTheme, UserContext } from \"@material-ui/core/styles\";\r\nimport { AuthApi } from \"../Methods\";\r\nimport AppBar from \"../Navigation/AppBar\";\r\nimport Header from \"./header\";\r\nimport WaveBorder from \"./waveBorder\";\r\nimport Features from \"./features\";\r\nimport Login from \"../Login/login\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    c1: {\r\n        backgroundColor: theme.palette.secondary.light,\r\n    },\r\n    c2: {\r\n        backgroundColor: theme.palette.primary.light,\r\n    },\r\n}));\r\n\r\nexport default () => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const { openLogin, setOpenLogin } = useContext(AuthApi);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar setOpenLogin={setOpenLogin} />\r\n            <Login />\r\n            <Header setOpenLogin={setOpenLogin} />\r\n            <WaveBorder\r\n                upperColor={theme.background}\r\n                lowerColor={theme.palette.secondary.light}\r\n                animationNegativeDelay={100}\r\n            />\r\n            <Features />\r\n            <WaveBorder\r\n                upperColor={theme.palette.secondary.light}\r\n                lowerColor={theme.palette.primary.light}\r\n                animationNegativeDelay={100}\r\n            />\r\n            <div className={classes.c2}>\r\n                <Typography variant=\"subtitle1\" align=\"center\">\r\n                    Copyright @ MeeTute 2020\r\n                </Typography>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","/* eslint-disable max-classes-per-file */\r\n/* eslint-disable react/no-unused-state */\r\nimport React, { useContext } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { ViewState, EditingState } from \"@devexpress/dx-react-scheduler\";\r\nimport {\r\n  Scheduler,\r\n  Toolbar,\r\n  MonthView,\r\n  WeekView,\r\n  ViewSwitcher,\r\n  Appointments,\r\n  AppointmentTooltip,\r\n  AppointmentForm,\r\n  DragDropProvider,\r\n  EditRecurrenceMenu,\r\n  AllDayPanel,\r\n  DateNavigator,\r\n} from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport { connectProps } from \"@devexpress/dx-react-core\";\r\nimport {\r\n  KeyboardDateTimePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\nimport MomentUtils from \"@date-io/moment\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport LocationOn from \"@material-ui/icons/LocationOn\";\r\nimport Notes from \"@material-ui/icons/Notes\";\r\nimport Close from \"@material-ui/icons/Close\";\r\nimport CalendarToday from \"@material-ui/icons/CalendarToday\";\r\nimport Create from \"@material-ui/icons/Create\";\r\nimport { myFetch, UserContext, StaffContext } from \"../Methods\";\r\n//import { appointments } from \"../../../demo-data/appointments\";\r\n\r\nconst appointments = [\r\n  {\r\n    title: \"Website Re-Design Plan\",\r\n    startDate: new Date(2018, 5, 25, 9, 35),\r\n    endDate: new Date(2018, 5, 25, 11, 30),\r\n    id: 0,\r\n    location: \"Room 1\",\r\n  },\r\n  {\r\n    title: \"Book Flights to San Fran for Sales Trip\",\r\n    startDate: new Date(2018, 5, 25, 12, 11),\r\n    endDate: new Date(2018, 5, 25, 13, 0),\r\n    id: 1,\r\n    location: \"Room 1\",\r\n  },\r\n  {\r\n    title: \"Install New Router in Dev Room\",\r\n    startDate: new Date(2018, 5, 25, 14, 30),\r\n    endDate: new Date(2018, 5, 25, 15, 35),\r\n    id: 2,\r\n    location: \"Room 2\",\r\n  },\r\n];\r\n\r\nconst containerStyles = (theme) => ({\r\n  container: {\r\n    width: theme.spacing(68),\r\n    padding: 0,\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  content: {\r\n    padding: theme.spacing(2),\r\n    paddingTop: 0,\r\n  },\r\n  header: {\r\n    overflow: \"hidden\",\r\n    paddingTop: theme.spacing(0.5),\r\n  },\r\n  closeButton: {\r\n    float: \"right\",\r\n  },\r\n  buttonGroup: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n    padding: theme.spacing(0, 2),\r\n  },\r\n  button: {\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n  picker: {\r\n    marginRight: theme.spacing(2),\r\n    \"&:last-child\": {\r\n      marginRight: 0,\r\n    },\r\n    width: \"50%\",\r\n  },\r\n  wrapper: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    padding: theme.spacing(1, 0),\r\n  },\r\n  icon: {\r\n    margin: theme.spacing(2, 0),\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  textField: {\r\n    width: \"100%\",\r\n  },\r\n});\r\n\r\nclass AppointmentFormContainerBasic extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      appointmentChanges: {},\r\n    };\r\n\r\n    this.getAppointmentData = () => {\r\n      const { appointmentData } = this.props;\r\n      return appointmentData;\r\n    };\r\n    this.getAppointmentChanges = () => {\r\n      const { appointmentChanges } = this.state;\r\n      return appointmentChanges;\r\n    };\r\n\r\n    this.changeAppointment = this.changeAppointment.bind(this);\r\n    this.commitAppointment = this.commitAppointment.bind(this);\r\n  }\r\n\r\n  changeAppointment({ field, changes }) {\r\n    const nextChanges = {\r\n      ...this.getAppointmentChanges(),\r\n      [field]: changes,\r\n    };\r\n    this.setState({\r\n      appointmentChanges: nextChanges,\r\n    });\r\n  }\r\n\r\n  commitAppointment(type) {\r\n    const { commitChanges } = this.props;\r\n    const appointment = {\r\n      ...this.getAppointmentData(),\r\n      ...this.getAppointmentChanges(),\r\n    };\r\n    if (type === \"deleted\") {\r\n      commitChanges({ [type]: appointment.id });\r\n    } else if (type === \"changed\") {\r\n      commitChanges({ [type]: { [appointment.id]: appointment } });\r\n    } else {\r\n      commitChanges({ [type]: appointment });\r\n    }\r\n    this.setState({\r\n      appointmentChanges: {},\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      visible,\r\n      visibleChange,\r\n      appointmentData,\r\n      cancelAppointment,\r\n      target,\r\n      onHide,\r\n    } = this.props;\r\n    const { appointmentChanges } = this.state;\r\n\r\n    const displayAppointmentData = {\r\n      ...appointmentData,\r\n      ...appointmentChanges,\r\n    };\r\n\r\n    const isNewAppointment = appointmentData.id === undefined;\r\n    const applyChanges = isNewAppointment\r\n      ? () => this.commitAppointment(\"added\")\r\n      : () => this.commitAppointment(\"changed\");\r\n\r\n    const textEditorProps = (field) => ({\r\n      variant: \"outlined\",\r\n      onChange: ({ target: change }) =>\r\n        this.changeAppointment({\r\n          field: [field],\r\n          changes: change.value,\r\n        }),\r\n      value: displayAppointmentData[field] || \"\",\r\n      label: field[0].toUpperCase() + field.slice(1),\r\n      className: classes.textField,\r\n    });\r\n\r\n    const pickerEditorProps = (field) => ({\r\n      className: classes.picker,\r\n      // keyboard: true,\r\n      ampm: false,\r\n      value: displayAppointmentData[field],\r\n      onChange: (date) =>\r\n        this.changeAppointment({\r\n          field: [field],\r\n          changes: date\r\n            ? date.toDate()\r\n            : new Date(displayAppointmentData[field]),\r\n        }),\r\n      inputVariant: \"outlined\",\r\n      format: \"DD/MM/YYYY HH:mm\",\r\n      onError: () => null,\r\n    });\r\n\r\n    const cancelChanges = () => {\r\n      this.setState({\r\n        appointmentChanges: {},\r\n      });\r\n      visibleChange();\r\n      cancelAppointment();\r\n    };\r\n\r\n    const { setEditOpen, setEditingAppointment } = useContext(StaffContext);\r\n    return (\r\n      <AppointmentForm.Overlay\r\n        visible={visible}\r\n        target={target}\r\n        fullSize\r\n        onHide={onHide}\r\n      >\r\n        <AppointmentTooltip.Header\r\n          appointmentData={appointmentData}\r\n          showCloseButton\r\n          showOpenButton\r\n          onOpenButtonClick={() => {\r\n            setEditOpen(true);\r\n            setEditingAppointment(appointmentData);\r\n          }}\r\n        ></AppointmentTooltip.Header>\r\n        <div>\r\n          <div className={classes.header}>\r\n            <IconButton className={classes.closeButton} onClick={cancelChanges}>\r\n              <Close color=\"action\" />\r\n            </IconButton>\r\n          </div>\r\n          <div className={classes.content}>\r\n            <div className={classes.wrapper}>\r\n              <Create className={classes.icon} color=\"action\" />\r\n              <TextField {...textEditorProps(\"title\")} />\r\n            </div>\r\n            <div className={classes.wrapper}>\r\n              <CalendarToday className={classes.icon} color=\"action\" />\r\n              <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                <KeyboardDateTimePicker\r\n                  label=\"Start Date\"\r\n                  {...pickerEditorProps(\"startDate\")}\r\n                />\r\n                <KeyboardDateTimePicker\r\n                  label=\"End Date\"\r\n                  {...pickerEditorProps(\"endDate\")}\r\n                />\r\n              </MuiPickersUtilsProvider>\r\n            </div>\r\n            <div className={classes.wrapper}>\r\n              <LocationOn className={classes.icon} color=\"action\" />\r\n              <TextField {...textEditorProps(\"location\")} />\r\n            </div>\r\n            <div className={classes.wrapper}>\r\n              <Notes className={classes.icon} color=\"action\" />\r\n              <TextField {...textEditorProps(\"notes\")} multiline rows=\"6\" />\r\n            </div>\r\n          </div>\r\n          <div className={classes.buttonGroup}>\r\n            {!isNewAppointment && (\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                className={classes.button}\r\n                onClick={() => {\r\n                  visibleChange();\r\n                  this.commitAppointment(\"deleted\");\r\n                }}\r\n              >\r\n                Delete\r\n              </Button>\r\n            )}\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              onClick={() => {\r\n                visibleChange();\r\n                applyChanges();\r\n              }}\r\n            >\r\n              {isNewAppointment ? \"Create\" : \"Save\"}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </AppointmentForm.Overlay>\r\n    );\r\n  }\r\n}\r\n\r\nconst AppointmentFormContainer = withStyles(containerStyles, {\r\n  name: \"AppointmentFormContainer\",\r\n})(AppointmentFormContainerBasic);\r\n\r\nconst styles = (theme) => ({\r\n  addButton: {\r\n    position: \"absolute\",\r\n    bottom: theme.spacing(1) * 3,\r\n    right: theme.spacing(1) * 4,\r\n  },\r\n});\r\n\r\n/* eslint-disable-next-line react/no-multi-comp */\r\nclass Demo extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: appointments,\r\n      currentDate: \"2018-06-27\",\r\n      confirmationVisible: false,\r\n      editingFormVisible: false,\r\n      deletedAppointmentId: undefined,\r\n      editingAppointment: undefined,\r\n      previousAppointment: undefined,\r\n      addedAppointment: {},\r\n      startDayHour: 9,\r\n      endDayHour: 19,\r\n      isNewAppointment: false,\r\n    };\r\n\r\n    this.toggleConfirmationVisible = this.toggleConfirmationVisible.bind(this);\r\n    this.commitDeletedAppointment = this.commitDeletedAppointment.bind(this);\r\n    this.toggleEditingFormVisibility = this.toggleEditingFormVisibility.bind(\r\n      this\r\n    );\r\n\r\n    this.commitChanges = this.commitChanges.bind(this);\r\n    this.onEditingAppointmentChange = this.onEditingAppointmentChange.bind(\r\n      this\r\n    );\r\n    this.onAddedAppointmentChange = this.onAddedAppointmentChange.bind(this);\r\n    this.appointmentForm = connectProps(AppointmentFormContainer, () => {\r\n      const {\r\n        editingFormVisible,\r\n        editingAppointment,\r\n        data,\r\n        addedAppointment,\r\n        isNewAppointment,\r\n        previousAppointment,\r\n      } = this.state;\r\n\r\n      const currentAppointment =\r\n        data.filter(\r\n          (appointment) =>\r\n            editingAppointment && appointment.id === editingAppointment.id\r\n        )[0] || addedAppointment;\r\n      const cancelAppointment = () => {\r\n        if (isNewAppointment) {\r\n          this.setState({\r\n            editingAppointment: previousAppointment,\r\n            isNewAppointment: false,\r\n          });\r\n        }\r\n      };\r\n\r\n      return {\r\n        visible: editingFormVisible,\r\n        appointmentData: currentAppointment,\r\n        commitChanges: this.commitChanges,\r\n        visibleChange: this.toggleEditingFormVisibility,\r\n        onEditingAppointmentChange: this.onEditingAppointmentChange,\r\n        cancelAppointment,\r\n      };\r\n    });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.appointmentForm.update();\r\n  }\r\n\r\n  onEditingAppointmentChange(editingAppointment) {\r\n    this.setState({ editingAppointment });\r\n  }\r\n\r\n  onAddedAppointmentChange(addedAppointment) {\r\n    this.setState({ addedAppointment });\r\n    const { editingAppointment } = this.state;\r\n    if (editingAppointment !== undefined) {\r\n      this.setState({\r\n        previousAppointment: editingAppointment,\r\n      });\r\n    }\r\n    this.setState({\r\n      editingAppointment: undefined,\r\n      isNewAppointment: true,\r\n    });\r\n  }\r\n\r\n  setDeletedAppointmentId(id) {\r\n    this.setState({ deletedAppointmentId: id });\r\n  }\r\n\r\n  toggleEditingFormVisibility() {\r\n    const { editingFormVisible } = this.state;\r\n    this.setState({\r\n      editingFormVisible: !editingFormVisible,\r\n    });\r\n  }\r\n\r\n  toggleConfirmationVisible() {\r\n    const { confirmationVisible } = this.state;\r\n    this.setState({ confirmationVisible: !confirmationVisible });\r\n  }\r\n\r\n  commitDeletedAppointment() {\r\n    this.setState((state) => {\r\n      const { data, deletedAppointmentId } = state;\r\n      const nextData = data.filter(\r\n        (appointment) => appointment.id !== deletedAppointmentId\r\n      );\r\n\r\n      return { data: nextData, deletedAppointmentId: null };\r\n    });\r\n    this.toggleConfirmationVisible();\r\n  }\r\n\r\n  commitChanges({ added, changed, deleted }) {\r\n    this.setState((state) => {\r\n      let { data } = state;\r\n      if (added) {\r\n        const startingAddedId =\r\n          data.length > 0 ? data[data.length - 1].id + 1 : 0;\r\n        data = [...data, { id: startingAddedId, ...added }];\r\n      }\r\n      if (changed) {\r\n        data = data.map((appointment) =>\r\n          changed[appointment.id]\r\n            ? { ...appointment, ...changed[appointment.id] }\r\n            : appointment\r\n        );\r\n      }\r\n      if (deleted !== undefined) {\r\n        this.setDeletedAppointmentId(deleted);\r\n        this.toggleConfirmationVisible();\r\n      }\r\n      return { data, addedAppointment: {} };\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      currentDate,\r\n      data,\r\n      confirmationVisible,\r\n      editingFormVisible,\r\n      startDayHour,\r\n      endDayHour,\r\n    } = this.state;\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <Paper>\r\n        <Scheduler data={data} height={660}>\r\n          <ViewState currentDate={currentDate} />\r\n          <EditingState\r\n            onCommitChanges={this.commitChanges}\r\n            onEditingAppointmentChange={this.onEditingAppointmentChange}\r\n            onAddedAppointmentChange={this.onAddedAppointmentChange}\r\n          />\r\n          <WeekView startDayHour={startDayHour} endDayHour={endDayHour} />\r\n          <MonthView />\r\n          <AllDayPanel />\r\n          <EditRecurrenceMenu />\r\n          <Appointments />\r\n          <AppointmentTooltip showOpenButton showCloseButton showDeleteButton />\r\n          <Toolbar />\r\n          <DateNavigator />\r\n          <ViewSwitcher />\r\n          <AppointmentForm\r\n            overlayComponent={this.appointmentForm}\r\n            visible={editingFormVisible}\r\n            onVisibilityChange={this.toggleEditingFormVisibility}\r\n          />\r\n          <DragDropProvider />\r\n        </Scheduler>\r\n\r\n        <Dialog open={confirmationVisible} onClose={this.cancelDelete}>\r\n          <DialogTitle>Delete Appointment</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              Are you sure you want to delete this appointment?\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              onClick={this.toggleConfirmationVisible}\r\n              color=\"primary\"\r\n              variant=\"outlined\"\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              onClick={this.commitDeletedAppointment}\r\n              color=\"secondary\"\r\n              variant=\"outlined\"\r\n            >\r\n              Delete\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <Fab\r\n          color=\"secondary\"\r\n          className={classes.addButton}\r\n          onClick={() => {\r\n            this.setState({ editingFormVisible: true });\r\n            this.onEditingAppointmentChange(undefined);\r\n            this.onAddedAppointmentChange({\r\n              startDate: new Date(currentDate).setHours(startDayHour),\r\n              endDate: new Date(currentDate).setHours(startDayHour + 1),\r\n            });\r\n          }}\r\n        >\r\n          <AddIcon />\r\n        </Fab>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { name: \"EditingDemo\" })(Demo);\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\n\r\nimport { AppointmentForm } from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport { withStyles, Theme, createStyles } from \"@material-ui/core\";\r\nimport { indigo, blue, teal } from \"@material-ui/core/colors\";\r\nimport MomentUtils from \"@date-io/moment\";\r\n\r\nimport LocationOn from \"@material-ui/icons/LocationOn\";\r\nimport Notes from \"@material-ui/icons/Notes\";\r\nimport Close from \"@material-ui/icons/Close\";\r\nimport CalendarToday from \"@material-ui/icons/CalendarToday\";\r\nimport Create from \"@material-ui/icons/Create\";\r\nimport { connectProps } from \"@devexpress/dx-react-core\";\r\nimport {\r\n  KeyboardDateTimePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\n\r\nimport {\r\n  AppointmentTooltip,\r\n  WeekView,\r\n} from \"@devexpress/dx-react-scheduler-material-ui\";\r\n\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Divider,\r\n  Badge,\r\n  Button,\r\n  TextField,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\n\r\nimport FolderIcon from \"@material-ui/icons/Folder\";\r\nimport DataUsageIcon from \"@material-ui/icons/DataUsage\";\r\nimport RoomIcon from \"@material-ui/icons/Room\";\r\nimport EqualizerIcon from \"@material-ui/icons/Equalizer\";\r\nimport FormatAlignLeftIcon from \"@material-ui/icons/FormatAlignLeft\";\r\nimport LibraryAddIcon from \"@material-ui/icons/LibraryAdd\";\r\nimport PlaylistAddIcon from \"@material-ui/icons/PlaylistAdd\";\r\nimport SupervisorAccountIcon from \"@material-ui/icons/SupervisorAccount\";\r\n\r\nimport { myFetch, UserContext, StaffContext } from \"../Methods\";\r\n\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nconst style = ({ palette, spacing }) => ({\r\n  icon: {\r\n    color: palette.action.active,\r\n  },\r\n  textCenter: {\r\n    textAlign: \"center\",\r\n  },\r\n  header: {\r\n    height: \"260px\",\r\n    backgroundSize: \"cover\",\r\n  },\r\n});\r\n\r\nconst AppointmentFormContainerBasic = ({\r\n  classes,\r\n  visible,\r\n  visibleChange,\r\n  appointmentData,\r\n  cancelAppointment,\r\n  target,\r\n  onHide,\r\n  commitChanges,\r\n}) => {\r\n  const [appointmentChanges, setAppointmentChanges] = useState({});\r\n\r\n  const changeAppointment = ({ field, changes }) => {\r\n    const nextChanges = {\r\n      ...appointmentData,\r\n      [field]: changes,\r\n    };\r\n    setAppointmentChanges(nextChanges);\r\n  };\r\n\r\n  const commitAppointment = (type) => {\r\n    const appointment = {\r\n      ...appointmentData,\r\n      ...appointmentChanges,\r\n    };\r\n    if (type === \"deleted\") {\r\n      commitChanges({ [type]: appointment.id });\r\n    } else if (type === \"changed\") {\r\n      commitChanges({ [type]: { [appointment.id]: appointment } });\r\n    } else {\r\n      commitChanges({ [type]: appointment });\r\n    }\r\n    setAppointmentChanges({});\r\n  };\r\n\r\n  const displayAppointmentData = {\r\n    ...appointmentData,\r\n    ...appointmentChanges,\r\n  };\r\n  const isNewAppointment = appointmentData.id === undefined;\r\n\r\n  const applyChanges = isNewAppointment\r\n    ? () => commitAppointment(\"added\")\r\n    : () => commitAppointment(\"changed\");\r\n\r\n  const textEditorProps = (field) => ({\r\n    variant: \"outlined\",\r\n    onChange: ({ target: change }) =>\r\n      changeAppointment({\r\n        field: [field],\r\n        changes: change.value,\r\n      }),\r\n    value: displayAppointmentData[field] || \"\",\r\n    label: field[0].toUpperCase() + field.slice(1),\r\n    className: classes.textField,\r\n  });\r\n\r\n  const pickerEditorProps = (field) => ({\r\n    className: classes.picker,\r\n    // keyboard: true,\r\n    ampm: false,\r\n    value: displayAppointmentData[field],\r\n    onChange: (date) =>\r\n      changeAppointment({\r\n        field: [field],\r\n        changes: date ? date.toDate() : new Date(displayAppointmentData[field]),\r\n      }),\r\n    inputVariant: \"outlined\",\r\n    format: \"DD/MM/YYYY HH:mm\",\r\n    onError: () => null,\r\n  });\r\n\r\n  const cancelChanges = () => {\r\n    setAppointmentChanges({});\r\n    visibleChange();\r\n    cancelAppointment();\r\n  };\r\n\r\n  const api = {\r\n    create: \"/api/staff/consult/create\",\r\n    edit: \"/api/staff/consult/patch\",\r\n    delete: \"/api/staff/consult/delete\",\r\n  };\r\n\r\n  return (\r\n    <Grid container justify=\"center\">\r\n      <Grid item xs={11}>\r\n        <List>\r\n          <ListItem>\r\n            <ListItemIcon>\r\n              <RoomIcon />\r\n            </ListItemIcon>\r\n            <ListItemText\r\n              primary=\"Location\"\r\n              secondary={appointmentData.location}\r\n            />\r\n          </ListItem>\r\n          <ListItem>\r\n            <ListItemIcon>\r\n              <SupervisorAccountIcon />\r\n            </ListItemIcon>{\" \"}\r\n            <ListItemText primary=\"Slots Available\" secondary=\" \" />\r\n            <ListItemIcon>\r\n              <Badge\r\n                badgeContent={appointmentData.slotsAvailable}\r\n                color=\"primary\"\r\n                showZero\r\n              >\r\n                <EqualizerIcon />\r\n              </Badge>\r\n            </ListItemIcon>\r\n          </ListItem>\r\n          <ListItem>\r\n            <ListItemIcon>\r\n              <LibraryAddIcon />\r\n            </ListItemIcon>\r\n\r\n            <ListItemText primary=\"Student Registered\" secondary=\" \" />\r\n\r\n            <ListItemIcon>\r\n              <Badge\r\n                badgeContent={appointmentData.totalStudent}\r\n                color=\"primary\"\r\n                showZero\r\n              >\r\n                <EqualizerIcon />\r\n              </Badge>\r\n            </ListItemIcon>\r\n          </ListItem>\r\n        </List>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default withStyles({\r\n  name: \"AppointmentFormContainer\",\r\n})(AppointmentFormContainerBasic);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { ViewState, EditingState } from \"@devexpress/dx-react-scheduler\";\r\nimport {\r\n\tScheduler,\r\n\tDayView,\r\n\tAppointments,\r\n\tMonthView,\r\n\tToolbar,\r\n\tDateNavigator,\r\n\tViewSwitcher,\r\n\tTodayButton,\r\n\tResources,\r\n\tAppointmentTooltip,\r\n\tAppointmentForm,\r\n\tWeekView,\r\n\tAllDayPanel,\r\n\tEditRecurrenceMenu,\r\n\tDragDropProvider,\r\n} from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport { withStyles, createStyles, useTheme } from \"@material-ui/styles\";\r\nimport { indigo, blue, teal } from \"@material-ui/core/colors\";\r\nimport MomentUtils from \"@date-io/moment\";\r\n\r\nimport {\r\n\tPaper,\r\n\tButton,\r\n\tTextField,\r\n\tIconButton,\r\n\tDialog,\r\n\tDialogTitle,\r\n\tDialogContent,\r\n\tDialogContentText,\r\n\tDialogActions,\r\n\tFab,\r\n\tmakeStyles,\r\n} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport LocationOn from \"@material-ui/icons/LocationOn\";\r\nimport Notes from \"@material-ui/icons/Notes\";\r\nimport Close from \"@material-ui/icons/Close\";\r\nimport CalendarToday from \"@material-ui/icons/CalendarToday\";\r\nimport Create from \"@material-ui/icons/Create\";\r\nimport { connectProps } from \"@devexpress/dx-react-core\";\r\nimport {\r\n\tKeyboardDateTimePicker,\r\n\tMuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\n\r\nimport { fade } from \"@material-ui/core/styles/colorManipulator\";\r\n\r\nimport classNames from \"clsx\";\r\n\r\nimport AppointmentFormContainer from \"./StaffForm\";\r\nconst appointments = [\r\n\t{\r\n\t\ttitle: \"COMP10001\",\r\n\t\tstartDate: new Date(\"2018-07-27 9:00\"),\r\n\t\tendDate: new Date(\"2018-07-27 12:00\"),\r\n\t\tid: 0,\r\n\t\tlocation: \"Room 1\",\r\n\t},\r\n\t{\r\n\t\ttitle: \"COMP10001\",\r\n\t\tstartDate: new Date(\"2018-07-28 13:00\"),\r\n\t\tendDate: new Date(\"2018-07-28 14:00\"),\r\n\t\tid: 1,\r\n\t\tlocation: \"Room 1\",\r\n\t},\r\n\t{\r\n\t\ttitle: \"COMP10001\",\r\n\t\tstartDate: new Date(\"2018-07-24 12:00\"),\r\n\t\tendDate: new Date(\"2018-07-24 18:00\"),\r\n\t\tid: 2,\r\n\t\tlocation: \"Room 2\",\r\n\t},\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tfab: {\r\n\t\tposition: \"fixed\",\r\n\t\tbottom: theme.spacing(1) * 10,\r\n\t\tright: theme.spacing(1) * 11,\r\n\t},\r\n}));\r\n\r\nexport default () => {\r\n\tconst classes = useStyles();\r\n\r\n\tconst [data, setData] = useState(appointments);\r\n\tconst [currentDate, setCurrentDate] = useState(\"2018-07-25\");\r\n\tconst [confirmationVisible, SetConfirmationVisible] = useState(false);\r\n\tconst [editingFormVisible, setEditingFormVisible] = useState(false);\r\n\tconst [deletedAppointmentId, setDeletedAppointmentId] = useState();\r\n\tconst [editingAppointment, setEditingAppointment] = useState();\r\n\tconst [previousAppointment, setPreviousAppointment] = useState();\r\n\tconst [addedAppointment, setAddedAppointment] = useState({});\r\n\tconst [startDayHour, setStartDayHour] = useState(9);\r\n\tconst [endDayHour, setEndDayHour] = useState(19);\r\n\tconst [isNewAppointment, setIsNewAppointment] = useState(false);\r\n\r\n\tconst toggleEditingFormVisibility = () => {\r\n\t\tsetEditingFormVisible(!editingFormVisible);\r\n\t};\r\n\tconst onEditingAppointmentChange = (newEditingAppointment) => {\r\n\t\tsetEditingAppointment(newEditingAppointment);\r\n\t};\r\n\tconsole.log(data);\r\n\tconst commitChanges = ({ added, changed, deleted }) => {\r\n\t\tlet temp = data;\r\n\t\tif (added) {\r\n\t\t\tconst startingAddedId =\r\n\t\t\t\ttemp.length > 0 ? temp[temp.length - 1].id + 1 : 0;\r\n\t\t\ttemp = [...temp, { id: startingAddedId, ...added }];\r\n\t\t\tconsole.log(added);\r\n\t\t}\r\n\t\tif (changed) {\r\n\t\t\ttemp = temp.map((appointment) =>\r\n\t\t\t\tchanged[appointment.id]\r\n\t\t\t\t\t? { ...appointment, ...changed[appointment.id] }\r\n\t\t\t\t\t: appointment\r\n\t\t\t);\r\n\t\t}\r\n\t\tif (deleted !== undefined) {\r\n\t\t\tsetDeletedAppointmentId(deleted);\r\n\t\t\ttoggleConfirmationVisible();\r\n\t\t}\r\n\t\tsetData(temp);\r\n\t\tsetAddedAppointment({});\r\n\t};\r\n\r\n\tconst onAddedAppointmentChange = (newAddedAppointment) => {\r\n\t\tsetAddedAppointment(newAddedAppointment);\r\n\r\n\t\tif (editingAppointment !== undefined) {\r\n\t\t\tsetPreviousAppointment(editingAppointment);\r\n\t\t}\r\n\r\n\t\tsetEditingAppointment(undefined);\r\n\t\tsetIsNewAppointment(true);\r\n\t};\r\n\r\n\tconst toggleConfirmationVisible = () => {\r\n\t\tSetConfirmationVisible(!confirmationVisible);\r\n\t};\r\n\r\n\tconst commitDeletedAppointment = () => {\r\n\t\tconst nextData = data.filter(\r\n\t\t\t(appointment) => appointment.id !== deletedAppointmentId\r\n\t\t);\r\n\t\tsetData(nextData);\r\n\t\tsetDeletedAppointmentId(null);\r\n\r\n\t\ttoggleConfirmationVisible();\r\n\t};\r\n\r\n\tconst appointmentForm = connectProps(AppointmentFormContainer, () => {\r\n\t\tconst currentAppointment =\r\n\t\t\tdata.filter((appointment) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\teditingAppointment &&\r\n\t\t\t\t\tappointment.id === editingAppointment.id\r\n\t\t\t\t);\r\n\t\t\t})[0] || addedAppointment;\r\n\r\n\t\tconst cancelAppointment = () => {\r\n\t\t\tif (isNewAppointment) {\r\n\t\t\t\tsetEditingAppointment(previousAppointment);\r\n\t\t\t\tsetIsNewAppointment(false);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\treturn {\r\n\t\t\tvisible: editingFormVisible,\r\n\t\t\tappointmentData: currentAppointment,\r\n\t\t\tcommitChanges: commitChanges,\r\n\t\t\tvisibleChange: toggleEditingFormVisibility,\r\n\t\t\tonEditingAppointmentChange: onEditingAppointmentChange,\r\n\t\t\tcancelAppointment,\r\n\t\t};\r\n\t});\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Paper>\r\n\t\t\t\t<Scheduler data={data}>\r\n\t\t\t\t\t<ViewState currentDate={currentDate} />\r\n\t\t\t\t\t<EditingState\r\n\t\t\t\t\t\tonCommitChanges={commitChanges}\r\n\t\t\t\t\t\tonEditingAppointmentChange={onEditingAppointmentChange}\r\n\t\t\t\t\t\tonAddedAppointmentChange={onAddedAppointmentChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<WeekView\r\n\t\t\t\t\t\tstartDayHour={8}\r\n\t\t\t\t\t\tendDayHour={24}\r\n\t\t\t\t\t\tcellDuration={60}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<Appointments />\r\n\t\t\t\t\t<AppointmentTooltip showOpenButton showCloseButton />\r\n\t\t\t\t\t<Toolbar />\r\n\t\t\t\t\t<DateNavigator />\r\n\r\n\t\t\t\t\t<AppointmentForm\r\n\t\t\t\t\t\toverlayComponent={appointmentForm}\r\n\t\t\t\t\t\tvisible={editingFormVisible}\r\n\t\t\t\t\t\tonVisibilityChange={toggleEditingFormVisibility}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Scheduler>\r\n\r\n\t\t\t\t<Dialog open={confirmationVisible}>\r\n\t\t\t\t\t<DialogTitle>Delete Appointment</DialogTitle>\r\n\t\t\t\t\t<DialogContent>\r\n\t\t\t\t\t\t<DialogContentText>\r\n\t\t\t\t\t\t\tAre you sure you want to delete this appointment?\r\n\t\t\t\t\t\t</DialogContentText>\r\n\t\t\t\t\t</DialogContent>\r\n\t\t\t\t\t<DialogActions>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tonClick={toggleConfirmationVisible}\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tonClick={commitDeletedAppointment}\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tDelete\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</DialogActions>\r\n\t\t\t\t</Dialog>\r\n\t\t\t\t<Fab\r\n\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\tclassName={classes.fab}\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tsetEditingFormVisible(true);\r\n\r\n\t\t\t\t\t\tonEditingAppointmentChange(undefined);\r\n\t\t\t\t\t\tonAddedAppointmentChange({\r\n\t\t\t\t\t\t\tstartDate: new Date(currentDate).setHours(\r\n\t\t\t\t\t\t\t\tstartDayHour\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\tendDate: new Date(currentDate).setHours(\r\n\t\t\t\t\t\t\t\tstartDayHour + 1\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<AddIcon />\r\n\t\t\t\t</Fab>\r\n\t\t\t</Paper>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { ViewState, EditingState } from \"@devexpress/dx-react-scheduler\";\r\nimport {\r\n  Scheduler,\r\n  DayView,\r\n  Appointments,\r\n  MonthView,\r\n  Toolbar,\r\n  DateNavigator,\r\n  ViewSwitcher,\r\n  TodayButton,\r\n  Resources,\r\n  AppointmentTooltip,\r\n  AppointmentForm,\r\n  WeekView,\r\n  AllDayPanel,\r\n  EditRecurrenceMenu,\r\n  DragDropProvider,\r\n} from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport { withStyles, createStyles, useTheme } from \"@material-ui/styles\";\r\nimport { indigo, blue, teal } from \"@material-ui/core/colors\";\r\nimport MomentUtils from \"@date-io/moment\";\r\n\r\nimport {\r\n  Paper,\r\n  Button,\r\n  TextField,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Fab,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport LocationOn from \"@material-ui/icons/LocationOn\";\r\nimport Notes from \"@material-ui/icons/Notes\";\r\nimport Close from \"@material-ui/icons/Close\";\r\nimport CalendarToday from \"@material-ui/icons/CalendarToday\";\r\nimport Create from \"@material-ui/icons/Create\";\r\nimport { connectProps } from \"@devexpress/dx-react-core\";\r\nimport {\r\n  KeyboardDateTimePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\n\r\nimport { fade } from \"@material-ui/core/styles/colorManipulator\";\r\n\r\nimport classNames from \"clsx\";\r\n\r\nimport AppointmentFormContainer from \"./StaffForm\";\r\nconst appointments = [\r\n  {\r\n    title: \"COMP10001\",\r\n    startDate: new Date(\"2018-07-27 10:00\"),\r\n    endDate: new Date(\"2018-07-27 11:00\"),\r\n    id: 0,\r\n    location: \"Room 10\",\r\n  },\r\n  {\r\n    title: \"COMP10001\",\r\n    startDate: new Date(\"2018-07-18 13:00\"),\r\n    endDate: new Date(\"2018-07-18 14:00\"),\r\n    id: 1,\r\n    location: \"Room 1\",\r\n  },\r\n  {\r\n    title: \"COMP10001\",\r\n    startDate: new Date(\"2018-07-25 12:00\"),\r\n    endDate: new Date(\"2018-07-24 15:00\"),\r\n    id: 2,\r\n    location: \"Room 2\",\r\n  },\r\n  {\r\n    title: \"COMP10003\",\r\n    startDate: new Date(\"2018-07-24 12:00\"),\r\n    endDate: new Date(\"2018-07-24 18:00\"),\r\n    id: 3,\r\n    location: \"Room 3\",\r\n  },\r\n  {\r\n    title: \"COMP10004\",\r\n    startDate: new Date(\"2018-07-24 12:00\"),\r\n    endDate: new Date(\"2018-07-24 18:00\"),\r\n    id: 4,\r\n    location: \"Room 4\",\r\n  },\r\n  {\r\n    title: \"COMP10005\",\r\n    startDate: new Date(\"2018-07-24 12:00\"),\r\n    endDate: new Date(\"2018-07-24 18:00\"),\r\n    id: 5,\r\n    location: \"Room 5\",\r\n  },\r\n  {\r\n    title: \"COMP10006\",\r\n    startDate: new Date(\"2018-07-24 12:00\"),\r\n    endDate: new Date(\"2018-07-24 18:00\"),\r\n    id: 6,\r\n    location: \"Room 2\",\r\n  },\r\n  {\r\n    title: \"COMP10007\",\r\n    startDate: new Date(\"2018-07-24 12:00\"),\r\n    endDate: new Date(\"2018-07-24 18:00\"),\r\n    id: 7,\r\n    location: \"Room 7\",\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  fab: {\r\n    position: \"fixed\",\r\n    bottom: theme.spacing(2) * 10,\r\n    right: theme.spacing(2) * 11,\r\n  },\r\n}));\r\n\r\nexport default () => {\r\n  const classes = useStyles();\r\n\r\n  const [data, setData] = useState(appointments);\r\n  const [currentDate, setCurrentDate] = useState(\"2018-07-21\");\r\n  const [confirmationVisible, SetConfirmationVisible] = useState(false);\r\n  const [editingFormVisible, setEditingFormVisible] = useState(false);\r\n  const [deletedAppointmentId, setDeletedAppointmentId] = useState();\r\n  const [editingAppointment, setEditingAppointment] = useState();\r\n  const [previousAppointment, setPreviousAppointment] = useState();\r\n  const [addedAppointment, setAddedAppointment] = useState({});\r\n  const [startDayHour, setStartDayHour] = useState(9);\r\n  const [endDayHour, setEndDayHour] = useState(19);\r\n  const [isNewAppointment, setIsNewAppointment] = useState(false);\r\n\r\n  const toggleEditingFormVisibility = () => {\r\n    setEditingFormVisible(!editingFormVisible);\r\n  };\r\n  const onEditingAppointmentChange = (newEditingAppointment) => {\r\n    setEditingAppointment(newEditingAppointment);\r\n  };\r\n  console.log(data);\r\n  const commitChanges = ({ added, changed, deleted }) => {\r\n    let temp = data;\r\n    if (added) {\r\n      const startingAddedId =\r\n        temp.length > 0 ? temp[temp.length - 1].id + 1 : 0;\r\n      temp = [...temp, { id: startingAddedId, ...added }];\r\n      console.log(added);\r\n    }\r\n    if (changed) {\r\n      temp = temp.map((appointment) =>\r\n        changed[appointment.id]\r\n          ? { ...appointment, ...changed[appointment.id] }\r\n          : appointment\r\n      );\r\n    }\r\n    if (deleted !== undefined) {\r\n      setDeletedAppointmentId(deleted);\r\n      toggleConfirmationVisible();\r\n    }\r\n    setData(temp);\r\n    setAddedAppointment({});\r\n  };\r\n\r\n  const onAddedAppointmentChange = (newAddedAppointment) => {\r\n    setAddedAppointment(newAddedAppointment);\r\n\r\n    if (editingAppointment !== undefined) {\r\n      setPreviousAppointment(editingAppointment);\r\n    }\r\n\r\n    setEditingAppointment(undefined);\r\n    setIsNewAppointment(true);\r\n  };\r\n\r\n  const toggleConfirmationVisible = () => {\r\n    SetConfirmationVisible(!confirmationVisible);\r\n  };\r\n\r\n  const commitDeletedAppointment = () => {\r\n    const nextData = data.filter(\r\n      (appointment) => appointment.id !== deletedAppointmentId\r\n    );\r\n    setData(nextData);\r\n    setDeletedAppointmentId(null);\r\n\r\n    toggleConfirmationVisible();\r\n  };\r\n\r\n  const appointmentForm = connectProps(AppointmentFormContainer, () => {\r\n    const currentAppointment =\r\n      data.filter((appointment) => {\r\n        return editingAppointment && appointment.id === editingAppointment.id;\r\n      })[0] || addedAppointment;\r\n\r\n    const cancelAppointment = () => {\r\n      if (isNewAppointment) {\r\n        setEditingAppointment(previousAppointment);\r\n        setIsNewAppointment(false);\r\n      }\r\n    };\r\n\r\n    return {\r\n      visible: editingFormVisible,\r\n      appointmentData: currentAppointment,\r\n      commitChanges: commitChanges,\r\n      visibleChange: toggleEditingFormVisibility,\r\n      onEditingAppointmentChange: onEditingAppointmentChange,\r\n      cancelAppointment,\r\n    };\r\n  });\r\n  return (\r\n    <div>\r\n      <Paper>\r\n        <Scheduler data={data}>\r\n          <ViewState currentDate={currentDate} />\r\n          <EditingState\r\n            onCommitChanges={commitChanges}\r\n            onEditingAppointmentChange={onEditingAppointmentChange}\r\n            onAddedAppointmentChange={onAddedAppointmentChange}\r\n          />\r\n          <WeekView startDayHour={8} endDayHour={24} cellDuration={60} />\r\n\r\n          <Appointments />\r\n          <AppointmentTooltip showOpenButton showCloseButton />\r\n          <Toolbar />\r\n          <DateNavigator />\r\n\r\n          <AppointmentForm\r\n            overlayComponent={appointmentForm}\r\n            visible={editingFormVisible}\r\n            onVisibilityChange={toggleEditingFormVisibility}\r\n          />\r\n        </Scheduler>\r\n\r\n        <Dialog open={confirmationVisible}>\r\n          <DialogTitle>Delete Appointment</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              Are you sure you want to delete this appointment?\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={toggleConfirmationVisible} variant=\"outlined\">\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              onClick={commitDeletedAppointment}\r\n              color=\"primary\"\r\n              variant=\"outlined\"\r\n            >\r\n              Delete\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { ViewState, EditingState } from \"@devexpress/dx-react-scheduler\";\r\nimport {\r\n  Scheduler,\r\n  DayView,\r\n  Appointments,\r\n  MonthView,\r\n  Toolbar,\r\n  DateNavigator,\r\n  ViewSwitcher,\r\n  TodayButton,\r\n  Resources,\r\n  AppointmentTooltip,\r\n  AppointmentForm,\r\n  WeekView,\r\n  AllDayPanel,\r\n  EditRecurrenceMenu,\r\n  DragDropProvider,\r\n} from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport { withStyles, createStyles, useTheme } from \"@material-ui/styles\";\r\nimport { indigo, blue, teal } from \"@material-ui/core/colors\";\r\nimport MomentUtils from \"@date-io/moment\";\r\n\r\nimport {\r\n  Paper,\r\n  Button,\r\n  TextField,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Fab,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport LocationOn from \"@material-ui/icons/LocationOn\";\r\nimport Notes from \"@material-ui/icons/Notes\";\r\nimport Close from \"@material-ui/icons/Close\";\r\nimport CalendarToday from \"@material-ui/icons/CalendarToday\";\r\nimport Create from \"@material-ui/icons/Create\";\r\nimport { connectProps } from \"@devexpress/dx-react-core\";\r\nimport {\r\n  KeyboardDateTimePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\n\r\nimport { fade } from \"@material-ui/core/styles/colorManipulator\";\r\n\r\nimport classNames from \"clsx\";\r\n\r\nimport AppointmentFormContainer from \"./StaffForm\";\r\nconst appointments = [\r\n  {\r\n    title: \"COMP10001\",\r\n    startDate: new Date(\"2018-07-27 9:00\"),\r\n    endDate: new Date(\"2018-07-27 12:00\"),\r\n    id: 0,\r\n    location: \"Room 1\",\r\n  },\r\n  {\r\n    title: \"COMP10001\",\r\n    startDate: new Date(\"2018-07-28 13:00\"),\r\n    endDate: new Date(\"2018-07-28 14:00\"),\r\n    id: 1,\r\n    location: \"Room 1\",\r\n  },\r\n  {\r\n    title: \"COMP10001\",\r\n    startDate: new Date(\"2018-07-24 12:00\"),\r\n    endDate: new Date(\"2018-07-24 18:00\"),\r\n    id: 2,\r\n    location: \"Room 2\",\r\n  },\r\n  {\r\n    title: \"COMP10004\",\r\n    startDate: new Date(\"2018-07-24 12:00\"),\r\n    endDate: new Date(\"2018-07-24 18:00\"),\r\n    id: 4,\r\n    location: \"Room 4\",\r\n  },\r\n  {\r\n    title: \"COMP10005\",\r\n    startDate: new Date(\"2018-07-24 12:00\"),\r\n    endDate: new Date(\"2018-07-24 18:00\"),\r\n    id: 5,\r\n    location: \"Room 5\",\r\n  },\r\n  {\r\n    title: \"COMP10006\",\r\n    startDate: new Date(\"2018-07-24 12:00\"),\r\n    endDate: new Date(\"2018-07-24 18:00\"),\r\n    id: 6,\r\n    location: \"Room 2\",\r\n  },\r\n  {\r\n    title: \"COMP10007\",\r\n    startDate: new Date(\"2018-07-24 12:00\"),\r\n    endDate: new Date(\"2018-07-24 18:00\"),\r\n    id: 7,\r\n    location: \"Room 7\",\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  fab: {\r\n    position: \"fixed\",\r\n    bottom: theme.spacing(1) * 10,\r\n    right: theme.spacing(1) * 11,\r\n  },\r\n}));\r\n\r\nexport default () => {\r\n  const classes = useStyles();\r\n\r\n  const [data, setData] = useState(appointments);\r\n  const [currentDate, setCurrentDate] = useState(\"2018-07-25\");\r\n  const [confirmationVisible, SetConfirmationVisible] = useState(false);\r\n  const [editingFormVisible, setEditingFormVisible] = useState(false);\r\n  const [deletedAppointmentId, setDeletedAppointmentId] = useState();\r\n  const [editingAppointment, setEditingAppointment] = useState();\r\n  const [previousAppointment, setPreviousAppointment] = useState();\r\n  const [addedAppointment, setAddedAppointment] = useState({});\r\n  const [startDayHour, setStartDayHour] = useState(9);\r\n  const [endDayHour, setEndDayHour] = useState(19);\r\n  const [isNewAppointment, setIsNewAppointment] = useState(false);\r\n\r\n  const toggleEditingFormVisibility = () => {\r\n    setEditingFormVisible(!editingFormVisible);\r\n  };\r\n  const onEditingAppointmentChange = (newEditingAppointment) => {\r\n    setEditingAppointment(newEditingAppointment);\r\n  };\r\n  console.log(data);\r\n  const commitChanges = ({ added, changed, deleted }) => {\r\n    let temp = data;\r\n    if (added) {\r\n      const startingAddedId =\r\n        temp.length > 0 ? temp[temp.length - 1].id + 1 : 0;\r\n      temp = [...temp, { id: startingAddedId, ...added }];\r\n      console.log(added);\r\n    }\r\n    if (changed) {\r\n      temp = temp.map((appointment) =>\r\n        changed[appointment.id]\r\n          ? { ...appointment, ...changed[appointment.id] }\r\n          : appointment\r\n      );\r\n    }\r\n    if (deleted !== undefined) {\r\n      setDeletedAppointmentId(deleted);\r\n      toggleConfirmationVisible();\r\n    }\r\n    setData(temp);\r\n    setAddedAppointment({});\r\n  };\r\n\r\n  const onAddedAppointmentChange = (newAddedAppointment) => {\r\n    setAddedAppointment(newAddedAppointment);\r\n\r\n    if (editingAppointment !== undefined) {\r\n      setPreviousAppointment(editingAppointment);\r\n    }\r\n\r\n    setEditingAppointment(undefined);\r\n    setIsNewAppointment(true);\r\n  };\r\n\r\n  const toggleConfirmationVisible = () => {\r\n    SetConfirmationVisible(!confirmationVisible);\r\n  };\r\n\r\n  const commitDeletedAppointment = () => {\r\n    const nextData = data.filter(\r\n      (appointment) => appointment.id !== deletedAppointmentId\r\n    );\r\n    setData(nextData);\r\n    setDeletedAppointmentId(null);\r\n\r\n    toggleConfirmationVisible();\r\n  };\r\n\r\n  const appointmentForm = connectProps(AppointmentFormContainer, () => {\r\n    const currentAppointment =\r\n      data.filter((appointment) => {\r\n        return editingAppointment && appointment.id === editingAppointment.id;\r\n      })[0] || addedAppointment;\r\n\r\n    const cancelAppointment = () => {\r\n      if (isNewAppointment) {\r\n        setEditingAppointment(previousAppointment);\r\n        setIsNewAppointment(false);\r\n      }\r\n    };\r\n\r\n    return {\r\n      visible: editingFormVisible,\r\n      appointmentData: currentAppointment,\r\n      commitChanges: commitChanges,\r\n      visibleChange: toggleEditingFormVisibility,\r\n      onEditingAppointmentChange: onEditingAppointmentChange,\r\n      cancelAppointment,\r\n    };\r\n  });\r\n  return (\r\n    <div>\r\n      <Paper>\r\n        <Scheduler data={data}>\r\n          <ViewState currentDate={currentDate} />\r\n          <EditingState\r\n            onCommitChanges={commitChanges}\r\n            onEditingAppointmentChange={onEditingAppointmentChange}\r\n            onAddedAppointmentChange={onAddedAppointmentChange}\r\n          />\r\n          <WeekView startDayHour={8} endDayHour={24} cellDuration={60} />\r\n\r\n          <Appointments />\r\n          <AppointmentTooltip showOpenButton showCloseButton />\r\n          <Toolbar />\r\n          <DateNavigator />\r\n\r\n          <AppointmentForm\r\n            overlayComponent={appointmentForm}\r\n            visible={editingFormVisible}\r\n            onVisibilityChange={toggleEditingFormVisibility}\r\n          />\r\n        </Scheduler>\r\n\r\n        <Dialog open={confirmationVisible}>\r\n          <DialogTitle>Delete Appointment</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              Are you sure you want to delete this appointment?\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={toggleConfirmationVisible} variant=\"outlined\">\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              onClick={commitDeletedAppointment}\r\n              color=\"primary\"\r\n              variant=\"outlined\"\r\n            >\r\n              Delete\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        <Fab\r\n          color=\"primary\"\r\n          className={classes.fab}\r\n          onClick={() => {\r\n            setEditingFormVisible(true);\r\n\r\n            onEditingAppointmentChange(undefined);\r\n            onAddedAppointmentChange({\r\n              startDate: new Date(currentDate).setHours(startDayHour),\r\n              endDate: new Date(currentDate).setHours(startDayHour + 1),\r\n            });\r\n          }}\r\n        >\r\n          <AddIcon />\r\n        </Fab>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\nimport { withStyles, lighten, makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst BorderLinearProgress = withStyles({\r\n\troot: {\r\n\t\theight: 5,\r\n\t\tbackgroundColor: lighten(\"#0a6aab\", 0.5),\r\n\t},\r\n\tbar: {\r\n\t\tborderRadius: 100,\r\n\t\tbackgroundColor: \"#0a6aab\",\r\n\t},\r\n})(LinearProgress);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tflexGrow: 1,\r\n\t},\r\n\tmargin: {\r\n\t\tmargin: theme.spacing(8),\r\n\t},\r\n}));\r\n\r\nexport default (props) => {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<BorderLinearProgress className={classes.margin} />\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React, { useContext, useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nimport TodayIcon from \"@material-ui/icons/Today\";\r\nimport AlarmIcon from \"@material-ui/icons/Alarm\";\r\nimport GroupAddIcon from \"@material-ui/icons/GroupAdd\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport PowerSettingsNewIcon from \"@material-ui/icons/PowerSettingsNew\";\r\nimport TimelineIcon from \"@material-ui/icons/Timeline\";\r\nimport { Grid, Paper, Grow, Snackbar } from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\n\r\nimport AppBar from \"./AppBar\";\r\nimport { UserContext, AuthApi } from \"../Methods\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nimport Loading from \"./Loading\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tdisplay: \"flex\",\r\n\t},\r\n\thide: {\r\n\t\tdisplay: \"none\",\r\n\t},\r\n\tdrawer: {\r\n\t\twidth: drawerWidth,\r\n\t\tflexShrink: 0,\r\n\t\twhiteSpace: \"nowrap\",\r\n\t},\r\n\tdrawerOpen: {\r\n\t\twidth: drawerWidth,\r\n\t\ttransition: theme.transitions.create(\"width\", {\r\n\t\t\teasing: theme.transitions.easing.sharp,\r\n\t\t\tduration: theme.transitions.duration.enteringScreen,\r\n\t\t}),\r\n\t},\r\n\tdrawerClose: {\r\n\t\ttransition: theme.transitions.create(\"width\", {\r\n\t\t\teasing: theme.transitions.easing.sharp,\r\n\t\t\tduration: theme.transitions.duration.leavingScreen,\r\n\t\t}),\r\n\t\toverflowX: \"hidden\",\r\n\t\twidth: theme.spacing(7) + 1,\r\n\t\t[theme.breakpoints.up(\"sm\")]: {\r\n\t\t\twidth: theme.spacing(9) + 1,\r\n\t\t},\r\n\t},\r\n\ttoolbar: {\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"flex-end\",\r\n\t\tpadding: theme.spacing(0, 1),\r\n\t\t// necessary for content to be below app bar\r\n\t\t...theme.mixins.toolbar,\r\n\t},\r\n\tcontent: {\r\n\t\tflexGrow: 1,\r\n\t\tpadding: theme.spacing(10),\r\n\t\tmaxWidth: \"100%\",\r\n\t},\r\n\tbottom: {\r\n\t\tposition: \"fixed\",\r\n\t\tbottom: 0,\r\n\t\tboxShadow: 20,\r\n\t},\r\n\ticon: {\r\n\t\tmarginLeft: theme.spacing(1),\r\n\t},\r\n}));\r\n\r\nexport default ({ content, type }) => {\r\n\tconst classes = useStyles();\r\n\tconst theme = useTheme();\r\n\r\n\t//Navigation Drawer...\r\n\tconst history = useHistory();\r\n\tconst {\r\n\t\tselectedRoute,\r\n\t\talert,\r\n\t\tcloseAlert,\r\n\t\tsetLoadingRoute,\r\n\t\tsetUser,\r\n\t} = useContext(UserContext);\r\n\tconst { loadingRoute } = useContext(UserContext);\r\n\tconst [open, setOpen] = useState(true);\r\n\r\n\tconst handleRouting = (newRoute) => {\r\n\t\tif (selectedRoute !== newRoute) {\r\n\t\t\tsetLoadingRoute(true);\r\n\t\t\thistory.push(\"/\" + newRoute);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleDrawerOpen = () => {\r\n\t\tsetOpen(true);\r\n\t};\r\n\tconst handleDrawerClose = () => {\r\n\t\tsetOpen(false);\r\n\t};\r\n\r\n\t//Log out...\r\n\tconst { setAuth } = useContext(AuthApi);\r\n\tconst logOut = () => {\r\n\t\tsetAuth(false);\r\n\t\tsetUser({});\r\n\t\tCookies.remove(\"meetute\");\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<CssBaseline />\r\n\t\t\t<AppBar\r\n\t\t\t\topenDrawer={open}\r\n\t\t\t\thandleDrawerOpen={handleDrawerOpen}\r\n\t\t\t\thandleDrawerClose={handleDrawerClose}\r\n\t\t\t\tlogOut={logOut}\r\n\t\t\t/>\r\n\r\n\t\t\t<Snackbar\r\n\t\t\t\topen={alert.status !== \"\"}\r\n\t\t\t\tautoHideDuration={3000}\r\n\t\t\t\tonClose={closeAlert}\r\n\t\t\t>\r\n\t\t\t\t{alert.status !== \"\" ? (\r\n\t\t\t\t\t<Alert\r\n\t\t\t\t\t\televation={6}\r\n\t\t\t\t\t\tvariant=\"filled\"\r\n\t\t\t\t\t\tseverity={alert.status}\r\n\t\t\t\t\t\tonClose={closeAlert}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{alert.message}\r\n\t\t\t\t\t</Alert>\r\n\t\t\t\t) : null}\r\n\t\t\t</Snackbar>\r\n\r\n\t\t\t<Drawer\r\n\t\t\t\tvariant=\"permanent\"\r\n\t\t\t\tclassName={clsx(classes.drawer, {\r\n\t\t\t\t\t[classes.drawerOpen]: open,\r\n\t\t\t\t\t[classes.drawerClose]: !open,\r\n\t\t\t\t})}\r\n\t\t\t\tclasses={{\r\n\t\t\t\t\tpaper: clsx({\r\n\t\t\t\t\t\t[classes.drawerOpen]: open,\r\n\t\t\t\t\t\t[classes.drawerClose]: !open,\r\n\t\t\t\t\t}),\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<div className={classes.toolbar}>\r\n\t\t\t\t\t<IconButton onClick={handleDrawerClose}>\r\n\t\t\t\t\t\t{theme.direction === \"rtl\" ? (\r\n\t\t\t\t\t\t\t<ChevronRightIcon />\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<ChevronLeftIcon />\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</div>\r\n\t\t\t\t{loadingRoute ? null : (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<List>\r\n\t\t\t\t\t\t\t<Grow in={!loadingRoute} timeout={500}>\r\n\t\t\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\t\t\tbutton\r\n\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\thandleRouting(\"consultations\")\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tselected={selectedRoute === \"consultations\"}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<ListItemIcon className={classes.icon}>\r\n\t\t\t\t\t\t\t\t\t\t<TodayIcon />\r\n\t\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t<ListItemText primary=\"Consultations\" />\r\n\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t</Grow>\r\n\t\t\t\t\t\t\t<Grow in={!loadingRoute} timeout={700}>\r\n\t\t\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\t\t\tbutton\r\n\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\thandleRouting(\"appointments\")\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tselected={selectedRoute === \"appointments\"}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<ListItemIcon className={classes.icon}>\r\n\t\t\t\t\t\t\t\t\t\t<AlarmIcon />\r\n\t\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t<ListItemText primary=\"1v1 Appointments\" />\r\n\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t</Grow>\r\n\r\n\t\t\t\t\t\t\t{type === \"student\" ? (\r\n\t\t\t\t\t\t\t\t<Grow in={!loadingRoute} timeout={900}>\r\n\t\t\t\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\t\t\t\tbutton\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => handleRouting(\"hubs\")}\r\n\t\t\t\t\t\t\t\t\t\tselected={selectedRoute === \"hubs\"}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<ListItemIcon className={classes.icon}>\r\n\t\t\t\t\t\t\t\t\t\t\t<GroupAddIcon />\r\n\t\t\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t\t<ListItemText primary=\"Study Hubs\" />\r\n\t\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t\t</Grow>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<Grow in={!loadingRoute} timeout={900}>\r\n\t\t\t\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\t\t\t\tbutton\r\n\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t\thandleRouting(\"analytic\")\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tselected={selectedRoute === \"analytic\"}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<ListItemIcon className={classes.icon}>\r\n\t\t\t\t\t\t\t\t\t\t\t<TimelineIcon />\r\n\t\t\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t\t<ListItemText primary=\"Analytic\" />\r\n\t\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t\t</Grow>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</List>\r\n\r\n\t\t\t\t\t\t<Divider />\r\n\r\n\t\t\t\t\t\t<List>\r\n\t\t\t\t\t\t\t<Grow in={!loadingRoute} timeout={1100}>\r\n\t\t\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\t\t\tbutton\r\n\t\t\t\t\t\t\t\t\tonClick={() => handleRouting(\"settings\")}\r\n\t\t\t\t\t\t\t\t\tselected={selectedRoute === \"settings\"}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<ListItemIcon className={classes.icon}>\r\n\t\t\t\t\t\t\t\t\t\t<SettingsIcon />\r\n\t\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t<ListItemText primary=\"Settings\" />\r\n\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t</Grow>\r\n\t\t\t\t\t\t\t<Grow in={!loadingRoute} timeout={1300}>\r\n\t\t\t\t\t\t\t\t<ListItem button onClick={logOut}>\r\n\t\t\t\t\t\t\t\t\t<ListItemIcon className={classes.icon}>\r\n\t\t\t\t\t\t\t\t\t\t<PowerSettingsNewIcon />\r\n\t\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t<ListItemText primary=\"Log out\" />\r\n\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t</Grow>\r\n\t\t\t\t\t\t</List>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</Drawer>\r\n\r\n\t\t\t{loadingRoute ? (\r\n\t\t\t\t<Loading />\r\n\t\t\t) : (\r\n\t\t\t\t<main className={classes.content}>{content}</main>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n\tViewState,\r\n\tEditingState,\r\n\tIntegratedEditing,\r\n\tAppointmentForm,\r\n} from \"@devexpress/dx-react-scheduler\";\r\nimport {\r\n\tScheduler,\r\n\tDayView,\r\n\tAppointments,\r\n\tMonthView,\r\n\tToolbar,\r\n\tDateNavigator,\r\n\tViewSwitcher,\r\n\tTodayButton,\r\n\tResources,\r\n\tAppointmentTooltip,\r\n\tWeekView,\r\n} from \"@devexpress/dx-react-scheduler-material-ui\";\r\n\r\nimport {\r\n\tGrid,\r\n\tPaper,\r\n\tLinearProgress,\r\n\tSelect,\r\n\tMenuItem,\r\n} from \"@material-ui/core\";\r\nimport {\r\n\tmakeStyles,\r\n\twithStyles,\r\n\tlighten,\r\n\tuseTheme,\r\n} from \"@material-ui/core/styles\";\r\n\r\nimport {\r\n\tlime,\r\n\tlightBlue,\r\n\tred,\r\n\tgreen,\r\n\tyellow,\r\n\tcyan,\r\n\tblue,\r\n\tamber,\r\n\tteal,\r\n} from \"@material-ui/core/colors\";\r\n\r\nconst styles = (theme) => ({\r\n\tcontainer: {\r\n\t\tdisplay: \"flex\",\r\n\t\tmarginBottom: theme.spacing(2),\r\n\t\tjustifyContent: \"flex-end\",\r\n\t},\r\n\ttext: {\r\n\t\t...theme.typography.h6,\r\n\t\tmarginRight: theme.spacing(2),\r\n\t},\r\n});\r\n\r\nconst ToolbarWithLoading = withStyles(\r\n\t{\r\n\t\ttoolbarRoot: {\r\n\t\t\tposition: \"relative\",\r\n\t\t},\r\n\t\tprogress: {\r\n\t\t\tposition: \"absolute\",\r\n\t\t\twidth: \"100%\",\r\n\t\t\tbottom: 0,\r\n\t\t\tleft: 0,\r\n\t\t},\r\n\t},\r\n\t{ name: \"Toolbar\" }\r\n)(({ children, classes, ...restProps }) => (\r\n\t<div className={classes.toolbarRoot}>\r\n\t\t<Toolbar.Root {...restProps}>{children}</Toolbar.Root>\r\n\t\t<LinearProgress className={classes.progress} />\r\n\t</div>\r\n));\r\n\r\nconst getStyle = (data, style) => {\r\n\tif (data.booked) {\r\n\t\treturn {\r\n\t\t\t...style,\r\n\t\t\tbackgroundColor: \"#88c122\",\r\n\t\t\tborderRadius: \"8px\",\r\n\t\t};\r\n\t}\r\n\tif (data.status) {\r\n\t\tswitch (data.status) {\r\n\t\t\tcase \"PENDING\":\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...style,\r\n\t\t\t\t\tbackgroundColor: \"#e2d21f\",\r\n\t\t\t\t\tborderRadius: \"8px\",\r\n\t\t\t\t};\r\n\r\n\t\t\tcase \"APPROVED\":\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...style,\r\n\t\t\t\t\tbackgroundColor: \"#88c122\",\r\n\t\t\t\t\tborderRadius: \"8px\",\r\n\t\t\t\t};\r\n\t\t\tcase \"DECLINED\":\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...style,\r\n\t\t\t\t\tbackgroundColor: \"#f41f58\",\r\n\t\t\t\t\tborderRadius: \"8px\",\r\n\t\t\t\t};\r\n\t\t}\r\n\t}\r\n\treturn {\r\n\t\t...style,\r\n\t};\r\n};\r\n\r\nconst Appointment = ({ children, style, data, ...restProps }) => {\r\n\tconst theme = useTheme();\r\n\treturn (\r\n\t\t<Appointments.Appointment\r\n\t\t\t{...restProps}\r\n\t\t\tstyle={getStyle(data, style)}\r\n\t\t\tdata={data}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</Appointments.Appointment>\r\n\t);\r\n};\r\n\r\nconst resources = [\r\n\t{\r\n\t\tfieldName: \"booking\",\r\n\t\ttitle: \"booking\",\r\n\t\tinstances: [\r\n\t\t\t{ id: \"BOOKED\", text: \"Already booked\", color: green[400] },\r\n\t\t\t{ id: \"AVAILABLE\", text: \"Available to Book\", color: blue[400] },\r\n\t\t\t{ id: \"FULL\", text: \"It has been fully booked\", color: red[200] },\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\tfieldName: \"status\",\r\n\t\ttitle: \"status\",\r\n\t\tinstances: [\r\n\t\t\t{ id: \"PENDING\", text: \"PENDING\", color: amber[400] },\r\n\t\t\t{ id: \"APPROVED\", text: \"APPROVED\", color: green[400] },\r\n\t\t\t{ id: \"DECLINED\", text: \"DECLINED\", color: red[400] },\r\n\t\t],\r\n\t},\r\n];\r\n\r\nconst loadSubjectResources = (subjects) => {\r\n\tif (resources.filter((each) => each.fieldName === \"title\").length > 0)\r\n\t\treturn;\r\n\tconst instances = [];\r\n\tsubjects.map((subjectCode) => {\r\n\t\tinstances.push({ id: subjectCode, text: subjectCode });\r\n\t});\r\n\r\n\tresources.push({\r\n\t\tfieldName: \"title\",\r\n\t\ttitle: \"title\",\r\n\t\tinstances: instances,\r\n\t});\r\n};\r\n\r\nexport default ({\r\n\tdata,\r\n\tcurrentDate,\r\n\tsetCurrentDate,\r\n\theader,\r\n\tcontent,\r\n\tloading,\r\n\tmainResourceName,\r\n\tsubjects,\r\n\tviewChange,\r\n}) => {\r\n\tif (subjects) loadSubjectResources(subjects);\r\n\r\n\treturn (\r\n\t\t<Paper>\r\n\t\t\t<Scheduler data={data} height={660}>\r\n\t\t\t\t<ViewState\r\n\t\t\t\t\tcurrentDate={currentDate}\r\n\t\t\t\t\tonCurrentDateChange={setCurrentDate}\r\n\t\t\t\t/>\r\n\t\t\t\t<WeekView\r\n\t\t\t\t\texcludedDays={[0, 6]}\r\n\t\t\t\t\tstartDayHour={8}\r\n\t\t\t\t\tendDayHour={24}\r\n\t\t\t\t\tcellDuration={60}\r\n\t\t\t\t/>\r\n\t\t\t\t<MonthView />\r\n\t\t\t\t<Appointments />\r\n\r\n\t\t\t\t<AppointmentTooltip\r\n\t\t\t\t\theaderComponent={header}\r\n\t\t\t\t\tcontentComponent={content}\r\n\t\t\t\t/>\r\n\t\t\t\t<Resources\r\n\t\t\t\t\tmainResourceName={mainResourceName}\r\n\t\t\t\t\tdata={resources}\r\n\t\t\t\t\tpalette={[blue, cyan, teal, lime, amber]}\r\n\t\t\t\t/>\r\n\t\t\t\t<Toolbar\r\n\t\t\t\t\t{...(loading\r\n\t\t\t\t\t\t? { rootComponent: ToolbarWithLoading }\r\n\t\t\t\t\t\t: null)}\r\n\t\t\t\t/>\r\n\t\t\t\t<DateNavigator />\r\n\t\t\t\t<TodayButton />\r\n\t\t\t\t<ViewSwitcher />\r\n\t\t\t</Scheduler>\r\n\t\t</Paper>\r\n\t);\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\n\r\nimport { AppointmentTooltip } from \"@devexpress/dx-react-scheduler-material-ui\";\r\n\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport { IconButton, Grid, Paper, Fab, Container } from \"@material-ui/core\";\r\n\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Room from \"@material-ui/icons/Room\";\r\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\r\nimport classNames from \"clsx\";\r\n\r\nimport { myFetch, UserContext, StudentContext } from \"../Methods\";\r\n\r\nconst style = ({ palette, spacing }) => ({\r\n\ticon: {\r\n\t\tcolor: palette.action.active,\r\n\t},\r\n\ttextCenter: {\r\n\t\ttextAlign: \"center\",\r\n\t},\r\n\theader: {\r\n\t\theight: \"260px\",\r\n\t\tbackgroundSize: \"cover\",\r\n\t},\r\n});\r\n\r\nexport default withStyles(style, { name: \"Header\" })(\r\n\t({ children, appointmentData, classes, ...restProps }) => {\r\n\t\tconst { cancelAppointment, setCancelAppointment } = useContext(\r\n\t\t\tStudentContext\r\n\t\t);\r\n\t\tconst { detectAlert } = useContext(UserContext);\r\n\r\n\t\treturn (\r\n\t\t\t<AppointmentTooltip.Header\r\n\t\t\t\t{...restProps}\r\n\t\t\t\tappointmentData={appointmentData}\r\n\t\t\t\tshowCloseButton\r\n\t\t\t\tshowOpenButton\r\n\t\t\t\tonOpenButtonClick={() =>\r\n\t\t\t\t\tsetCancelAppointment(appointmentData.id)\r\n\t\t\t\t}\r\n\t\t\t></AppointmentTooltip.Header>\r\n\t\t);\r\n\t}\r\n);\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\n\r\nimport { AppointmentTooltip } from \"@devexpress/dx-react-scheduler-material-ui\";\r\n\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport { IconButton, Grid, Paper, Fab, Container } from \"@material-ui/core\";\r\n\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Room from \"@material-ui/icons/Room\";\r\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\r\nimport classNames from \"clsx\";\r\n\r\nimport { UserContext, StaffContext } from \"../Methods\";\r\n\r\nconst style = ({ palette, spacing }) => ({\r\n\ticon: {\r\n\t\tcolor: palette.action.active,\r\n\t},\r\n\ttextCenter: {\r\n\t\ttextAlign: \"center\",\r\n\t},\r\n\theader: {\r\n\t\theight: \"260px\",\r\n\t\tbackgroundSize: \"cover\",\r\n\t},\r\n});\r\n\r\nexport default withStyles(style, { name: \"Header\" })(\r\n\t({ children, appointmentData, classes, ...restProps }) => {\r\n\t\tconst { pendAppointment, setPendAppointment } = useContext(\r\n\t\t\tStaffContext\r\n\t\t);\r\n\r\n\t\treturn (\r\n\t\t\t<AppointmentTooltip.Header\r\n\t\t\t\t{...restProps}\r\n\t\t\t\tappointmentData={appointmentData}\r\n\t\t\t\tshowCloseButton\r\n\t\t\t\tshowOpenButton\r\n\t\t\t\tonOpenButtonClick={() =>\r\n\t\t\t\t\tsetPendAppointment({ id: appointmentData.id })\r\n\t\t\t\t}\r\n\t\t\t></AppointmentTooltip.Header>\r\n\t\t);\r\n\t}\r\n);\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n\tGrid,\r\n\tGrow,\r\n\tFab,\r\n\tZoom,\r\n\tCollapse,\r\n\tFade,\r\n\tTabs,\r\n\tAppBar,\r\n\tTab,\r\n\tListItem,\r\n\tList,\r\n\tListItemAvatar,\r\n\tListItemText,\r\n\tAvatar,\r\n\tSelect,\r\n\tMenuItem,\r\n\tButton,\r\n\tButtonGroup,\r\n\tIconButton,\r\n\tDialog,\r\n\tDialogActions,\r\n\tDialogContent,\r\n\tDialogContentText,\r\n\tDialogTitle,\r\n\tTextField,\r\n\tSlider,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles, withStyles, lighten } from \"@material-ui/core/styles\";\r\nimport { myFetch, UserContext } from \"../Methods\";\r\nimport SchoolIcon from \"@material-ui/icons/School\";\r\nimport ScheduleIcon from \"@material-ui/icons/Schedule\";\r\nimport RoomIcon from \"@material-ui/icons/Room\";\r\nimport GroupIcon from \"@material-ui/icons/GroupAddTwoTone\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nimport MomentUtils from \"@date-io/moment\";\r\nimport {\r\n\tKeyboardDateTimePicker,\r\n\tMuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\n\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\nimport { InboxOutlined, Inbox, Drafts, Send } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcloseButton: {\r\n\t\tposition: \"absolute\",\r\n\t\tright: theme.spacing(1),\r\n\t\ttop: theme.spacing(1),\r\n\t\tcolor: theme.palette.grey[500],\r\n\t},\r\n\ticon: {\r\n\t\tmargin: \"auto\",\r\n\t},\r\n\tdelete: {\r\n\t\tbackgroundColor:\r\n\t\t\t\"linear-gradient(45deg, #ff9a9e 0%, #fad0c4 99%, #fad0c4 100%)\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackgroundColor: \"#52af77\",\r\n\t\t},\r\n\t},\r\n\tselect: {\r\n\t\tmarginTop: theme.spacing(10),\r\n\t},\r\n\tskeleton: {\r\n\t\twidth: \"20WH\",\r\n\t},\r\n}));\r\n\r\nconst marks = [\r\n\t{\r\n\t\tvalue: 0,\r\n\t\tlabel: \"0 Minutes\",\r\n\t},\r\n\t{\r\n\t\tvalue: 60,\r\n\t\tlabel: \"1 hour\",\r\n\t},\r\n\t{\r\n\t\tvalue: 120,\r\n\t\tlabel: \"2 hours\",\r\n\t},\r\n\t{\r\n\t\tvalue: 240,\r\n\t\tlabel: \"4 hours\",\r\n\t},\r\n];\r\nconst getDuration = (startDate, endDate) => {\r\n\tconst duration = (endDate - startDate) / 60000;\r\n\tif (duration < 15) return 15;\r\n\tif (duration > 300) return 300;\r\n\treturn duration;\r\n};\r\n\r\nconst getEndDate = (start, duration) => {\r\n\tconst end = new Date(start);\r\n\treturn end.setMinutes(end.getMinutes() + duration);\r\n};\r\n\r\nconst CreateDialog = ({\r\n\tstaffInfo,\r\n\tclasses,\r\n\tstartDate,\r\n\tendDate,\r\n\tlocation,\r\n\tcomments,\r\n\ttoggle,\r\n\tcreateAppointment,\r\n\tsetStartDate,\r\n\tsetEndDate,\r\n\tsetLocation,\r\n\tsetComments,\r\n\topen,\r\n\tsetLoading,\r\n}) => {\r\n\treturn (\r\n\t\t<Dialog\r\n\t\t\topen={open}\r\n\t\t\tonClose={toggle}\r\n\t\t\taria-labelledby=\"form-dialog-title\"\r\n\t\t\tfullWidth\r\n\t\t>\r\n\t\t\t<DialogTitle id=\"form-dialog-title\">\r\n\t\t\t\t{`Creating an appointment for ${staffInfo.firstName} ${staffInfo.lastName}`}\r\n\t\t\t\t<IconButton\r\n\t\t\t\t\taria-label=\"close\"\r\n\t\t\t\t\tclassName={classes.closeButton}\r\n\t\t\t\t\tonClick={toggle}\r\n\t\t\t\t>\r\n\t\t\t\t\t<CloseIcon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t</DialogTitle>\r\n\t\t\t<DialogContent dividers>\r\n\t\t\t\t<Grid container>\r\n\t\t\t\t\t<Grid item xs={1}>\r\n\t\t\t\t\t\t<ScheduleIcon className={classes.icon} />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={11}>\r\n\t\t\t\t\t\t<MuiPickersUtilsProvider utils={MomentUtils}>\r\n\t\t\t\t\t\t\t<KeyboardDateTimePicker\r\n\t\t\t\t\t\t\t\tlabel=\"Start Date\"\r\n\t\t\t\t\t\t\t\tvalue={startDate}\r\n\t\t\t\t\t\t\t\tonChange={(date) => {\r\n\t\t\t\t\t\t\t\t\tsetStartDate(date);\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</MuiPickersUtilsProvider>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={1}>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<ScheduleIcon className={classes.icon} />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={11}>\r\n\t\t\t\t\t\t<DialogContentText>\r\n\t\t\t\t\t\t\t{\"Duration: \"}\r\n\t\t\t\t\t\t\t{getDuration(startDate, endDate)}\r\n\t\t\t\t\t\t\t{\" Minutes\"}\r\n\t\t\t\t\t\t</DialogContentText>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<Slider\r\n\t\t\t\t\t\t\tvalueLabelDisplay=\"auto\"\r\n\t\t\t\t\t\t\tmarks={marks}\r\n\t\t\t\t\t\t\taria-labelledby=\"discrete-slider\"\r\n\t\t\t\t\t\t\tgetAriaValueText={(value) => `${value} Minutes`}\r\n\t\t\t\t\t\t\tvalue={getDuration(startDate, endDate)}\r\n\t\t\t\t\t\t\tonChange={(e, newValue) => {\r\n\t\t\t\t\t\t\t\tsetEndDate(getEndDate(startDate, newValue));\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tstep={15}\r\n\t\t\t\t\t\t\tmax={300}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={1}>\r\n\t\t\t\t\t\t<RoomIcon className={classes.icon} />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={11}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tlabel=\"Location\"\r\n\t\t\t\t\t\t\tvariant=\"filled\"\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\tvalue={location}\r\n\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\tsetLocation(e.target.value);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<DialogContentText>\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t</DialogContentText>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={1}>\r\n\t\t\t\t\t\t<Send className={classes.icon} />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={11}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tlabel=\"Request Reason\"\r\n\t\t\t\t\t\t\tmultiline\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\trowsMax={4}\r\n\t\t\t\t\t\t\tvalue={comments}\r\n\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\tsetComments(e.target.value);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</DialogContent>\r\n\r\n\t\t\t<DialogActions>\r\n\t\t\t\t<ButtonGroup fullWidth>\r\n\t\t\t\t\t<Button fullWidth onClick={toggle}>\r\n\t\t\t\t\t\tCancel\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tcreateAppointment().then((res) => {\r\n\t\t\t\t\t\t\t\tconsole.log(res);\r\n\t\t\t\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tCreate\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</ButtonGroup>\r\n\t\t\t</DialogActions>\r\n\t\t</Dialog>\r\n\t);\r\n};\r\n\r\nexport default ({ userInfo }) => {\r\n\tconst classes = useStyles();\r\n\r\n\tconst [currentSubject, setCurrentSubject] = useState(userInfo.subjects[0]);\r\n\tconst [loading, setLoading] = useState(true);\r\n\tconst [staffs, setStaffs] = useState([]);\r\n\tconst [startDate, setStartDate] = useState(new Date());\r\n\tconst [endDate, setEndDate] = useState(new Date());\r\n\tconst [location, setLocation] = useState(\"\");\r\n\tconst [comments, setComments] = useState(\"\");\r\n\tconst [staffInfo, setStaffInfo] = useState({});\r\n\r\n\tconst [open, setOpen] = useState(false);\r\n\tconst { detectAlert, setAlert } = useContext(UserContext);\r\n\r\n\t//Fetch the appointments of the current subject.\r\n\tconst fetchStaffs = async () => {\r\n\t\tsetLoading(true);\r\n\t\tconsole.log(currentSubject);\r\n\r\n\t\tconst res = await myFetch(\"/api/student/subjects/allStaff\", \"POST\", {\r\n\t\t\tsubjectCode: currentSubject,\r\n\t\t});\r\n\t\tsetStaffs(res.staffsInfo);\r\n\t\tconsole.log(res);\r\n\t\tif (!res) return;\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tconst createAppointment = async () => {\r\n\t\tsetLoading(true);\r\n\t\tif (!startDate || !endDate || location === \"\") {\r\n\t\t\tsetAlert({ status: \"warning\", message: \"Insufficient Input.\" });\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst body = {\r\n\t\t\tsubjectCode: currentSubject,\r\n\t\t\tstartDate: startDate,\r\n\t\t\tendDate: getEndDate(startDate, getDuration(startDate, endDate)),\r\n\t\t\tlocation: location,\r\n\t\t\tstaffId: staffInfo._id,\r\n\t\t\tcomment: comments,\r\n\t\t};\r\n\t\tconst res = await myFetch(\r\n\t\t\t\"/api/student/appointment/request\",\r\n\t\t\t\"POST\",\r\n\t\t\tbody\r\n\t\t);\r\n\t\tdetectAlert(res, \"Successfully created.\");\r\n\t\ttoggle();\r\n\t\treturn res;\r\n\t};\r\n\r\n\tconst toggle = () => setOpen(!open);\r\n\r\n\t//Updating appointments Information.\r\n\tuseEffect(() => {\r\n\t\tfetchStaffs();\r\n\t}, [currentSubject]);\r\n\r\n\tif (loading)\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Select\r\n\t\t\t\t\tvalue={currentSubject}\r\n\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\tsetCurrentSubject(event.target.value);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t>\r\n\t\t\t\t\t{userInfo.subjects.map((subject) => (\r\n\t\t\t\t\t\t<MenuItem value={subject} key={subject}>\r\n\t\t\t\t\t\t\t{subject}\r\n\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Select>\r\n\t\t\t\t<List>\r\n\t\t\t\t\t{[1, 2, 3].map((index) => (\r\n\t\t\t\t\t\t<Grow in key={index} timeout={index * 500}>\r\n\t\t\t\t\t\t\t<ListItem button>\r\n\t\t\t\t\t\t\t\t<ListItemAvatar>\r\n\t\t\t\t\t\t\t\t\t<Skeleton\r\n\t\t\t\t\t\t\t\t\t\tanimation=\"wave\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"circle\"\r\n\t\t\t\t\t\t\t\t\t\twidth={40}\r\n\t\t\t\t\t\t\t\t\t\theight={40}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</ListItemAvatar>\r\n\t\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\t\tprimary={<Skeleton animation=\"wave\" />}\r\n\t\t\t\t\t\t\t\t\tsecondary={<Skeleton animation=\"wave\" />}\r\n\t\t\t\t\t\t\t\t></ListItemText>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t</Grow>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</List>\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Select\r\n\t\t\t\tvalue={currentSubject}\r\n\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\tsetCurrentSubject(event.target.value);\r\n\t\t\t\t}}\r\n\t\t\t\tfullWidth\r\n\t\t\t\tvariant=\"outlined\"\r\n\t\t\t>\r\n\t\t\t\t{userInfo.subjects.map((subject) => (\r\n\t\t\t\t\t<MenuItem value={subject} key={subject}>\r\n\t\t\t\t\t\t{subject}\r\n\t\t\t\t\t</MenuItem>\r\n\t\t\t\t))}\r\n\t\t\t</Select>\r\n\t\t\t<CreateDialog\r\n\t\t\t\tstaffInfo={staffInfo}\r\n\t\t\t\tclasses={classes}\r\n\t\t\t\tstartDate={startDate}\r\n\t\t\t\tendDate={endDate}\r\n\t\t\t\tlocation={location}\r\n\t\t\t\tcomments={comments}\r\n\t\t\t\ttoggle={toggle}\r\n\t\t\t\tcreateAppointment={createAppointment}\r\n\t\t\t\tsetStartDate={setStartDate}\r\n\t\t\t\tsetEndDate={setEndDate}\r\n\t\t\t\tsetLocation={setLocation}\r\n\t\t\t\tsetComments={setComments}\r\n\t\t\t\topen={open}\r\n\t\t\t\tsetLoading={setLoading}\r\n\t\t\t/>\r\n\t\t\t<List>\r\n\t\t\t\t{staffs.map((staff, index) => (\r\n\t\t\t\t\t<Grow in timeout={index * 200} key={index}>\r\n\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\tbutton\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tsetOpen(true);\r\n\t\t\t\t\t\t\t\tsetStaffInfo(staff);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ListItemAvatar>\r\n\t\t\t\t\t\t\t\t<Avatar />\r\n\t\t\t\t\t\t\t</ListItemAvatar>\r\n\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\tprimary={`${staff.firstName} ${staff.lastName}`}\r\n\t\t\t\t\t\t\t\tsecondary={staff.email}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t</Grow>\r\n\t\t\t\t))}\r\n\t\t\t</List>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n\tGrid,\r\n\twithWidth,\r\n\tisWidthUp,\r\n\tButton,\r\n\tButtonGroup,\r\n\tPaper,\r\n\tTypography,\r\n\tGrow,\r\n\tFab,\r\n\tZoom,\r\n\tCollapse,\r\n\tFade,\r\n\tTabs,\r\n\tAppBar,\r\n\tTab,\r\n\tDialog,\r\n\tDialogContent,\r\n\tDialogTitle,\r\n\tDialogActions,\r\n\tSelect,\r\n\tMenuItem,\r\n} from \"@material-ui/core\";\r\nimport {\r\n\tmakeStyles,\r\n\twithStyles,\r\n\tlighten,\r\n\tuseTheme,\r\n} from \"@material-ui/core/styles\";\r\nimport TimeTable from \"../Timetable\";\r\n\r\nimport Header from \"./StudentHeader\";\r\nimport Content from \"./StudentContent\";\r\nimport StudentQuery from \"./StudentQuery\";\r\n\r\nimport { myFetch, UserContext, StudentContext } from \"../Methods\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\n\r\nexport default ({\r\n\tcurrentStatus,\r\n\tsetCurrentStatus,\r\n\tmainResourceName,\r\n\tsetMainResourceName,\r\n}) => {\r\n\treturn (\r\n\t\t<AppBar position=\"relative\" color=\"default\">\r\n\t\t\t<Grid container justify=\"space-between\">\r\n\t\t\t\t<Grid item xs={10}>\r\n\t\t\t\t\t<Tabs\r\n\t\t\t\t\t\tvalue={currentStatus}\r\n\t\t\t\t\t\tindicatorColor=\"primary\"\r\n\t\t\t\t\t\ttextColor=\"primary\"\r\n\t\t\t\t\t\tonChange={(event, newValue) => {\r\n\t\t\t\t\t\t\tsetCurrentStatus(newValue);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tvariant=\"scrollable\"\r\n\t\t\t\t\t\tscrollButtons=\"auto\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Tab label=\"ALL\" />\r\n\t\t\t\t\t\t<Tab label=\"PENDING\" />\r\n\t\t\t\t\t\t<Tab label=\"APPROVED\" />\r\n\t\t\t\t\t\t<Tab label=\"DECLINED\" />\r\n\t\t\t\t\t</Tabs>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={2}>\r\n\t\t\t\t\t<Select\r\n\t\t\t\t\t\tvalue={mainResourceName}\r\n\t\t\t\t\t\tonChange={(e) => setMainResourceName(e.target.value)}\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<MenuItem key=\"status\" value=\"status\">\r\n\t\t\t\t\t\t\tStatus\r\n\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t<MenuItem key=\"title\" value=\"title\">\r\n\t\t\t\t\t\t\tSubjects\r\n\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t</Select>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</AppBar>\r\n\t);\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n\tGrid,\r\n\twithWidth,\r\n\tisWidthUp,\r\n\tButton,\r\n\tButtonGroup,\r\n\tPaper,\r\n\tTypography,\r\n\tGrow,\r\n\tFab,\r\n\tZoom,\r\n\tCollapse,\r\n\tFade,\r\n\tTabs,\r\n\tAppBar,\r\n\tTab,\r\n\tDialog,\r\n\tDialogContent,\r\n\tDialogTitle,\r\n\tDialogActions,\r\n\tIconButton,\r\n\tTextField,\r\n} from \"@material-ui/core\";\r\nimport {\r\n\tmakeStyles,\r\n\twithStyles,\r\n\tlighten,\r\n\tuseTheme,\r\n} from \"@material-ui/core/styles\";\r\nimport TimeTable from \"../Timetable\";\r\n\r\nimport Header from \"./StaffHeader\";\r\nimport Content from \"./StudentContent\";\r\nimport TimetableBar from \"./TimetableBar\";\r\n\r\nimport { myFetch, UserContext, StaffContext } from \"../Methods\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { grey, red, green, lime } from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tpaper: {\r\n\t\tmaxHeight: \"70VH\",\r\n\t},\r\n\tfab: {\r\n\t\tposition: \"fixed\",\r\n\t\tbottom: theme.spacing(1) * 6,\r\n\t\tright: theme.spacing(1) * 6,\r\n\t},\r\n\tnoDecoration: {\r\n\t\ttextDecoration: \"none !important\",\r\n\t},\r\n\tdelete: {\r\n\t\ttextTransform: \"none\",\r\n\t\tcolor: theme.palette.getContrastText(grey[700]),\r\n\t\tbackground: grey[700],\r\n\t\t\"&:hover\": {\r\n\t\t\tcolor: theme.palette.getContrastText(grey[900]),\r\n\t\t\tbackground: grey[900],\r\n\t\t},\r\n\t},\r\n\tcloseButton: {\r\n\t\tposition: \"absolute\",\r\n\t\tright: theme.spacing(1),\r\n\t\ttop: theme.spacing(1),\r\n\t\tcolor: theme.palette.grey[500],\r\n\t},\r\n\tapprove: {\r\n\t\tbackgroundColor: green[400],\r\n\t\t\"&:hover\": {\r\n\t\t\tbackgroundColor: green[600],\r\n\t\t},\r\n\t},\r\n\tdecline: {\r\n\t\tbackgroundColor: red[500],\r\n\t\t\"&:hover\": {\r\n\t\t\tbackgroundColor: red[700],\r\n\t\t},\r\n\t},\r\n}));\r\n\r\nconst PendDialog = ({ pendAppointment, setPendAppointment, pend, classes }) => (\r\n\t<Dialog\r\n\t\topen={pendAppointment.id !== \"\"}\r\n\t\tonClose={() => setPendAppointment({ id: \"\" })}\r\n\t\tfullWidth\r\n\t>\r\n\t\t<DialogTitle>\r\n\t\t\tPending this appointment{\" \"}\r\n\t\t\t<IconButton\r\n\t\t\t\taria-label=\"close\"\r\n\t\t\t\tclassName={classes.closeButton}\r\n\t\t\t\tonClick={() => setPendAppointment({ id: \"\" })}\r\n\t\t\t>\r\n\t\t\t\t<CloseIcon />\r\n\t\t\t</IconButton>\r\n\t\t</DialogTitle>\r\n\t\t<DialogContent>\r\n\t\t\t<TextField\r\n\t\t\t\tlabel=\"Any comment for him/her?\"\r\n\t\t\t\tmultiline\r\n\t\t\t\tfullWidth\r\n\t\t\t\trowsMax={4}\r\n\t\t\t\tvalue={pendAppointment.comments}\r\n\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\tsetPendAppointment({\r\n\t\t\t\t\t\tid: pendAppointment.id,\r\n\t\t\t\t\t\tcomments: e.target.value,\r\n\t\t\t\t\t});\r\n\t\t\t\t}}\r\n\t\t\t\tvariant=\"outlined\"\r\n\t\t\t/>\r\n\t\t</DialogContent>\r\n\t\t<DialogActions>\r\n\t\t\t<ButtonGroup fullWidth>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\tonClick={() => pend(\"DECLINED\")}\r\n\t\t\t\t\tclassName={classes.decline}\r\n\t\t\t\t\tcolor={red[400]}\r\n\t\t\t\t>\r\n\t\t\t\t\tDecline it.\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t\tonClick={() => pend(\"APPROVED\")}\r\n\t\t\t\t\tcolor={green[400]}\r\n\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\tclassName={classes.approve}\r\n\t\t\t\t>\r\n\t\t\t\t\tApprove it.\r\n\t\t\t\t</Button>\r\n\t\t\t</ButtonGroup>\r\n\t\t</DialogActions>\r\n\t</Dialog>\r\n);\r\n\r\nexport default () => {\r\n\tconst classes = useStyles();\r\n\r\n\t//timetable values...\r\n\tconst [data, setData] = useState([]);\r\n\tconst [currentDate, setCurrentDate] = useState(new Date());\r\n\tconst [pendAppointment, setPendAppointment] = useState({\r\n\t\tid: \"\",\r\n\t\tcomments: \"\",\r\n\t});\r\n\tconst [loading, setLoading] = useState(true);\r\n\tconst { alert, detectAlert, user, setUser } = useContext(UserContext);\r\n\r\n\t//Timetable bar....\r\n\tconst [currentStatus, setCurrentStatus] = useState(0);\r\n\tconst [mainResourceName, setMainResourceName] = useState(\"status\");\r\n\r\n\tconst { userInfo } = user;\r\n\r\n\t//Reloading user information.\r\n\tconst reloadUser = async () => {\r\n\t\tconst res = await myFetch(\"/api/shared/users/info\", \"GET\");\r\n\t\tdetectAlert(res);\r\n\t\tsetUser(res);\r\n\t\treturn res;\r\n\t};\r\n\r\n\t//Fetch the appointments of the current subject.\r\n\tconst fetchAppoint = async () => {\r\n\t\tsetLoading(true);\r\n\t\tconst res = await myFetch(\"/api/staff/appointment/all\", \"GET\");\r\n\t\tdetectAlert(res);\r\n\t\treturn res.appointments;\r\n\t};\r\n\r\n\tconst formatData = (data, status) => {\r\n\t\t//Formatting data for timetable to render.\r\n\t\tconst appoints = [];\r\n\t\tdata.map((appointment) => {\r\n\t\t\tswitch (status) {\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tif (appointment.status !== \"PENDING\") return;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\tif (appointment.status !== \"APPROVED\") return;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\tif (appointment.status !== \"DECLINED\") return;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tappoints.push({\r\n\t\t\t\ttitle: appointment.subjectCode,\r\n\t\t\t\tstartDate: new Date(appointment.startDate),\r\n\t\t\t\tendDate: new Date(appointment.endDate),\r\n\t\t\t\tid: appointment._id,\r\n\t\t\t\tlocation: appointment.location,\r\n\t\t\t\tstatus: appointment.status,\r\n\t\t\t\tstudent: appointment.student,\r\n\t\t\t\tcomments: appointment.comment,\r\n\t\t\t});\r\n\t\t});\r\n\t\tsetData(appoints);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\t//Updating appointments Information.\r\n\tuseEffect(() => {\r\n\t\treloadUser().then((user) => {\r\n\t\t\tfetchAppoint().then((appointments) =>\r\n\t\t\t\tformatData(appointments, currentStatus)\r\n\t\t\t);\r\n\t\t});\r\n\t}, [alert.status, currentStatus]);\r\n\r\n\t//pend an appointment.\r\n\tconst pend = async (status) => {\r\n\t\tsetLoading(true);\r\n\t\tconst body = {\r\n\t\t\tid: pendAppointment.id,\r\n\t\t\tstatus: status,\r\n\t\t\tcomment: pendAppointment.comments,\r\n\t\t};\r\n\t\tconst res = await myFetch(\"/api/staff/appointment/pend\", \"PATCH\", body);\r\n\t\tdetectAlert(res, \"Successfully Deleted.\");\r\n\t\tsetPendAppointment({ id: \"\" });\r\n\t};\r\n\r\n\treturn (\r\n\t\t<StaffContext.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\tcurrentDate,\r\n\t\t\t\tsetCurrentDate,\r\n\t\t\t\tpendAppointment,\r\n\t\t\t\tsetPendAppointment,\r\n\t\t\t\tdata,\r\n\t\t\t\tsetData,\r\n\t\t\t\tuserInfo,\r\n\t\t\t\tloading,\r\n\t\t\t\tsetLoading,\r\n\t\t\t\tsetUser,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<PendDialog\r\n\t\t\t\tpendAppointment={pendAppointment}\r\n\t\t\t\tsetPendAppointment={setPendAppointment}\r\n\t\t\t\tpend={pend}\r\n\t\t\t\tclasses={classes}\r\n\t\t\t/>\r\n\t\t\t<Fade in timeout={500}>\r\n\t\t\t\t<div className={classes.paper}>\r\n\t\t\t\t\t<Grid container justify=\"space-around\">\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<TimetableBar\r\n\t\t\t\t\t\t\t\tcurrentStatus={currentStatus}\r\n\t\t\t\t\t\t\t\tsetCurrentStatus={setCurrentStatus}\r\n\t\t\t\t\t\t\t\tmainResourceName={mainResourceName}\r\n\t\t\t\t\t\t\t\tsetMainResourceName={setMainResourceName}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TimeTable\r\n\t\t\t\t\t\t\t\tdata={data}\r\n\t\t\t\t\t\t\t\tcurrentDate={currentDate}\r\n\t\t\t\t\t\t\t\tsetCurrentDate={setCurrentDate}\r\n\t\t\t\t\t\t\t\theader={Header}\r\n\t\t\t\t\t\t\t\tcontent={Content}\r\n\t\t\t\t\t\t\t\tloading={loading}\r\n\t\t\t\t\t\t\t\tmainResourceName={mainResourceName}\r\n\t\t\t\t\t\t\t\tsubjects={user.userInfo.subjects}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</div>\r\n\t\t\t</Fade>\r\n\t\t</StaffContext.Provider>\r\n\t);\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n\tAppointmentTooltip,\r\n\tWeekView,\r\n} from \"@devexpress/dx-react-scheduler-material-ui\";\r\n\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n\tGrid,\r\n\tPaper,\r\n\tTypography,\r\n\tList,\r\n\tListItem,\r\n\tListItemIcon,\r\n\tListItemText,\r\n\tListItemAvatar,\r\n\tAvatar,\r\n\tDivider,\r\n\tBadge,\r\n\tButton,\r\n\tCollapse,\r\n} from \"@material-ui/core\";\r\n\r\nimport RoomIcon from \"@material-ui/icons/Room\";\r\n\r\nimport AutorenewIcon from \"@material-ui/icons/Autorenew\";\r\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\n\r\nimport DraftsIcon from \"@material-ui/icons/Drafts\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\n\r\nimport { grey, pink, amber, green, red, lime } from \"@material-ui/core/colors\";\r\n\r\nimport { myFetch, UserContext, StudentContext } from \"../Methods\";\r\nimport Staff from \"./Staff\";\r\n\r\nconst StatusIcon = ({ status }) => {\r\n\tif (status === \"APPROVED\") return <ThumbUpIcon></ThumbUpIcon>;\r\n\tif (status === \"DECLINED\") return <CancelIcon></CancelIcon>;\r\n\treturn <AutorenewIcon></AutorenewIcon>;\r\n};\r\n\r\nconst getCommentTitle = (status) => {\r\n\tswitch (status) {\r\n\t\tcase \"PENDING\":\r\n\t\t\treturn \"Request Reason:\";\r\n\t\tcase \"APPROVED\":\r\n\t\t\treturn \"Approved Reason:\";\r\n\t\tdefault:\r\n\t\t\treturn \"Declined Reason:\";\r\n\t}\r\n};\r\n\r\nconst style = ({ palette, spacing }) => ({\r\n\tleft: {\r\n\t\tmarginLeft: spacing(1),\r\n\t},\r\n\tpending: {\r\n\t\tbackgroundColor: amber[400],\r\n\t\t\"&:hover\": {\r\n\t\t\tbackgroundColor: amber[400],\r\n\t\t},\r\n\t\tborderRadius: 30,\r\n\t},\r\n\tapproved: {\r\n\t\tbackgroundColor: green[400],\r\n\t\t\"&:hover\": {\r\n\t\t\tbackgroundColor: green[400],\r\n\t\t},\r\n\t\tborderRadius: 30,\r\n\t},\r\n\tdeclined: {\r\n\t\tbackgroundColor: red[400],\r\n\t\t\"&:hover\": {\r\n\t\t\tbackgroundColor: red[400],\r\n\t\t},\r\n\t\tborderRadius: 30,\r\n\t},\r\n\tscroll: {\r\n\t\theight: spacing(15),\r\n\t\toverflow: \"scroll\",\r\n\t},\r\n});\r\n\r\nexport default withStyles(style, { name: \"Content\" })(\r\n\t({ children, appointmentData, classes, ...restProps }) => {\r\n\t\tconst [openComments, setOpenComments] = useState(false);\r\n\r\n\t\tconst getStatusStyle = (status) => {\r\n\t\t\tswitch (status) {\r\n\t\t\t\tcase \"APPROVED\":\r\n\t\t\t\t\treturn classes.approved;\r\n\t\t\t\tcase \"DECLINED\":\r\n\t\t\t\t\treturn classes.declined;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn classes.pending;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\treturn (\r\n\t\t\t<AppointmentTooltip.Content\r\n\t\t\t\t{...restProps}\r\n\t\t\t\tappointmentData={appointmentData}\r\n\t\t\t>\r\n\t\t\t\t<Grid container justify=\"center\">\r\n\t\t\t\t\t<Grid item xs={11}>\r\n\t\t\t\t\t\t<List dense>\r\n\t\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\t\tbutton\r\n\t\t\t\t\t\t\t\tonClick={() => setOpenComments(!openComments)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t<DraftsIcon />\r\n\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\t\tprimary={getCommentTitle(\r\n\t\t\t\t\t\t\t\t\t\tappointmentData.status\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t{openComments ? <ExpandLess /> : <ExpandMore />}\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t<Collapse\r\n\t\t\t\t\t\t\t\tin={openComments}\r\n\t\t\t\t\t\t\t\ttimeout=\"auto\"\r\n\t\t\t\t\t\t\t\tunmountOnExit\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<List component=\"div\" disablePadding>\r\n\t\t\t\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\t\t\t\tsecondary={\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className={classes.scroll}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{appointmentData.comments}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t\t</List>\r\n\t\t\t\t\t\t\t</Collapse>\r\n\t\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t<RoomIcon />\r\n\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\t\tprimary=\"Location\"\r\n\t\t\t\t\t\t\t\t\tsecondary={appointmentData.location}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\r\n\t\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t<AccountCircleIcon />\r\n\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\t\tprimary={\r\n\t\t\t\t\t\t\t\t\t\tappointmentData.staff\r\n\t\t\t\t\t\t\t\t\t\t\t? `${appointmentData.staff.firstName} ${appointmentData.staff.lastName}`\r\n\t\t\t\t\t\t\t\t\t\t\t: `${appointmentData.student.firstName} ${appointmentData.student.lastName}`\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tsecondary={\r\n\t\t\t\t\t\t\t\t\t\tappointmentData.staff\r\n\t\t\t\t\t\t\t\t\t\t\t? appointmentData.staff.mail\r\n\t\t\t\t\t\t\t\t\t\t\t: appointmentData.student.mail\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\tclassName={getStatusStyle(\r\n\t\t\t\t\t\t\t\t\t\tappointmentData.status\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\tdisableTouchRipple\r\n\t\t\t\t\t\t\t\t\tdisableRipple\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<StatusIcon\r\n\t\t\t\t\t\t\t\t\t\tstatus={appointmentData.status}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t{appointmentData.status}\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t</List>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</AppointmentTooltip.Content>\r\n\t\t);\r\n\t}\r\n);\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n\tGrid,\r\n\twithWidth,\r\n\tisWidthUp,\r\n\tButton,\r\n\tButtonGroup,\r\n\tPaper,\r\n\tTypography,\r\n\tGrow,\r\n\tFab,\r\n\tZoom,\r\n\tCollapse,\r\n\tFade,\r\n\tTabs,\r\n\tAppBar,\r\n\tTab,\r\n\tDialog,\r\n\tDialogContent,\r\n\tDialogTitle,\r\n\tDialogActions,\r\n\tSelect,\r\n\tMenuItem,\r\n} from \"@material-ui/core\";\r\nimport {\r\n\tmakeStyles,\r\n\twithStyles,\r\n\tlighten,\r\n\tuseTheme,\r\n} from \"@material-ui/core/styles\";\r\nimport TimeTable from \"../Timetable\";\r\n\r\nimport Header from \"./StudentHeader\";\r\nimport Content from \"./StudentContent\";\r\nimport StudentQuery from \"./StudentQuery\";\r\nimport TimetableBar from \"./TimetableBar\";\r\n\r\nimport { myFetch, UserContext, StudentContext } from \"../Methods\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tpaper: {\r\n\t\tmaxHeight: \"70VH\",\r\n\t},\r\n\tfab: {\r\n\t\tposition: \"fixed\",\r\n\t\tbottom: theme.spacing(1) * 6,\r\n\t\tright: theme.spacing(1) * 6,\r\n\t},\r\n\tnoDecoration: {\r\n\t\ttextDecoration: \"none !important\",\r\n\t},\r\n\tdelete: {\r\n\t\ttextTransform: \"none\",\r\n\t\tcolor: theme.palette.getContrastText(grey[700]),\r\n\t\tbackground: grey[700],\r\n\t\t\"&:hover\": {\r\n\t\t\tcolor: theme.palette.getContrastText(grey[900]),\r\n\t\t\tbackground: grey[900],\r\n\t\t},\r\n\t},\r\n}));\r\n\r\nconst CancelDialog = ({\r\n\tcancelAppointment,\r\n\tsetCancelAppointment,\r\n\tclasses,\r\n\tcancel,\r\n}) => (\r\n\t<Dialog\r\n\t\topen={cancelAppointment !== \"\"}\r\n\t\tonClose={() => setCancelAppointment(\"\")}\r\n\t\tfullWidth\r\n\t>\r\n\t\t<DialogTitle>Delete your Appointment?</DialogTitle>\r\n\t\t<DialogContent>Do you want to delete this Appointment?</DialogContent>\r\n\t\t<DialogActions>\r\n\t\t\t<ButtonGroup fullWidth>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t\tonClick={() => setCancelAppointment(\"\")}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\ttextTransform: \"none\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\tNo, thanks.\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\tonClick={cancel}\r\n\t\t\t\t\tclassName={classes.delete}\r\n\t\t\t\t>\r\n\t\t\t\t\tYes, please delete it.\r\n\t\t\t\t</Button>\r\n\t\t\t</ButtonGroup>\r\n\t\t</DialogActions>\r\n\t</Dialog>\r\n);\r\n\r\nexport default () => {\r\n\tconst classes = useStyles();\r\n\r\n\t//timetable values...\r\n\tconst [data, setData] = useState([]);\r\n\tconst [currentDate, setCurrentDate] = useState(new Date());\r\n\tconst [cancelAppointment, setCancelAppointment] = useState(\"\");\r\n\tconst [loading, setLoading] = useState(true);\r\n\r\n\t//Timetable bar....\r\n\tconst [currentStatus, setCurrentStatus] = useState(0);\r\n\tconst [mainResourceName, setMainResourceName] = useState(\"status\");\r\n\r\n\tconst { alert, detectAlert, user, setUser } = useContext(UserContext);\r\n\tconst { userInfo } = user;\r\n\r\n\t//Reloading user information.\r\n\tconst reloadUser = async () => {\r\n\t\tconst res = await myFetch(\"/api/shared/users/info\", \"GET\");\r\n\t\tdetectAlert(res);\r\n\t\tsetUser(res);\r\n\t\treturn res;\r\n\t};\r\n\r\n\tconst formatData = (data, status) => {\r\n\t\t//Formatting data for timetable to render.\r\n\t\tconst appoints = [];\r\n\t\tdata.map((appointment) => {\r\n\t\t\tswitch (status) {\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tif (appointment.status !== \"PENDING\") return;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\tif (appointment.status !== \"APPROVED\") return;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\tif (appointment.status !== \"DECLINED\") return;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tappoints.push({\r\n\t\t\t\ttitle: appointment.subjectCode,\r\n\t\t\t\tstartDate: new Date(appointment.startDate),\r\n\t\t\t\tendDate: new Date(appointment.endDate),\r\n\t\t\t\tid: appointment._id,\r\n\t\t\t\tlocation: appointment.location,\r\n\t\t\t\tstatus: appointment.status,\r\n\t\t\t\tstaff: appointment.staff,\r\n\t\t\t\tcomments: appointment.comment,\r\n\t\t\t});\r\n\t\t});\r\n\t\tsetData(appoints);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\t//Fetch the appointments of the current subject.\r\n\tconst fetchAppoint = async () => {\r\n\t\tsetLoading(true);\r\n\t\tconst res = await myFetch(\"/api/student/appointment/all\", \"GET\");\r\n\t\tdetectAlert(res);\r\n\t\treturn res.appointments;\r\n\t};\r\n\r\n\t//Updating appointments Information.\r\n\tuseEffect(() => {\r\n\t\treloadUser().then((user) => {\r\n\t\t\tfetchAppoint().then((appointments) =>\r\n\t\t\t\tformatData(appointments, currentStatus)\r\n\t\t\t);\r\n\t\t});\r\n\t}, [alert.status, currentStatus]);\r\n\r\n\t//Cancel an appointment.\r\n\tconst cancel = async () => {\r\n\t\tsetLoading(true);\r\n\t\tconst body = {\r\n\t\t\tid: cancelAppointment,\r\n\t\t};\r\n\t\tconst res = await myFetch(\r\n\t\t\t\"/api/student/appointment/delete\",\r\n\t\t\t\"DELETE\",\r\n\t\t\tbody\r\n\t\t);\r\n\t\tdetectAlert(res, \"Successfully Deleted.\");\r\n\t\tsetCancelAppointment(\"\");\r\n\t};\r\n\r\n\treturn (\r\n\t\t<StudentContext.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\tcurrentDate,\r\n\t\t\t\tsetCurrentDate,\r\n\t\t\t\tcancelAppointment,\r\n\t\t\t\tsetCancelAppointment,\r\n\t\t\t\tdata,\r\n\t\t\t\tsetData,\r\n\t\t\t\tuserInfo,\r\n\t\t\t\tloading,\r\n\t\t\t\tsetLoading,\r\n\t\t\t\tsetUser,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<CancelDialog\r\n\t\t\t\tcancelAppointment={cancelAppointment}\r\n\t\t\t\tsetCancelAppointment={setCancelAppointment}\r\n\t\t\t\tclasses={classes}\r\n\t\t\t\tcancel={cancel}\r\n\t\t\t/>\r\n\t\t\t<Fade in timeout={500}>\r\n\t\t\t\t<div className={classes.paper}>\r\n\t\t\t\t\t<Grid container justify=\"space-around\">\r\n\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t<StudentQuery userInfo={userInfo} />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={8}>\r\n\t\t\t\t\t\t\t<TimetableBar\r\n\t\t\t\t\t\t\t\tcurrentStatus={currentStatus}\r\n\t\t\t\t\t\t\t\tsetCurrentStatus={setCurrentStatus}\r\n\t\t\t\t\t\t\t\tmainResourceName={mainResourceName}\r\n\t\t\t\t\t\t\t\tsetMainResourceName={setMainResourceName}\r\n\t\t\t\t\t\t\t\tdata={data}\r\n\t\t\t\t\t\t\t\tsetData={setData}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TimeTable\r\n\t\t\t\t\t\t\t\tdata={data}\r\n\t\t\t\t\t\t\t\tcurrentDate={currentDate}\r\n\t\t\t\t\t\t\t\tsetCurrentDate={setCurrentDate}\r\n\t\t\t\t\t\t\t\theader={Header}\r\n\t\t\t\t\t\t\t\tcontent={Content}\r\n\t\t\t\t\t\t\t\tloading={loading}\r\n\t\t\t\t\t\t\t\tmainResourceName={mainResourceName}\r\n\t\t\t\t\t\t\t\tsubjects={user.userInfo.subjects}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</div>\r\n\t\t\t</Fade>\r\n\t\t</StudentContext.Provider>\r\n\t);\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { UserContext, myFetch } from \"../Methods\";\r\nimport Layout from \"../Navigation/Layout\";\r\nimport Student from \"./Student\";\r\nimport Staff from \"./Staff\";\r\n\r\nexport default () => {\r\n\t//Set the routes.\r\n\tconst {\r\n\t\tsetSelectedRoute,\r\n\t\tcloseAlert,\r\n\t\tdetectAlert,\r\n\t\tloadingRoute,\r\n\t\tsetLoadingRoute,\r\n\t\tfetchUser,\r\n\t\tuser,\r\n\t} = useContext(UserContext);\r\n\r\n\t//Loading user information.\r\n\tconst [userInfo, setUserInfo] = useState({});\r\n\tuseEffect(() => {\r\n\t\tsetSelectedRoute(\"appointments\");\r\n\t\tcloseAlert();\r\n\t\tfetchUser().then(() => setLoadingRoute(false));\r\n\t}, []);\r\n\r\n\tif (loadingRoute || !user.type) return <Layout />;\r\n\r\n\treturn (\r\n\t\t<Layout\r\n\t\t\tcontent={user.type === \"student\" ? <Student /> : <Staff />}\r\n\t\t\ttype={user.type}\r\n\t\t/>\r\n\t);\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n    Grid,\r\n    CardContent,\r\n    withWidth,\r\n    isWidthUp,\r\n    Button,\r\n    ButtonGroup,\r\n    IconButton,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    TextField,\r\n    Paper,\r\n    Snackbar,\r\n    Slider,\r\n    Tooltip,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles, withStyles, lighten } from \"@material-ui/core/styles\";\r\nimport { myFetch, UserContext } from \"../Methods\";\r\nimport Cookies from \"js-cookie\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ToggleOff } from \"@material-ui/icons\";\r\nimport SchoolIcon from \"@material-ui/icons/School\";\r\nimport ScheduleIcon from \"@material-ui/icons/Schedule\";\r\nimport RoomIcon from \"@material-ui/icons/Room\";\r\nimport GroupIcon from \"@material-ui/icons/GroupAddTwoTone\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { grey, pink } from \"@material-ui/core/colors\";\r\n\r\nimport MomentUtils from \"@date-io/moment\";\r\nimport {\r\n    KeyboardDateTimePicker,\r\n    MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\n\r\nimport { StaffContext } from \"../Methods\";\r\n\r\nconst SlotSlider = withStyles({\r\n    root: {\r\n        color: \"#52af77\",\r\n        height: 8,\r\n    },\r\n    thumb: {\r\n        height: 24,\r\n        width: 24,\r\n        backgroundColor: \"#fff\",\r\n        border: \"2px solid currentColor\",\r\n        marginTop: -8,\r\n        marginLeft: -12,\r\n        \"&:focus, &:hover, &$active\": {\r\n            boxShadow: \"inherit\",\r\n        },\r\n    },\r\n    active: {},\r\n    valueLabel: {\r\n        left: \"calc(-50% + 4px)\",\r\n    },\r\n    track: {\r\n        height: 8,\r\n        borderRadius: 4,\r\n    },\r\n    rail: {\r\n        height: 8,\r\n        borderRadius: 4,\r\n    },\r\n})(Slider);\r\n\r\nconst marks = [\r\n    {\r\n        value: 0,\r\n        label: \"0 Minutes\",\r\n    },\r\n    {\r\n        value: 60,\r\n        label: \"1 hour\",\r\n    },\r\n    {\r\n        value: 120,\r\n        label: \"2 hours\",\r\n    },\r\n    {\r\n        value: 240,\r\n        label: \"4 hours\",\r\n    },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    icon: {\r\n        margin: \"auto\",\r\n    },\r\n\r\n    closeButton: {\r\n        position: \"absolute\",\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n}));\r\n\r\nconst DeleteButton = withStyles((theme) => ({\r\n    root: {\r\n        color: theme.palette.getContrastText(grey[700]),\r\n        backgroundColor: grey[700],\r\n        \"&:hover\": {\r\n            backgroundColor: grey[900],\r\n        },\r\n    },\r\n}))(Button);\r\n\r\nexport default ({ edit, open, toggle }) => {\r\n    const classes = useStyles();\r\n    const {\r\n        editingAppointment,\r\n        setEditingAppointment,\r\n        setLoading,\r\n        api,\r\n    } = useContext(StaffContext);\r\n    const { detectAlert, setAlert, user } = useContext(UserContext);\r\n    const subjects = user.userInfo.subjects;\r\n\r\n    const [subjectCode, setSubjectCode] = useState(subjects[0]);\r\n    const [startDate, setStartDate] = useState(new Date());\r\n    const [endDate, setEndDate] = useState(new Date());\r\n    const [location, setLocation] = useState(\"\");\r\n    const [slot, setSlot] = useState(20);\r\n\r\n    const getDuration = (startDate, endDate) => {\r\n        const duration = (endDate - startDate) / 60000;\r\n        if (duration < 15) return 15;\r\n        if (duration > 300) return 300;\r\n        return duration;\r\n    };\r\n\r\n    const getEndDate = (start, duration) => {\r\n        const end = new Date(start);\r\n        return end.setMinutes(end.getMinutes() + duration);\r\n    };\r\n\r\n    const createTime = async () => {\r\n        setLoading(true);\r\n        if (!subjectCode || !startDate || !endDate || location === \"\") {\r\n            setAlert({ status: \"warning\", message: \"Insufficient Input.\" });\r\n            return;\r\n        }\r\n        const body = {\r\n            subjectCode: subjectCode,\r\n            startDate: startDate,\r\n            endDate: getEndDate(startDate, getDuration(startDate, endDate)),\r\n            location: location,\r\n            slotsAvailable: slot,\r\n        };\r\n        const res = await myFetch(api.create, \"POST\", body);\r\n        detectAlert(res, \"Successfully created.\");\r\n        toggle();\r\n        return res;\r\n    };\r\n\r\n    const editTime = async () => {\r\n        setLoading(true);\r\n        if (\r\n            !editingAppointment.endDate ||\r\n            !editingAppointment.startDate ||\r\n            !editingAppointment.slotsAvailable ||\r\n            editingAppointment.location === \"\"\r\n        ) {\r\n            setAlert({ status: \"warning\", message: \"Insufficient Input.\" });\r\n            return;\r\n        }\r\n\r\n        const res = await myFetch(api.edit, \"PATCH\", editingAppointment);\r\n        detectAlert(res, \"Successfully updated.\");\r\n        toggle();\r\n        return res;\r\n    };\r\n\r\n    const deleteTime = async () => {\r\n        setLoading(true);\r\n        const body = {\r\n            id: editingAppointment.id,\r\n        };\r\n        const res = await myFetch(api.delete, \"DELETE\", body);\r\n        detectAlert(res, \"Successfully deleted.\");\r\n        toggle();\r\n        return res;\r\n    };\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={toggle}\r\n            aria-labelledby=\"form-dialog-title\"\r\n            fullWidth\r\n        >\r\n            <DialogTitle id=\"form-dialog-title\">\r\n                {!edit ? \"Create a new Consultation\" : \"Edit a Consultation\"}\r\n\r\n                <IconButton\r\n                    aria-label=\"close\"\r\n                    className={classes.closeButton}\r\n                    onClick={toggle}\r\n                >\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            </DialogTitle>\r\n            <DialogContent dividers>\r\n                <Grid container>\r\n                    {edit ? null : (\r\n                        <Grid container>\r\n                            <Grid item xs={1}>\r\n                                <SchoolIcon className={classes.icon} />\r\n                            </Grid>\r\n                            <Grid item xs={11}>\r\n                                <Autocomplete\r\n                                    id=\"addSubject\"\r\n                                    options={subjects}\r\n                                    getOptionLabel={(option) => option}\r\n                                    value={subjectCode}\r\n                                    onChange={(event, newValue) => {\r\n                                        setSubjectCode(newValue);\r\n                                    }}\r\n                                    renderInput={(params) => {\r\n                                        return (\r\n                                            <TextField\r\n                                                {...params}\r\n                                                label=\"Please choose a subject\"\r\n                                                variant=\"filled\"\r\n                                                required\r\n                                            />\r\n                                        );\r\n                                    }}\r\n                                />\r\n                                <br />\r\n                                <br />\r\n                            </Grid>\r\n                        </Grid>\r\n                    )}\r\n                    <Grid item xs={1}>\r\n                        <ScheduleIcon className={classes.icon} />\r\n                    </Grid>\r\n                    <Grid item xs={11}>\r\n                        <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                            <KeyboardDateTimePicker\r\n                                label=\"Start Date\"\r\n                                value={\r\n                                    edit\r\n                                        ? editingAppointment.startDate\r\n                                        : startDate\r\n                                }\r\n                                onChange={(date) => {\r\n                                    if (edit) {\r\n                                        setEditingAppointment({\r\n                                            ...editingAppointment,\r\n                                            startDate: date,\r\n                                            endDate: getEndDate(\r\n                                                editingAppointment.startDate,\r\n                                                getDuration(\r\n                                                    editingAppointment.startDate,\r\n                                                    editingAppointment.endDate\r\n                                                )\r\n                                            ),\r\n                                        });\r\n                                        return;\r\n                                    }\r\n                                    setStartDate(date);\r\n                                }}\r\n                                fullWidth\r\n                                required\r\n                            />\r\n                        </MuiPickersUtilsProvider>\r\n                        <br />\r\n                        <br />\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <br />\r\n                        <ScheduleIcon className={classes.icon} />\r\n                    </Grid>\r\n                    <Grid item xs={11}>\r\n                        <DialogContentText>\r\n                            {\"Duration: \"}\r\n                            {edit\r\n                                ? getDuration(\r\n                                      editingAppointment.startDate,\r\n                                      editingAppointment.endDate\r\n                                  )\r\n                                : getDuration(startDate, endDate)}\r\n                            {\" Minutes\"}\r\n                        </DialogContentText>\r\n                        <br />\r\n                        <Slider\r\n                            valueLabelDisplay=\"auto\"\r\n                            marks={marks}\r\n                            aria-labelledby=\"discrete-slider\"\r\n                            getAriaValueText={(value) => `${value} Minutes`}\r\n                            value={\r\n                                edit\r\n                                    ? getDuration(\r\n                                          editingAppointment.startDate,\r\n                                          editingAppointment.endDate\r\n                                      )\r\n                                    : getDuration(startDate, endDate)\r\n                            }\r\n                            onChange={(e, newValue) => {\r\n                                if (edit) {\r\n                                    setEditingAppointment({\r\n                                        ...editingAppointment,\r\n                                        endDate: getEndDate(\r\n                                            editingAppointment.startDate,\r\n                                            newValue\r\n                                        ),\r\n                                    });\r\n                                    return;\r\n                                }\r\n                                setEndDate(getEndDate(startDate, newValue));\r\n                            }}\r\n                            step={15}\r\n                            max={300}\r\n                        />\r\n                        <br />\r\n                        <br />\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <RoomIcon className={classes.icon} />\r\n                    </Grid>\r\n                    <Grid item xs={11}>\r\n                        <TextField\r\n                            label=\"Location\"\r\n                            variant=\"filled\"\r\n                            required\r\n                            value={\r\n                                edit ? editingAppointment.location : location\r\n                            }\r\n                            onChange={(e) => {\r\n                                if (edit) {\r\n                                    setEditingAppointment({\r\n                                        ...editingAppointment,\r\n                                        location: e.target.value,\r\n                                    });\r\n                                    return;\r\n                                }\r\n                                setLocation(e.target.value);\r\n                            }}\r\n                            fullWidth\r\n                        />\r\n                        <DialogContentText></DialogContentText>\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <br />\r\n                        <GroupIcon className={classes.icon} />\r\n                    </Grid>\r\n                    <Grid item xs={11}>\r\n                        <DialogContentText>\r\n                            Slot Available:{\" \"}\r\n                            {edit ? editingAppointment.slotsAvailable : slot}\r\n                        </DialogContentText>\r\n                        <br />\r\n                        <SlotSlider\r\n                            valueLabelDisplay=\"auto\"\r\n                            aria-label=\"pretto slider\"\r\n                            aria-labelledby=\"discrete-slider\"\r\n                            value={\r\n                                edit ? editingAppointment.slotsAvailable : slot\r\n                            }\r\n                            onChange={(e, newValue) => {\r\n                                if (edit) {\r\n                                    setEditingAppointment({\r\n                                        ...editingAppointment,\r\n                                        slotsAvailable: newValue,\r\n                                    });\r\n                                }\r\n                                setSlot(newValue);\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogContent>\r\n\r\n            <DialogActions>\r\n                {edit ? (\r\n                    <ButtonGroup fullWidth>\r\n                        <DeleteButton\r\n                            fullWidth\r\n                            onClick={() => {\r\n                                toggle();\r\n                                deleteTime().then((res) => {\r\n                                    setLoading(false);\r\n                                });\r\n                            }}\r\n                            className={classes.delete}\r\n                        >\r\n                            Delete\r\n                        </DeleteButton>\r\n                        <Button\r\n                            fullWidth\r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                            onClick={() => {\r\n                                editTime().then((res) => {\r\n                                    console.log(res);\r\n                                    setLoading(false);\r\n                                });\r\n                            }}\r\n                        >\r\n                            Update\r\n                        </Button>\r\n                    </ButtonGroup>\r\n                ) : (\r\n                    <ButtonGroup fullWidth>\r\n                        <Button fullWidth onClick={toggle}>\r\n                            Cancel\r\n                        </Button>\r\n                        <Button\r\n                            fullWidth\r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                            onClick={() => {\r\n                                createTime().then((res) => {\r\n                                    console.log(res);\r\n                                    setLoading(false);\r\n                                });\r\n                            }}\r\n                        >\r\n                            Create\r\n                        </Button>\r\n                    </ButtonGroup>\r\n                )}\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\n\r\nimport { AppointmentTooltip } from \"@devexpress/dx-react-scheduler-material-ui\";\r\n\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport { IconButton, Grid, Paper, Fab, Container } from \"@material-ui/core\";\r\n\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Room from \"@material-ui/icons/Room\";\r\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\r\nimport classNames from \"clsx\";\r\n\r\nimport { myFetch, UserContext, StudentContext } from \"../Methods\";\r\nimport EditDialog from \"./ConsultDialog\";\r\n\r\nconst style = ({ palette, spacing }) => ({\r\n\ticon: {\r\n\t\tcolor: palette.action.active,\r\n\t},\r\n\ttextCenter: {\r\n\t\ttextAlign: \"center\",\r\n\t},\r\n\theader: {\r\n\t\theight: \"260px\",\r\n\t\tbackgroundSize: \"cover\",\r\n\t},\r\n});\r\n\r\nexport default withStyles(style, { name: \"Header\" })(\r\n\t({ children, appointmentData, classes, ...restProps }) => {\r\n\t\tconst { cancelAppointment, setCancelAppointment } = useContext(\r\n\t\t\tStudentContext\r\n\t\t);\r\n\t\tconst { detectAlert } = useContext(UserContext);\r\n\r\n\t\treturn (\r\n\t\t\t<AppointmentTooltip.Header\r\n\t\t\t\t{...restProps}\r\n\t\t\t\tappointmentData={appointmentData}\r\n\t\t\t\tshowCloseButton\r\n\t\t\t\tshowOpenButton={appointmentData.booking === \"BOOKED\"}\r\n\t\t\t\tonOpenButtonClick={() =>\r\n\t\t\t\t\tsetCancelAppointment(appointmentData.id)\r\n\t\t\t\t}\r\n\t\t\t></AppointmentTooltip.Header>\r\n\t\t);\r\n\t}\r\n);\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\n\r\nimport { AppointmentTooltip } from \"@devexpress/dx-react-scheduler-material-ui\";\r\n\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n\tIconButton,\r\n\tGrid,\r\n\tPaper,\r\n\tFab,\r\n\tContainer,\r\n\tDialog,\r\n\tSnackbar,\r\n\tDialogContent,\r\n\tDialogTitle,\r\n} from \"@material-ui/core\";\r\n\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Room from \"@material-ui/icons/Room\";\r\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\r\nimport classNames from \"clsx\";\r\n\r\nimport { myFetch, UserContext, StaffContext } from \"../Methods\";\r\nimport EditDialog from \"./ConsultDialog\";\r\n\r\nconst style = ({ palette, spacing }) => ({\r\n\ticon: {\r\n\t\tcolor: palette.action.active,\r\n\t},\r\n\ttextCenter: {\r\n\t\ttextAlign: \"center\",\r\n\t},\r\n\theader: {\r\n\t\theight: \"260px\",\r\n\t\tbackgroundSize: \"cover\",\r\n\t},\r\n});\r\n\r\nexport default withStyles(style, { name: \"Header\" })(\r\n\t({ children, appointmentData, classes, ...restProps }) => {\r\n\t\tconst { setEditOpen, setEditingAppointment } = useContext(StaffContext);\r\n\r\n\t\treturn (\r\n\t\t\t<AppointmentTooltip.Header\r\n\t\t\t\t{...restProps}\r\n\t\t\t\tappointmentData={appointmentData}\r\n\t\t\t\tshowCloseButton\r\n\t\t\t\tshowOpenButton\r\n\t\t\t\tonOpenButtonClick={() => {\r\n\t\t\t\t\tsetEditOpen(true);\r\n\t\t\t\t\tsetEditingAppointment(appointmentData);\r\n\t\t\t\t}}\r\n\t\t\t></AppointmentTooltip.Header>\r\n\t\t);\r\n\t}\r\n);\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n\tAppointmentTooltip,\r\n\tWeekView,\r\n} from \"@devexpress/dx-react-scheduler-material-ui\";\r\n\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n\tGrid,\r\n\tPaper,\r\n\tTypography,\r\n\tList,\r\n\tListItem,\r\n\tListItemIcon,\r\n\tListItemText,\r\n\tDivider,\r\n\tBadge,\r\n} from \"@material-ui/core\";\r\n\r\nimport FolderIcon from \"@material-ui/icons/Folder\";\r\nimport DataUsageIcon from \"@material-ui/icons/DataUsage\";\r\nimport RoomIcon from \"@material-ui/icons/Room\";\r\nimport EqualizerIcon from \"@material-ui/icons/Equalizer\";\r\nimport FormatAlignLeftIcon from \"@material-ui/icons/FormatAlignLeft\";\r\nimport LibraryAddIcon from \"@material-ui/icons/LibraryAdd\";\r\nimport PlaylistAddIcon from \"@material-ui/icons/PlaylistAdd\";\r\nimport SupervisorAccountIcon from \"@material-ui/icons/SupervisorAccount\";\r\n\r\nimport { myFetch, UserContext, StaffContext } from \"../Methods\";\r\nimport Staff from \"./Staff\";\r\nconst style = ({ palette, spacing }) => ({\r\n\ticon: {\r\n\t\tcolor: palette.action.active,\r\n\t\tmarginLeft: spacing(1),\r\n\t},\r\n\ttextCenter: {\r\n\t\ttextAlign: \"center\",\r\n\t},\r\n\theader: {\r\n\t\theight: \"260px\",\r\n\t\tbackgroundSize: \"cover\",\r\n\t},\r\n\tcommandButton: {\r\n\t\tbackgroundColor: \"rgba(255,255,100,0.65)\",\r\n\t},\r\n\tleft: {\r\n\t\tmarginLeft: spacing(1),\r\n\t},\r\n});\r\n\r\nexport default withStyles(style, { name: \"Content\" })(\r\n\t({ children, appointmentData, classes, ...restProps }) => {\r\n\t\t//const {} = useContext(StaffContext);\r\n\t\tconsole.log(appointmentData);\r\n\t\treturn (\r\n\t\t\t<AppointmentTooltip.Content\r\n\t\t\t\t{...restProps}\r\n\t\t\t\tappointmentData={appointmentData}\r\n\t\t\t>\r\n\t\t\t\t<Grid container justify=\"center\">\r\n\t\t\t\t\t<Grid item xs={11}>\r\n\t\t\t\t\t\t<List>\r\n\t\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t<RoomIcon />\r\n\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\t\tprimary=\"Location\"\r\n\t\t\t\t\t\t\t\t\tsecondary={appointmentData.location}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t<SupervisorAccountIcon />\r\n\t\t\t\t\t\t\t\t</ListItemIcon>{\" \"}\r\n\t\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\t\tprimary=\"Slots Available\"\r\n\t\t\t\t\t\t\t\t\tsecondary=\" \"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\t\t\tbadgeContent={\r\n\t\t\t\t\t\t\t\t\t\t\tappointmentData.slotsAvailable\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\tshowZero\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<EqualizerIcon />\r\n\t\t\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t<LibraryAddIcon />\r\n\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\r\n\t\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\t\tprimary=\"Student Registered\"\r\n\t\t\t\t\t\t\t\t\tsecondary=\" \"\r\n\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\t\t\tbadgeContent={\r\n\t\t\t\t\t\t\t\t\t\t\tappointmentData.totalStudent\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\tshowZero\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<EqualizerIcon />\r\n\t\t\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t</List>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</AppointmentTooltip.Content>\r\n\t\t);\r\n\t}\r\n);\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n\tGrid,\r\n\tCardContent,\r\n\twithWidth,\r\n\tisWidthUp,\r\n\tButton,\r\n\tPaper,\r\n\tTypography,\r\n\tLinearProgress,\r\n\tGrow,\r\n\tSnackbar,\r\n\tFab,\r\n\tZoom,\r\n\tCollapse,\r\n\tFade,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles, withStyles, lighten } from \"@material-ui/core/styles\";\r\nimport TimeTable from \"../Timetable\";\r\n\r\nimport ConsultDialog from \"./ConsultDialog\";\r\n\r\nimport Header from \"./StaffHeader\";\r\nimport Content from \"./StaffContent\";\r\n\r\nimport { myFetch, UserContext, StaffContext } from \"../Methods\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tpaper: {\r\n\t\tmaxWidth: \"100%\",\r\n\t\tmarginTop: theme.spacing(10),\r\n\t},\r\n\tfab: {\r\n\t\tposition: \"fixed\",\r\n\t\tbottom: theme.spacing(1) * 6,\r\n\t\tright: theme.spacing(1) * 6,\r\n\t},\r\n}));\r\n\r\nexport default () => {\r\n\tconst classes = useStyles();\r\n\r\n\tconst [data, setData] = useState([]);\r\n\r\n\t//timetable values...\r\n\tconst [currentDate, setCurrentDate] = useState(\"2020-5-11\");\r\n\tconst [createOpen, setCreateOpen] = useState(false);\r\n\tconst [editOpen, setEditOpen] = useState(false);\r\n\tconst [loading, setLoading] = useState(true);\r\n\r\n\tconst [editingAppointment, setEditingAppointment] = useState({\r\n\t\ttitle: \"\",\r\n\t\tstartDate: new Date(),\r\n\t\tendDate: new Date(),\r\n\t\tslotsAvailable: 0,\r\n\t\tlocation: \"\",\r\n\t});\r\n\r\n\tconst { alert, user } = useContext(UserContext);\r\n\t//Updating consultations Information.\r\n\tuseEffect(() => {\r\n\t\tsetLoading(true);\r\n\t\t//Fetch all created consultations.\r\n\t\tconst fetchConsult = async () => {\r\n\t\t\tconst res = await myFetch(\"/api/staff/consult/viewCreated\", \"GET\");\r\n\t\t\treturn res.consultations;\r\n\t\t};\r\n\t\tfetchConsult().then((consultations) => {\r\n\t\t\tconst consults = [];\r\n\t\t\tconsultations.map((consultation) => {\r\n\t\t\t\tconsults.push({\r\n\t\t\t\t\ttitle: consultation.subjectCode,\r\n\t\t\t\t\tstartDate: new Date(consultation.startDate),\r\n\t\t\t\t\tendDate: new Date(consultation.endDate),\r\n\t\t\t\t\tid: consultation._id,\r\n\t\t\t\t\tlocation: consultation.location,\r\n\t\t\t\t\tslotsAvailable: consultation.slotsAvailable,\r\n\t\t\t\t\ttotalStudent: consultation.studentRegistered.length,\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tsetData(consults);\r\n\t\t\tsetLoading(false);\r\n\t\t});\r\n\t}, [alert.status]);\r\n\r\n\tconst api = {\r\n\t\tcreate: \"/api/staff/consult/create\",\r\n\t\tedit: \"/api/staff/consult/patch\",\r\n\t\tdelete: \"/api/staff/consult/delete\",\r\n\t};\r\n\r\n\treturn (\r\n\t\t<StaffContext.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\tcurrentDate,\r\n\t\t\t\tsetCurrentDate,\r\n\t\t\t\tcreateOpen,\r\n\t\t\t\tsetCreateOpen,\r\n\t\t\t\tdata,\r\n\t\t\t\tsetData,\r\n\t\t\t\teditOpen,\r\n\t\t\t\tsetEditOpen,\r\n\t\t\t\tsetEditingAppointment,\r\n\t\t\t\teditingAppointment,\r\n\t\t\t\tloading,\r\n\t\t\t\tsetLoading,\r\n\t\t\t\tapi,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<Fade in timeout={500}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<TimeTable\r\n\t\t\t\t\t\tdata={data}\r\n\t\t\t\t\t\tcurrentDate={currentDate}\r\n\t\t\t\t\t\tsetCurrentDate={setCurrentDate}\r\n\t\t\t\t\t\theader={Header}\r\n\t\t\t\t\t\tcontent={Content}\r\n\t\t\t\t\t\tloading={loading}\r\n\t\t\t\t\t\tmainResourceName=\"title\"\r\n\t\t\t\t\t\tsubjects={user.userInfo.subjects}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<ConsultDialog\r\n\t\t\t\t\t\topen={createOpen}\r\n\t\t\t\t\t\ttoggle={() => {\r\n\t\t\t\t\t\t\tsetCreateOpen(!createOpen);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<ConsultDialog\r\n\t\t\t\t\t\topen={editOpen}\r\n\t\t\t\t\t\teditingAppointment={editingAppointment}\r\n\t\t\t\t\t\ttoggle={() => {\r\n\t\t\t\t\t\t\tsetEditOpen(!editOpen);\r\n\t\t\t\t\t\t\tsetEditingAppointment({\r\n\t\t\t\t\t\t\t\ttitle: \"\",\r\n\t\t\t\t\t\t\t\tstartDate: new Date(),\r\n\t\t\t\t\t\t\t\tendDate: new Date(),\r\n\t\t\t\t\t\t\t\tslotsAvailable: 0,\r\n\t\t\t\t\t\t\t\tlocation: \"\",\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tedit\r\n\t\t\t\t\t\tcontext={StaffContext}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</Fade>\r\n\t\t\t<Zoom in timeout={1000}>\r\n\t\t\t\t<Fab\r\n\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\tclassName={classes.fab}\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tsetCreateOpen(true);\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<AddIcon />\r\n\t\t\t\t</Fab>\r\n\t\t\t</Zoom>\r\n\t\t</StaffContext.Provider>\r\n\t);\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n\tAppointmentTooltip,\r\n\tWeekView,\r\n} from \"@devexpress/dx-react-scheduler-material-ui\";\r\n\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n\tGrid,\r\n\tPaper,\r\n\tTypography,\r\n\tList,\r\n\tListItem,\r\n\tListItemIcon,\r\n\tListItemText,\r\n\tDivider,\r\n\tBadge,\r\n\tFab,\r\n} from \"@material-ui/core\";\r\n\r\nimport FolderIcon from \"@material-ui/icons/Folder\";\r\nimport DataUsageIcon from \"@material-ui/icons/DataUsage\";\r\nimport RoomIcon from \"@material-ui/icons/Room\";\r\nimport EqualizerIcon from \"@material-ui/icons/Equalizer\";\r\nimport FormatAlignLeftIcon from \"@material-ui/icons/FormatAlignLeft\";\r\nimport LibraryAddIcon from \"@material-ui/icons/LibraryAdd\";\r\nimport PlaylistAddIcon from \"@material-ui/icons/PlaylistAdd\";\r\nimport SupervisorAccountIcon from \"@material-ui/icons/SupervisorAccount\";\r\n\r\nimport { myFetch, UserContext, StudentContext } from \"../Methods\";\r\nimport Staff from \"./Staff\";\r\nconst style = ({ palette, spacing }) => ({\r\n\ticon: {\r\n\t\tcolor: palette.action.active,\r\n\t\tmarginLeft: spacing(1),\r\n\t},\r\n\ttextCenter: {\r\n\t\ttextAlign: \"center\",\r\n\t},\r\n\theader: {\r\n\t\theight: \"260px\",\r\n\t\tbackgroundSize: \"cover\",\r\n\t},\r\n\tcommandButton: {\r\n\t\tbackgroundColor: \"rgba(255,255,100,0.65)\",\r\n\t},\r\n\tleft: {\r\n\t\tmarginLeft: spacing(1),\r\n\t},\r\n\tfab: {\r\n\t\tmargin: \"auto\",\r\n\t\twidth: \"100%\",\r\n\t},\r\n});\r\n\r\nexport default withStyles(style, { name: \"Content\" })(\r\n\t({ children, appointmentData, classes, ...restProps }) => {\r\n\t\t//const {} = useContext(StaffContext);\r\n\t\tconst { setBookOpen, setLoading, userInfo, setUser } = useContext(\r\n\t\t\tStudentContext\r\n\t\t);\r\n\t\tconst { detectAlert, setLoadingRoute } = useContext(UserContext);\r\n\r\n\t\tconst book = async () => {\r\n\t\t\tsetLoading(true);\r\n\t\t\tconst body = {\r\n\t\t\t\tid: appointmentData.id,\r\n\t\t\t};\r\n\t\t\tconst res = await myFetch(\r\n\t\t\t\t\"/api/student/consult/book\",\r\n\t\t\t\t\"POST\",\r\n\t\t\t\tbody\r\n\t\t\t);\r\n\t\t\tdetectAlert(res, \"Successfully booked.\");\r\n\t\t};\r\n\r\n\t\tconst checkBooked = () => {\r\n\t\t\tconsole.log(userInfo.registeredConsult);\r\n\t\t\tconsole.log(appointmentData.id);\r\n\t\t\treturn (\r\n\t\t\t\tuserInfo.registeredConsult.filter(\r\n\t\t\t\t\t(each) => each == appointmentData.id\r\n\t\t\t\t).length > 0\r\n\t\t\t);\r\n\t\t};\r\n\r\n\t\treturn (\r\n\t\t\t<AppointmentTooltip.Content\r\n\t\t\t\t{...restProps}\r\n\t\t\t\tappointmentData={appointmentData}\r\n\t\t\t>\r\n\t\t\t\t<Grid container justify=\"center\">\r\n\t\t\t\t\t<Grid item xs={11}>\r\n\t\t\t\t\t\t<List>\r\n\t\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t<RoomIcon />\r\n\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\t\tprimary=\"Location\"\r\n\t\t\t\t\t\t\t\t\tsecondary={appointmentData.location}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\r\n\t\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t<SupervisorAccountIcon />\r\n\t\t\t\t\t\t\t\t</ListItemIcon>{\" \"}\r\n\t\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\t\tprimary=\"Slots Available\"\r\n\t\t\t\t\t\t\t\t\tsecondary=\" \"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\t\t\tbadgeContent={\r\n\t\t\t\t\t\t\t\t\t\t\tappointmentData.slotsAvailable\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\tshowZero\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<EqualizerIcon />\r\n\t\t\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t<LibraryAddIcon />\r\n\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\r\n\t\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\t\tprimary=\"Student Registered\"\r\n\t\t\t\t\t\t\t\t\tsecondary=\" \"\r\n\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\t\t\tbadgeContent={\r\n\t\t\t\t\t\t\t\t\t\t\tappointmentData.totalStudent\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\tshowZero\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<EqualizerIcon />\r\n\t\t\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t\t<Fab\r\n\t\t\t\t\t\t\t\t\tvariant=\"extended\"\r\n\t\t\t\t\t\t\t\t\tclassName={classes.fab}\r\n\t\t\t\t\t\t\t\t\tcolor={\r\n\t\t\t\t\t\t\t\t\t\tcheckBooked() ? \"default\" : \"primary\"\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tonClick={book}\r\n\t\t\t\t\t\t\t\t\tdisabled={checkBooked()}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<PlaylistAddIcon />\r\n\t\t\t\t\t\t\t\t\t{checkBooked() ? \"Booked\" : \"Book it\"}\r\n\t\t\t\t\t\t\t\t</Fab>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t</List>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</AppointmentTooltip.Content>\r\n\t\t);\r\n\t}\r\n);\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n\tGrid,\r\n\tCardContent,\r\n\twithWidth,\r\n\tisWidthUp,\r\n\tButton,\r\n\tButtonGroup,\r\n\tPaper,\r\n\tTypography,\r\n\tLinearProgress,\r\n\tGrow,\r\n\tFab,\r\n\tZoom,\r\n\tCollapse,\r\n\tFade,\r\n\tTabs,\r\n\tAppBar,\r\n\tTab,\r\n\tDialog,\r\n\tDialogContent,\r\n\tDialogTitle,\r\n\tDialogActions,\r\n\tSelect,\r\n\tMenuItem,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles, withStyles, lighten } from \"@material-ui/core/styles\";\r\nimport TimeTable from \"../Timetable\";\r\n\r\nimport Header from \"./StudentHeader\";\r\nimport Content from \"./StudentContent\";\r\n\r\nimport { myFetch, UserContext, StudentContext } from \"../Methods\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tpaper: {\r\n\t\tmaxHeight: \"70VH\",\r\n\t},\r\n\tfab: {\r\n\t\tposition: \"fixed\",\r\n\t\tbottom: theme.spacing(1) * 6,\r\n\t\tright: theme.spacing(1) * 6,\r\n\t},\r\n\tnoDecoration: {\r\n\t\ttextDecoration: \"none !important\",\r\n\t},\r\n\tdelete: {\r\n\t\ttextTransform: \"none\",\r\n\t\tcolor: theme.palette.getContrastText(grey[700]),\r\n\t\tbackground: grey[700],\r\n\t\t\"&:hover\": {\r\n\t\t\tcolor: theme.palette.getContrastText(grey[900]),\r\n\t\t\tbackground: grey[900],\r\n\t\t},\r\n\t},\r\n}));\r\n\r\nexport default () => {\r\n\tconst classes = useStyles();\r\n\r\n\tconst [data, setData] = useState([]);\r\n\r\n\t//timetable values...\r\n\tconst [currentDate, setCurrentDate] = useState(new Date());\r\n\r\n\tconst [cancelAppointment, setCancelAppointment] = useState(\"\");\r\n\r\n\tconst [currentSubject, setCurrentSubject] = useState(0);\r\n\tconst [loading, setLoading] = useState(true);\r\n\r\n\tconst [mainResourceName, setMainResourceName] = useState(\"booking\");\r\n\tconst changeMainResource = (mainResourceName) => {\r\n\t\tsetMainResourceName(mainResourceName);\r\n\t};\r\n\r\n\tconst { alert, detectAlert, user, setUser } = useContext(UserContext);\r\n\r\n\tconst reloadUser = async (simpleReload) => {\r\n\t\t//reloading user information.\r\n\t\tsetLoading(true);\r\n\t\tconst user = await myFetch(\"/api/shared/users/info\", \"GET\");\r\n\t\tdetectAlert(user);\r\n\t\tsetUser(user);\r\n\t\tif (simpleReload) setLoading(false);\r\n\r\n\t\treturn user;\r\n\t};\r\n\r\n\t//Fetch the consultations of the current subject.\r\n\tconst fetchConsult = async () => {\r\n\t\tif (currentSubject == 0) {\r\n\t\t\tconst res = await myFetch(\r\n\t\t\t\t\"/api/student/consult/viewRegistered\",\r\n\t\t\t\t\"GET\"\r\n\t\t\t);\r\n\t\t\treturn res.consultations;\r\n\t\t}\r\n\t\tconst body = {\r\n\t\t\tsubjectCode: userInfo.subjects[currentSubject - 1],\r\n\t\t};\r\n\t\tconst res = await myFetch(\"/api/student/consult/viewAll\", \"POST\", body);\r\n\t\treturn res.consultations;\r\n\t};\r\n\r\n\tconst getBookingStatus = (consultation, user) => {\r\n\t\tif (\r\n\t\t\tuser.userInfo.registeredConsult.filter(\r\n\t\t\t\t(each) => each == consultation._id\r\n\t\t\t).length > 0\r\n\t\t)\r\n\t\t\treturn \"BOOKED\";\r\n\r\n\t\tif (consultation.slotsAvailable < 1) return \"FULL\";\r\n\t\treturn \"AVAILABLE\";\r\n\t};\r\n\r\n\t//Updating consultations Information.\r\n\tuseEffect(() => {\r\n\t\treloadUser(false).then((user) => {\r\n\t\t\tfetchConsult().then((consultations) => {\r\n\t\t\t\tif (!consultations) return;\r\n\r\n\t\t\t\t//Formatting data for timetable to render.\r\n\t\t\t\tconst consults = [];\r\n\r\n\t\t\t\tconsultations.map((consultation) => {\r\n\t\t\t\t\tconsults.push({\r\n\t\t\t\t\t\ttitle: consultation.subjectCode,\r\n\t\t\t\t\t\tstartDate: new Date(consultation.startDate),\r\n\t\t\t\t\t\tendDate: new Date(consultation.endDate),\r\n\t\t\t\t\t\tid: consultation._id,\r\n\t\t\t\t\t\tlocation: consultation.location,\r\n\t\t\t\t\t\tslotsAvailable: consultation.slotsAvailable,\r\n\t\t\t\t\t\ttotalStudent: consultation.studentRegistered.length,\r\n\t\t\t\t\t\tbooking: getBookingStatus(consultation, user),\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t\tsetData(consults);\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\tconsole.log(\"?\");\r\n\t\t\t});\r\n\t\t});\r\n\t}, [alert.status, currentSubject]);\r\n\r\n\t//Cancel a booking.\r\n\tconst cancel = async () => {\r\n\t\tsetLoading(true);\r\n\t\tconst body = {\r\n\t\t\tid: cancelAppointment,\r\n\t\t};\r\n\t\tconst res = await myFetch(\"/api/student/consult/cancel\", \"POST\", body);\r\n\t\tdetectAlert(res, \"Successfully canceled.\");\r\n\t\tsetCancelAppointment(\"\");\r\n\t};\r\n\r\n\tconst { userInfo } = user;\r\n\treturn (\r\n\t\t<StudentContext.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\tcurrentDate,\r\n\t\t\t\tsetCurrentDate,\r\n\t\t\t\tcancelAppointment,\r\n\t\t\t\tsetCancelAppointment,\r\n\t\t\t\tdata,\r\n\t\t\t\tsetData,\r\n\t\t\t\tuserInfo,\r\n\t\t\t\tloading,\r\n\t\t\t\tsetLoading,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<Dialog\r\n\t\t\t\topen={cancelAppointment !== \"\"}\r\n\t\t\t\tonClose={() => setCancelAppointment(\"\")}\r\n\t\t\t\tfullWidth\r\n\t\t\t>\r\n\t\t\t\t<DialogTitle>Cancel your booking?</DialogTitle>\r\n\t\t\t\t<DialogContent>\r\n\t\t\t\t\tDo you want to cancel this booking?\r\n\t\t\t\t</DialogContent>\r\n\t\t\t\t<DialogActions>\r\n\t\t\t\t\t<ButtonGroup fullWidth>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\tonClick={() => setCancelAppointment(\"\")}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttextTransform: \"none\",\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tNo, thanks.\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\tonClick={cancel}\r\n\t\t\t\t\t\t\tclassName={classes.delete}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tYes, please cancel it.\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t</DialogActions>\r\n\t\t\t</Dialog>\r\n\t\t\t<AppBar position=\"relative\" color=\"default\">\r\n\t\t\t\t<Grid container justify=\"space-between\">\r\n\t\t\t\t\t<Grid item xs={10}>\r\n\t\t\t\t\t\t<Tabs\r\n\t\t\t\t\t\t\tvalue={currentSubject}\r\n\t\t\t\t\t\t\tindicatorColor=\"primary\"\r\n\t\t\t\t\t\t\ttextColor=\"primary\"\r\n\t\t\t\t\t\t\tonChange={(event, newValue) => {\r\n\t\t\t\t\t\t\t\tsetCurrentSubject(newValue);\r\n\t\t\t\t\t\t\t\tif (newValue == currentSubject)\r\n\t\t\t\t\t\t\t\t\treloadUser(true, newValue);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tvariant=\"scrollable\"\r\n\t\t\t\t\t\t\tscrollButtons=\"auto\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Tab label=\"Registered\" />\r\n\t\t\t\t\t\t\t{user.userInfo.subjects.map((subject) => (\r\n\t\t\t\t\t\t\t\t<Tab label={subject} key={subject} />\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</Tabs>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={2}>\r\n\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\tvalue={mainResourceName}\r\n\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\tsetMainResourceName(e.target.value)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<MenuItem key=\"booking\" value=\"booking\">\r\n\t\t\t\t\t\t\t\tBooking\r\n\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t<MenuItem key=\"title\" value=\"title\">\r\n\t\t\t\t\t\t\t\tSubjects\r\n\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</AppBar>\r\n\r\n\t\t\t<Fade in timeout={500}>\r\n\t\t\t\t<div className={classes.paper}>\r\n\t\t\t\t\t<TimeTable\r\n\t\t\t\t\t\tdata={data}\r\n\t\t\t\t\t\tcurrentDate={currentDate}\r\n\t\t\t\t\t\tsetCurrentDate={setCurrentDate}\r\n\t\t\t\t\t\theader={Header}\r\n\t\t\t\t\t\tcontent={Content}\r\n\t\t\t\t\t\tloading={loading}\r\n\t\t\t\t\t\tviewChange={true}\r\n\t\t\t\t\t\tchangeMainResource={changeMainResource}\r\n\t\t\t\t\t\tmainResourceName={mainResourceName}\r\n\t\t\t\t\t\tsubjects={user.userInfo.subjects}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</Fade>\r\n\t\t</StudentContext.Provider>\r\n\t);\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { UserContext, myFetch } from \"../Methods\";\r\nimport Layout from \"../Navigation/Layout\";\r\nimport Student from \"./Student\";\r\nimport Staff from \"./Staff\";\r\n\r\nexport default () => {\r\n\t//Set the routes.\r\n\tconst {\r\n\t\tsetSelectedRoute,\r\n\t\tloadingRoute,\r\n\t\tsetLoadingRoute,\r\n\t\tfetchUser,\r\n\t\tuser,\r\n\t} = useContext(UserContext);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetSelectedRoute(\"consultations\");\r\n\t\tfetchUser().then(() => setLoadingRoute(false));\r\n\t}, []);\r\n\r\n\tif (loadingRoute || !user.type) return <Layout />;\r\n\r\n\treturn (\r\n\t\t<Layout\r\n\t\t\tcontent={user.type === \"student\" ? <Student /> : <Staff />}\r\n\t\t\ttype={user.type}\r\n\t\t/>\r\n\t);\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n    Grid,\r\n    CardContent,\r\n    withWidth,\r\n    isWidthUp,\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    TextField,\r\n    Snackbar,\r\n    Backdrop,\r\n    CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles, withStyles, lighten } from \"@material-ui/core/styles\";\r\nimport { myFetch, UserContext } from \"../Methods\";\r\nimport Cookies from \"js-cookie\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default ({\r\n    open,\r\n    subjectCode,\r\n    setSubjectCode,\r\n    handleDialogClose,\r\n    userType,\r\n}) => {\r\n    const { detectAlert, loadingRoute, setLoadingRoute } = useContext(\r\n        UserContext\r\n    );\r\n    const [allSubjects, setAllSubjects] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAllSubject = async () => {\r\n            const res = await myFetch(\"/api/shared/users/allSubjects\", \"GET\");\r\n            setAllSubjects(res.subjectList);\r\n            detectAlert(res);\r\n            console.log(res.subjectList);\r\n        };\r\n        fetchAllSubject();\r\n    }, []);\r\n\r\n    const GetField = () => {\r\n        return (\r\n            <Autocomplete\r\n                id=\"addSubject\"\r\n                options={allSubjects}\r\n                getOptionLabel={(option) => option}\r\n                value={subjectCode}\r\n                onChange={(event, newValue) => {\r\n                    setSubjectCode(newValue);\r\n                }}\r\n                renderInput={(params) => {\r\n                    return (\r\n                        <TextField\r\n                            {...params}\r\n                            label=\"Please choose a subject\"\r\n                            variant=\"filled\"\r\n                            required\r\n                        />\r\n                    );\r\n                }}\r\n            />\r\n        );\r\n    };\r\n\r\n    const join = async (e) => {\r\n        e.preventDefault();\r\n        let url = \"/api/student/subjects/join\";\r\n        if (userType === \"staff\") url = \"/api/staff/subjects/join\";\r\n        setLoadingRoute(true);\r\n        const res = await myFetch(url, \"POST\", {\r\n            subjectCode: subjectCode,\r\n        });\r\n        detectAlert(\r\n            res,\r\n            `You have successfully joined subject ${subjectCode}.`\r\n        );\r\n\r\n        setLoadingRoute(false);\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={handleDialogClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n            fullWidth\r\n        >\r\n            <DialogTitle id=\"form-dialog-title\">Join a new Subject</DialogTitle>\r\n            <DialogContent>\r\n                <GetField />\r\n            </DialogContent>\r\n\r\n            <DialogActions>\r\n                <Button fullWidth onClick={handleDialogClose}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    fullWidth\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    onClick={join}\r\n                >\r\n                    Join\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n    Grid,\r\n    withWidth,\r\n    isWidthUp,\r\n    Typography,\r\n    Tooltip,\r\n    Fab,\r\n    IconButton,\r\n    List,\r\n    ListItem,\r\n    ListItemAvatar,\r\n    ListItemSecondaryAction,\r\n    ListItemText,\r\n    Avatar,\r\n    Grow,\r\n    Divider,\r\n    Snackbar,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport SchoolIcon from \"@material-ui/icons/School\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Add from \"./Add\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nimport { myFetch, UserContext } from \"../Methods\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        maxWidth: \"100%\",\r\n        marginTop: theme.spacing(10),\r\n    },\r\n    fab: {\r\n        position: \"fixed\",\r\n        bottom: theme.spacing(1) * 10,\r\n        right: theme.spacing(1) * 11,\r\n    },\r\n}));\r\n\r\nexport default ({ user, setMySubjects, mySubjects }) => {\r\n    //\r\n    const classes = useStyles();\r\n    const { type, userInfo } = user;\r\n    const { firstName, lastName } = userInfo;\r\n    const [open, setOpen] = useState(false);\r\n    const [subjectCode, setSubjectCode] = useState(\"\");\r\n\r\n    const {\r\n        setLoadingRoute,\r\n        alert,\r\n        setAlert,\r\n        detectAlert,\r\n        closeAlert,\r\n    } = useContext(UserContext);\r\n\r\n    useEffect(() => {\r\n        const fetchMySubject = async () => {\r\n            const res = await myFetch(\"/api/student/subjects/all\", \"GET\");\r\n            detectAlert(res);\r\n            setMySubjects(res);\r\n        };\r\n\r\n        fetchMySubject();\r\n    }, [alert.status]);\r\n\r\n    const leave = async (subjectCode) => {\r\n        setLoadingRoute(true);\r\n        const res = await myFetch(\"/api/student/subjects/leave\", \"POST\", {\r\n            subjectCode: subjectCode,\r\n        });\r\n        detectAlert(res, `You have successfully left subject ${subjectCode}.`);\r\n\r\n        setLoadingRoute(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Tooltip title=\"Join new subject\" aria-label=\"add\">\r\n                <Fab\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    className={classes.fab}\r\n                    onClick={() => {\r\n                        setOpen(true);\r\n                    }}\r\n                >\r\n                    <AddIcon />\r\n                </Fab>\r\n            </Tooltip>\r\n            <Add\r\n                open={open}\r\n                handleDialogClose={() => {\r\n                    setOpen(false);\r\n                }}\r\n                subjectCode={subjectCode}\r\n                setSubjectCode={setSubjectCode}\r\n                userType=\"student\"\r\n            />\r\n            <Grid container justify=\"center\" alignItems=\"center\">\r\n                <Grid item xs={12}>\r\n                    <Typography\r\n                        variant=\"h5\"\r\n                        style={{ fontWeight: 900, color: \"#455a64\" }}\r\n                    >\r\n                        Your current subject list:\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    {mySubjects.subjectsInfo.map(\r\n                        ({ subjectCode, subjectName }, index) => (\r\n                            <Grow in timeout={index + 1 * 500} key={index}>\r\n                                <List>\r\n                                    <Divider />\r\n                                    <ListItem>\r\n                                        <ListItemAvatar>\r\n                                            <Avatar>\r\n                                                <SchoolIcon />\r\n                                            </Avatar>\r\n                                        </ListItemAvatar>\r\n                                        <ListItemText\r\n                                            primary={subjectCode}\r\n                                            secondary={subjectName}\r\n                                        />\r\n                                        <ListItemSecondaryAction>\r\n                                            <IconButton\r\n                                                edge=\"end\"\r\n                                                aria-label=\"delete\"\r\n                                                onClick={() => {\r\n                                                    leave(subjectCode);\r\n                                                }}\r\n                                            >\r\n                                                <DeleteIcon />\r\n                                            </IconButton>\r\n                                        </ListItemSecondaryAction>\r\n                                    </ListItem>\r\n                                    <Divider />\r\n                                </List>\r\n                            </Grow>\r\n                        )\r\n                    )}\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n    Grid,\r\n    CardContent,\r\n    withWidth,\r\n    isWidthUp,\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    TextField,\r\n    Paper,\r\n    Snackbar,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles, withStyles, lighten } from \"@material-ui/core/styles\";\r\nimport { UserContext, myFetch } from \"../Methods\";\r\nimport Cookies from \"js-cookie\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default ({\r\n    open,\r\n    subjectCode,\r\n    setSubjectCode,\r\n    subjectName,\r\n    setSubjectName,\r\n    handleDialogClose,\r\n    setError,\r\n    setAdded,\r\n}) => {\r\n    const { detectAlert, loadingRoute, setLoadingRoute } = useContext(\r\n        UserContext\r\n    );\r\n    const create = async () => {\r\n        setLoadingRoute(true);\r\n\r\n        const res = await myFetch(\"/api/staff/subjects/create\", \"POST\", {\r\n            subjectCode: subjectCode,\r\n            subjectName: subjectName,\r\n        });\r\n        detectAlert(\r\n            res,\r\n            `You have successfully created subject ${subjectCode}.`\r\n        );\r\n\r\n        setLoadingRoute(false);\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={handleDialogClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n            fullWidth\r\n        >\r\n            <DialogTitle id=\"form-dialog-title\">\r\n                Create a new Subject\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <TextField\r\n                    label=\"Subject Code\"\r\n                    required\r\n                    onChange={(event) => {\r\n                        setSubjectCode(event.target.value);\r\n                    }}\r\n                    fullWidth\r\n                />\r\n                <br />\r\n                <br />\r\n\r\n                <TextField\r\n                    label=\"Subject Name\"\r\n                    required\r\n                    onChange={(event) => {\r\n                        setSubjectName(event.target.value);\r\n                    }}\r\n                    fullWidth\r\n                />\r\n            </DialogContent>\r\n\r\n            <DialogActions>\r\n                <Button fullWidth onClick={handleDialogClose}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    fullWidth\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    onClick={create}\r\n                >\r\n                    Create\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n    Grid,\r\n    withWidth,\r\n    isWidthUp,\r\n    Typography,\r\n    Tooltip,\r\n    Fab,\r\n    IconButton,\r\n    List,\r\n    ListItem,\r\n    ListItemAvatar,\r\n    ListItemSecondaryAction,\r\n    ListItemText,\r\n    Avatar,\r\n    Grow,\r\n    Divider,\r\n    Snackbar,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport SchoolIcon from \"@material-ui/icons/School\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\n\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport SpeedDial from \"@material-ui/lab/SpeedDial\";\r\nimport SpeedDialIcon from \"@material-ui/lab/SpeedDialIcon\";\r\nimport SpeedDialAction from \"@material-ui/lab/SpeedDialAction\";\r\n\r\nimport { myFetch, UserContext } from \"../Methods\";\r\nimport Add from \"./Add\";\r\nimport Create from \"./Create\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        maxWidth: \"100%\",\r\n        marginTop: theme.spacing(10),\r\n    },\r\n    fab: {\r\n        position: \"fixed\",\r\n        bottom: theme.spacing(6),\r\n        right: theme.spacing(6),\r\n    },\r\n}));\r\n\r\nexport default ({ user, setMySubjects, mySubjects, fetchSubject }) => {\r\n    const classes = useStyles();\r\n    const [openJoin, setOpenJoin] = useState(false);\r\n    const [openCreate, setOpenCreate] = useState(false);\r\n    const [openSpeed, setOpenSpeed] = useState(false);\r\n    const [subjectCode, setSubjectCode] = useState(\"\");\r\n    const [newName, setNewName] = useState(\"\");\r\n\r\n    const { type, userInfo } = user;\r\n    const { firstName, lastName } = userInfo;\r\n\r\n    const {\r\n        setLoadingRoute,\r\n        alert,\r\n        setAlert,\r\n        detectAlert,\r\n        closeAlert,\r\n    } = useContext(UserContext);\r\n\r\n    useEffect(() => {\r\n        fetchSubject(\"staff\").then(setLoadingRoute(false));\r\n    }, [alert.status]);\r\n\r\n    const handleJoinOpen = () => {\r\n        if (mySubjects.subjectsInfo.length > 4) {\r\n            setAlert({\r\n                status: \"warning\",\r\n                message: \"Maximum 5 subjects in your account.\",\r\n            });\r\n            return;\r\n        }\r\n        setOpenJoin(true);\r\n    };\r\n\r\n    const leave = async (subjectCode) => {\r\n        setLoadingRoute(true);\r\n        const res = await myFetch(\"/api/staff/subjects/leave\", \"POST\", {\r\n            subjectCode: subjectCode,\r\n        });\r\n        detectAlert(res, `You have successfully left subject ${subjectCode}.`);\r\n\r\n        setLoadingRoute(false);\r\n    };\r\n\r\n    console.log(mySubjects);\r\n    if (!mySubjects.subjectsInfo) return null;\r\n\r\n    return (\r\n        <div>\r\n            <SpeedDial\r\n                ariaLabel=\"SpeedDial example\"\r\n                className={classes.fab}\r\n                icon={<SpeedDialIcon />}\r\n                open={openSpeed}\r\n                onClose={() => {\r\n                    setOpenSpeed(false);\r\n                }}\r\n                onOpen={() => {\r\n                    setOpenSpeed(true);\r\n                }}\r\n                direction=\"up\"\r\n            >\r\n                <SpeedDialAction\r\n                    icon={<AddIcon />}\r\n                    tooltipTitle=\"Join new subject\"\r\n                    onClick={handleJoinOpen}\r\n                />\r\n                <SpeedDialAction\r\n                    icon={<CreateIcon />}\r\n                    tooltipTitle=\"Create new subject\"\r\n                    onClick={() => {\r\n                        closeAlert();\r\n                        setOpenCreate(true);\r\n                    }}\r\n                />\r\n            </SpeedDial>\r\n\r\n            <Add\r\n                open={openJoin}\r\n                handleDialogClose={() => {\r\n                    setOpenJoin(false);\r\n                }}\r\n                subjectCode={subjectCode}\r\n                setSubjectCode={setSubjectCode}\r\n                userType=\"staff\"\r\n            />\r\n            <Create\r\n                open={openCreate}\r\n                handleDialogClose={() => {\r\n                    setOpenCreate(false);\r\n                }}\r\n                subjectCode={subjectCode}\r\n                setSubjectCode={setSubjectCode}\r\n                subjectName={newName}\r\n                setSubjectName={setNewName}\r\n            />\r\n\r\n            <Grid container justify=\"center\" alignItems=\"center\">\r\n                <Grid item xs={12}>\r\n                    <Typography\r\n                        variant=\"h5\"\r\n                        style={{ fontWeight: 900, color: \"#455a64\" }}\r\n                    >\r\n                        Your current subject list:\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    {mySubjects.subjectsInfo.map(\r\n                        ({ subjectCode, subjectName }, index) => (\r\n                            <Grow in timeout={index + 1 * 200} key={index}>\r\n                                <List>\r\n                                    <Divider />\r\n                                    <ListItem>\r\n                                        <ListItemAvatar>\r\n                                            <Avatar>\r\n                                                <SchoolIcon />\r\n                                            </Avatar>\r\n                                        </ListItemAvatar>\r\n                                        <ListItemText\r\n                                            primary={subjectCode}\r\n                                            secondary={subjectName}\r\n                                        />\r\n                                        <ListItemSecondaryAction>\r\n                                            <IconButton\r\n                                                edge=\"end\"\r\n                                                aria-label=\"delete\"\r\n                                                onClick={() => {\r\n                                                    leave(subjectCode);\r\n                                                }}\r\n                                            >\r\n                                                <DeleteIcon />\r\n                                            </IconButton>\r\n                                        </ListItemSecondaryAction>\r\n                                    </ListItem>\r\n                                    <Divider />\r\n                                </List>\r\n                            </Grow>\r\n                        )\r\n                    )}\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\n\r\nimport { UserContext, getUser } from \"../Methods\";\r\nimport Layout from \"../Navigation/Layout\";\r\n\r\nimport { myFetch } from \"../Methods\";\r\nimport Student from \"./Student\";\r\nimport Staff from \"./Staff\";\r\nimport Loading from \"../Navigation/Loading\";\r\n\r\nexport default () => {\r\n    const [subjectInfo, setSubjectInfo] = useState({});\r\n    const {\r\n        setSelectedRoute,\r\n        setLoadingRoute,\r\n        loadingRoute,\r\n        detectAlert,\r\n        fetchUser,\r\n        user,\r\n    } = useContext(UserContext);\r\n\r\n    console.log(\"???\");\r\n\r\n    const fetchSubject = async (type) => {\r\n        console.log(type);\r\n        if (type === \"student\") {\r\n            const res = await myFetch(\"/api/student/subjects/all\", \"GET\");\r\n            setSubjectInfo(res);\r\n            detectAlert(res);\r\n            if (res.success) setLoadingRoute(false);\r\n\r\n            console.log(res);\r\n        } else {\r\n            const res = await myFetch(\"/api/staff/subjects/all\", \"GET\");\r\n            setSubjectInfo(res);\r\n            detectAlert(res);\r\n            if (res.success) setLoadingRoute(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        //Set Navigation to this page.\r\n        setSelectedRoute(\"settings\");\r\n\r\n        const fetchData = async () => {\r\n            const res = await fetchUser();\r\n            if (res.success) {\r\n                detectAlert(\r\n                    res,\r\n                    false,\r\n                    `Welcome back! ${res.type} ${res.userInfo.firstName} ${res.userInfo.lastName}`\r\n                );\r\n            }\r\n            console.log(res);\r\n            fetchSubject(res.type).then(() => setLoadingRoute(false));\r\n        };\r\n        fetchData();\r\n    }, []);\r\n\r\n    if (loadingRoute || !user.type) {\r\n        return <Layout />;\r\n    }\r\n\r\n    return (\r\n        <Layout\r\n            content={\r\n                user.type === \"student\" ? (\r\n                    <Student\r\n                        user={user}\r\n                        mySubjects={subjectInfo}\r\n                        setMySubjects={setSubjectInfo}\r\n                    />\r\n                ) : (\r\n                    <Staff\r\n                        user={user}\r\n                        mySubjects={subjectInfo}\r\n                        setMySubjects={setSubjectInfo}\r\n                        fetchSubject={fetchSubject}\r\n                    />\r\n                )\r\n            }\r\n            type={user.type}\r\n        />\r\n    );\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n    Grid,\r\n    CardContent,\r\n    withWidth,\r\n    isWidthUp,\r\n    Button,\r\n    IconButton,\r\n    Paper,\r\n    Typography,\r\n    LinearProgress,\r\n    Card,\r\n    CardHeader,\r\n    List,\r\n    ListItem,\r\n    ListItemAvatar,\r\n    Collapse,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    Avatar,\r\n    AppBar,\r\n    Select,\r\n    Tab,\r\n    Tabs,\r\n    MenuItem,\r\n    Grow,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles, withStyles, lighten } from \"@material-ui/core/styles\";\r\nimport { red, green, lightBlue } from \"@material-ui/core/colors\";\r\nimport { myFetch, UserContext, StudentContext } from \"../Methods\";\r\nimport {\r\n    KeyboardTimePicker,\r\n    MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\nimport MomentUtils from \"@date-io/moment\";\r\n\r\nimport RoomIcon from \"@material-ui/icons/Room\";\r\n\r\nimport AutorenewIcon from \"@material-ui/icons/Autorenew\";\r\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\n\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport AccessAlarmIcon from \"@material-ui/icons/AccessAlarm\";\r\nimport BlockIcon from \"@material-ui/icons/Block\";\r\nimport AddIcon from \"@material-ui/icons/PlaylistAdd\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        maxWidth: \"100%\",\r\n        marginTop: theme.spacing(10),\r\n    },\r\n    cardHeader: {\r\n        background: theme.palette.primary,\r\n    },\r\n    registered: {\r\n        background: green[100],\r\n    },\r\n    normal: {\r\n        background: lightBlue[100],\r\n    },\r\n}));\r\n\r\nconst getAction = (hub, user, setDeleteHub, join) => {\r\n    if (hub.creator.email == user.userInfo.email)\r\n        return (\r\n            <IconButton onClick={() => setDeleteHub(hub.id)}>\r\n                <DeleteIcon />\r\n            </IconButton>\r\n        );\r\n    if (hub.registered)\r\n        return (\r\n            <IconButton onClick={() => setDeleteHub(hub.id)}>\r\n                <BlockIcon />\r\n            </IconButton>\r\n        );\r\n    return (\r\n        <IconButton\r\n            onClick={() => {\r\n                join(hub.id);\r\n            }}\r\n        >\r\n            <AddIcon />\r\n        </IconButton>\r\n    );\r\n};\r\n\r\nexport default ({\r\n    date,\r\n    hub,\r\n    loading,\r\n    time,\r\n    setDeleteHub,\r\n    setLoading,\r\n    setHubs,\r\n    fetchHubs,\r\n    currentSubject,\r\n    detectAlert,\r\n    userInfo,\r\n}) => {\r\n    const classes = useStyles();\r\n\r\n    const [openStudent, setOpenStudent] = useState(false);\r\n\r\n    const { user } = useContext(UserContext);\r\n\r\n    const join = async (id) => {\r\n        setLoading(true);\r\n\r\n        const res = await myFetch(\"/api/student/hub/join\", \"POST\", {\r\n            id: id,\r\n        });\r\n        detectAlert(res, \"Successfully joined.\");\r\n\r\n        const subjectHubs = await await fetchHubs(\r\n            currentSubject,\r\n            detectAlert,\r\n            setLoading,\r\n            userInfo\r\n        );\r\n        if (!subjectHubs) return;\r\n        setHubs(subjectHubs);\r\n        setLoading(false);\r\n    };\r\n    return (\r\n        <Grow in={!loading} timeout={time}>\r\n            <Card>\r\n                <CardHeader\r\n                    title={hub.summary}\r\n                    subheader={`${hub.creator.firstName} ${hub.creator.lastName}(${hub.creator.email})`}\r\n                    className={\r\n                        hub.registered ? classes.registered : classes.normal\r\n                    }\r\n                    avatar={<Avatar>{hub.creator.lastName.charAt(0)}</Avatar>}\r\n                    action={getAction(hub, user, setDeleteHub, join)}\r\n                />\r\n                <CardContent>\r\n                    <List>\r\n                        <ListItem\r\n                            button\r\n                            onClick={() => setOpenStudent(!openStudent)}\r\n                        >\r\n                            <ListItemIcon>\r\n                                <PeopleIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Members\" />\r\n                            {openStudent ? <ExpandLess /> : <ExpandMore />}\r\n                        </ListItem>\r\n                        <Collapse in={openStudent} timeout=\"auto\" unmountOnExit>\r\n                            <List component=\"div\" disablePadding>\r\n                                <div className={classes.scroll}>\r\n                                    {hub.students.map((student, index) => (\r\n                                        <ListItem key={index}>\r\n                                            <ListItemIcon>\r\n                                                <AccountCircleIcon />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText\r\n                                                primary={`${student.firstName} ${student.lastName}`}\r\n                                                secondary={student.email}\r\n                                            />\r\n                                        </ListItem>\r\n                                    ))}\r\n                                </div>\r\n                            </List>\r\n                        </Collapse>\r\n                        <ListItem>\r\n                            <ListItemIcon>\r\n                                <AccessAlarmIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText\r\n                                primary={`Let's meet up every ${hub.day} at:`}\r\n                            />\r\n                        </ListItem>\r\n\r\n                        <ListItem>\r\n                            <ListItemIcon>\r\n                                <AutorenewIcon />\r\n                            </ListItemIcon>\r\n                            <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                                <KeyboardTimePicker\r\n                                    openTo=\"hours\"\r\n                                    value={hub.startDate}\r\n                                    onChange={() => {}}\r\n                                    fullWidth\r\n                                />\r\n                            </MuiPickersUtilsProvider>\r\n                        </ListItem>\r\n\r\n                        <ListItem>\r\n                            <ListItemIcon>\r\n                                <RoomIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText\r\n                                primary=\"Location\"\r\n                                secondary={hub.location}\r\n                            />\r\n                        </ListItem>\r\n                    </List>\r\n                </CardContent>\r\n            </Card>\r\n        </Grow>\r\n    );\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n    Grid,\r\n    CardContent,\r\n    withWidth,\r\n    isWidthUp,\r\n    Button,\r\n    Paper,\r\n    Typography,\r\n    LinearProgress,\r\n    Card,\r\n    CardHeader,\r\n    List,\r\n    ListItem,\r\n    ListItemAvatar,\r\n    Collapse,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    Avatar,\r\n    AppBar,\r\n    Select,\r\n    Tab,\r\n    Tabs,\r\n    MenuItem,\r\n    Tooltip,\r\n    Fab,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogActions,\r\n    DialogContent,\r\n    Grow,\r\n    Slider,\r\n    Zoom,\r\n    TextField,\r\n    DialogContentText,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles, withStyles, lighten } from \"@material-ui/core/styles\";\r\nimport { red, green } from \"@material-ui/core/colors\";\r\nimport { myFetch, UserContext, StudentContext } from \"../Methods\";\r\nimport {\r\n    KeyboardTimePicker,\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDateTimePicker,\r\n} from \"@material-ui/pickers\";\r\nimport MomentUtils from \"@date-io/moment\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nimport RoomIcon from \"@material-ui/icons/Room\";\r\n\r\nimport AutorenewIcon from \"@material-ui/icons/Autorenew\";\r\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\n\r\nimport DraftsIcon from \"@material-ui/icons/Drafts\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\n\r\nimport SchoolIcon from \"@material-ui/icons/School\";\r\nimport ScheduleIcon from \"@material-ui/icons/Schedule\";\r\nimport GroupIcon from \"@material-ui/icons/GroupAddTwoTone\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport AddIcon from \"@material-ui/icons/PlaylistAdd\";\r\nimport CreateIcon from \"@material-ui/icons/Add\";\r\n\r\nimport HubCard from \"./HubCard\";\r\nimport { Create } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        maxWidth: \"100%\",\r\n        marginTop: theme.spacing(10),\r\n    },\r\n    hub: {\r\n        marginTop: theme.spacing(5),\r\n    },\r\n    fab: {\r\n        position: \"fixed\",\r\n        bottom: theme.spacing(1) * 10,\r\n        right: theme.spacing(1) * 8,\r\n    },\r\n    icon: {\r\n        margin: \"auto\",\r\n    },\r\n}));\r\n\r\nconst marks = [\r\n    {\r\n        value: 0,\r\n        label: \"0 Minutes\",\r\n    },\r\n    {\r\n        value: 60,\r\n        label: \"1 hour\",\r\n    },\r\n    {\r\n        value: 120,\r\n        label: \"2 hours\",\r\n    },\r\n    {\r\n        value: 240,\r\n        label: \"4 hours\",\r\n    },\r\n];\r\n\r\nexport default ({\r\n    open,\r\n    setOpen,\r\n    setLoading,\r\n    subjects,\r\n    fetchHubs,\r\n    userInfo,\r\n    setAlert,\r\n    detectAlert,\r\n    setHubs,\r\n    currentSubject,\r\n}) => {\r\n    const classes = useStyles();\r\n    const [subjectCode, setSubjectCode] = useState(subjects[0]);\r\n    const [startDate, setStartDate] = useState(new Date());\r\n    const [location, setLocation] = useState(\"\");\r\n    const [duration, setDuration] = useState(15);\r\n    const [summary, setSummary] = useState(\"\");\r\n    const [day, setDay] = useState(\"Monday\");\r\n\r\n    const create = async () => {\r\n        setLoading(true);\r\n        setOpen(false);\r\n        if (!subjectCode || !startDate || !subjectCode || location === \"\") {\r\n            setAlert({ status: \"warning\", message: \"Insufficient Input.\" });\r\n            return;\r\n        }\r\n        const body = {\r\n            subjectCode: subjectCode,\r\n            startDate: startDate,\r\n            duration: duration,\r\n            location: location,\r\n            day: day,\r\n            summary: summary,\r\n        };\r\n        const res = await myFetch(\"/api/student/hub/create\", \"POST\", body);\r\n        detectAlert(res, \"Successfully created.\");\r\n        const subjectHubs = await await fetchHubs(\r\n            currentSubject,\r\n            detectAlert,\r\n            setLoading,\r\n            userInfo\r\n        );\r\n        if (!subjectHubs) return;\r\n        setHubs(subjectHubs);\r\n        setLoading(false);\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={() => {\r\n                setOpen(false);\r\n            }}\r\n            aria-labelledby=\"form-dialog-title\"\r\n            fullWidth\r\n        >\r\n            <DialogTitle id=\"form-dialog-title\">Create a study hub</DialogTitle>\r\n            <DialogContent dividers>\r\n                <Grid container>\r\n                    <Grid container>\r\n                        <Grid item xs={1}>\r\n                            <GroupIcon className={classes.icon} />\r\n                        </Grid>\r\n                        <Grid item xs={11}>\r\n                            <TextField\r\n                                label=\"Name of your hub\"\r\n                                multiline\r\n                                fullWidth\r\n                                rowsMax={2}\r\n                                value={summary}\r\n                                onChange={(e) => {\r\n                                    setSummary(e.target.value);\r\n                                }}\r\n                                variant=\"outlined\"\r\n                            />\r\n                            <br />\r\n                            <br />\r\n                        </Grid>\r\n                        <Grid item xs={1}>\r\n                            <SchoolIcon className={classes.icon} />\r\n                        </Grid>\r\n                        <Grid item xs={11}>\r\n                            <Autocomplete\r\n                                id=\"addSubject\"\r\n                                options={subjects}\r\n                                getOptionLabel={(option) => option}\r\n                                value={subjectCode}\r\n                                onChange={(event, newValue) => {\r\n                                    setSubjectCode(newValue);\r\n                                }}\r\n                                renderInput={(params) => {\r\n                                    return (\r\n                                        <TextField\r\n                                            {...params}\r\n                                            label=\"Please choose a subject\"\r\n                                            variant=\"filled\"\r\n                                            required\r\n                                        />\r\n                                    );\r\n                                }}\r\n                            />\r\n                            <br />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <ScheduleIcon className={classes.icon} />\r\n                    </Grid>\r\n                    <Grid item xs={11}>\r\n                        <Autocomplete\r\n                            options={[\r\n                                \"Monday\",\r\n                                \"Tuesday\",\r\n                                \"Wednesday\",\r\n                                \"Thursday\",\r\n                                \"Friday\",\r\n                                \"Saturday\",\r\n                                \"Sunday\",\r\n                            ]}\r\n                            getOptionLabel={(option) => option}\r\n                            value={day}\r\n                            onChange={(event, newValue) => {\r\n                                setDay(day);\r\n                            }}\r\n                            renderInput={(params) => {\r\n                                return (\r\n                                    <TextField\r\n                                        {...params}\r\n                                        label=\"Please choose a day\"\r\n                                        variant=\"filled\"\r\n                                        required\r\n                                    />\r\n                                );\r\n                            }}\r\n                        />\r\n                        <br />\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <ScheduleIcon className={classes.icon} />\r\n                    </Grid>\r\n                    <Grid item xs={11}>\r\n                        <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                            <KeyboardTimePicker\r\n                                label=\"Time\"\r\n                                value={startDate}\r\n                                onChange={(date) => {\r\n                                    setStartDate(date);\r\n                                }}\r\n                                fullWidth\r\n                                required\r\n                            />\r\n                        </MuiPickersUtilsProvider>\r\n                        <br />\r\n                        <br />\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <br />\r\n                        <ScheduleIcon className={classes.icon} />\r\n                    </Grid>\r\n                    <Grid item xs={11}>\r\n                        <DialogContentText>\r\n                            {\"Duration: \"}\r\n                            {duration}\r\n                            {\" Minutes\"}\r\n                        </DialogContentText>\r\n                        <br />\r\n                        <Slider\r\n                            valueLabelDisplay=\"auto\"\r\n                            marks={marks}\r\n                            aria-labelledby=\"discrete-slider\"\r\n                            getAriaValueText={(value) => `${value} Minutes`}\r\n                            value={duration}\r\n                            onChange={(e, newValue) => {\r\n                                setDuration(newValue);\r\n                            }}\r\n                            step={15}\r\n                            max={300}\r\n                        />\r\n                        <br />\r\n                        <br />\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <RoomIcon className={classes.icon} />\r\n                    </Grid>\r\n                    <Grid item xs={11}>\r\n                        <TextField\r\n                            label=\"Location\"\r\n                            variant=\"filled\"\r\n                            required\r\n                            value={location}\r\n                            onChange={(e) => {\r\n                                setLocation(e.target.value);\r\n                            }}\r\n                            fullWidth\r\n                        />\r\n                        <DialogContentText></DialogContentText>\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button\r\n                    fullWidth\r\n                    onClick={() => {\r\n                        setOpen(false);\r\n                    }}\r\n                >\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    fullWidth\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    onClick={create}\r\n                >\r\n                    Create\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n    Grid,\r\n    CardContent,\r\n    withWidth,\r\n    isWidthUp,\r\n    Button,\r\n    Paper,\r\n    Typography,\r\n    LinearProgress,\r\n    Card,\r\n    CardHeader,\r\n    List,\r\n    ListItem,\r\n    ListItemAvatar,\r\n    Collapse,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    Avatar,\r\n    AppBar,\r\n    Select,\r\n    Tab,\r\n    Tabs,\r\n    MenuItem,\r\n    Tooltip,\r\n    Fab,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogActions,\r\n    DialogContent,\r\n    Grow,\r\n    Slider,\r\n    Zoom,\r\n    TextField,\r\n    DialogContentText,\r\n    ButtonGroup,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles, withStyles, lighten } from \"@material-ui/core/styles\";\r\nimport { red, green, grey } from \"@material-ui/core/colors\";\r\nimport { myFetch, UserContext, StudentContext } from \"../Methods\";\r\nimport CreateIcon from \"@material-ui/icons/Add\";\r\n\r\nimport HubCard from \"./HubCard\";\r\nimport { Create } from \"@material-ui/icons\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\nimport CreateDialog from \"./CreateDialog\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        maxWidth: \"100%\",\r\n        marginTop: theme.spacing(10),\r\n    },\r\n    hub: {\r\n        marginTop: theme.spacing(5),\r\n    },\r\n    fab: {\r\n        position: \"fixed\",\r\n        bottom: theme.spacing(1) * 10,\r\n        right: theme.spacing(1) * 8,\r\n    },\r\n    icon: {\r\n        margin: \"auto\",\r\n    },\r\n    delete: {\r\n        textTransform: \"none\",\r\n        color: theme.palette.getContrastText(grey[700]),\r\n        background: grey[700],\r\n        \"&:hover\": {\r\n            color: theme.palette.getContrastText(grey[900]),\r\n            background: grey[900],\r\n        },\r\n    },\r\n\r\n    media: {\r\n        height: \"33VH\",\r\n    },\r\n}));\r\n\r\nconst marks = [\r\n    {\r\n        value: 0,\r\n        label: \"0 Minutes\",\r\n    },\r\n    {\r\n        value: 60,\r\n        label: \"1 hour\",\r\n    },\r\n    {\r\n        value: 120,\r\n        label: \"2 hours\",\r\n    },\r\n    {\r\n        value: 240,\r\n        label: \"4 hours\",\r\n    },\r\n];\r\n\r\n//Fetch the appointments of the current subject.\r\nconst fetchHubs = async (currentSubject, detectAlert, setLoading, userInfo) => {\r\n    setLoading(true);\r\n    if (currentSubject == 0) {\r\n        const res = await myFetch(\"/api/student/hub/registered\", \"GET\");\r\n        return res.subjectHubs;\r\n    }\r\n    const body = {\r\n        subjectCode: userInfo.subjects[currentSubject - 1],\r\n    };\r\n    const res = await myFetch(\"/api/student/hub/all\", \"POST\", body);\r\n    detectAlert(res);\r\n    return res.subjectHubs;\r\n};\r\n\r\nconst DeleteDialog = ({\r\n    leaveHub,\r\n    setDeleteHub,\r\n    classes,\r\n    setLoading,\r\n    setAlert,\r\n    detectAlert,\r\n    setHubs,\r\n    currentSubject,\r\n    userInfo,\r\n}) => {\r\n    const deleteing = async () => {\r\n        setLoading(true);\r\n        const body = {\r\n            id: leaveHub,\r\n        };\r\n        const res = await myFetch(\"/api/student/hub/leave\", \"POST\", body);\r\n        detectAlert(res, \"Successfully left.\");\r\n        const subjectHubs = await fetchHubs(\r\n            currentSubject,\r\n            detectAlert,\r\n            setLoading,\r\n            userInfo\r\n        );\r\n        if (!subjectHubs) return;\r\n        setHubs(subjectHubs);\r\n        setLoading(false);\r\n    };\r\n    return (\r\n        <Dialog\r\n            open={leaveHub !== \"\"}\r\n            onClose={() => setDeleteHub(\"\")}\r\n            fullWidth\r\n        >\r\n            <DialogTitle>Leave the StudyHub?</DialogTitle>\r\n            <DialogContent>Do you want to leave this study hub?</DialogContent>\r\n            <DialogActions>\r\n                <ButtonGroup fullWidth>\r\n                    <Button\r\n                        fullWidth\r\n                        style={{\r\n                            textTransform: \"none\",\r\n                        }}\r\n                        onClick={() => {\r\n                            setDeleteHub(\"\");\r\n                        }}\r\n                    >\r\n                        No, thanks.\r\n                    </Button>\r\n                    <Button\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        className={classes.delete}\r\n                        onClick={() => {\r\n                            setDeleteHub(\"\");\r\n                            deleteing();\r\n                        }}\r\n                    >\r\n                        Yes, I do.\r\n                    </Button>\r\n                </ButtonGroup>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default () => {\r\n    const classes = useStyles();\r\n\r\n    const { user, detectAlert, setAlert } = useContext(UserContext);\r\n\r\n    const [date, changeDate] = useState(new Date());\r\n\r\n    const { type, userInfo } = user;\r\n    const { firstName, lastName } = userInfo;\r\n\r\n    const [currentSubject, setCurrentSubject] = useState(0);\r\n    const [loading, setLoading] = useState(true);\r\n    const [hubs, setHubs] = useState([]);\r\n    const [leaveHub, setDeleteHub] = useState(\"\");\r\n    const [openCreate, setOpenCreate] = useState(false);\r\n    const [openDelete, setOpenDelete] = useState(false);\r\n\r\n    const [sortBy, setSortBy] = useState(\"time\");\r\n\r\n    //Updating consultations Information.\r\n    useEffect(() => {\r\n        fetchHubs(currentSubject, detectAlert, setLoading, userInfo).then(\r\n            (subjectHubs) => {\r\n                if (!subjectHubs) return;\r\n                setHubs(subjectHubs);\r\n                setLoading(false);\r\n            }\r\n        );\r\n    }, [alert.status, currentSubject]);\r\n\r\n    return (\r\n        <div>\r\n            <CreateDialog\r\n                open={openCreate}\r\n                setOpen={setOpenCreate}\r\n                setLoading={setLoading}\r\n                subjects={userInfo.subjects}\r\n                fetchHubs={fetchHubs}\r\n                setAlert={setAlert}\r\n                detectAlert={detectAlert}\r\n                setHubs={setHubs}\r\n                userInfo={userInfo}\r\n                currentSubject={currentSubject}\r\n            />\r\n            {loading ? null : (\r\n                <Zoom in={!loading} timeout={700}>\r\n                    <Tooltip title=\"Create a study hub\" aria-label=\"add\">\r\n                        <Fab\r\n                            color=\"primary\"\r\n                            size=\"large\"\r\n                            className={classes.fab}\r\n                            onClick={() => {\r\n                                setOpenCreate(true);\r\n                            }}\r\n                        >\r\n                            <CreateIcon />\r\n                        </Fab>\r\n                    </Tooltip>\r\n                </Zoom>\r\n            )}\r\n            <DeleteDialog\r\n                setAlert={setAlert}\r\n                detectAlert={detectAlert}\r\n                setHubs={setHubs}\r\n                setLoading={setLoading}\r\n                leaveHub={leaveHub}\r\n                setDeleteHub={setDeleteHub}\r\n                classes={classes}\r\n                currentSubject={currentSubject}\r\n                detectAlert={detectAlert}\r\n                userInfo={userInfo}\r\n            />\r\n\r\n            <AppBar position=\"relative\" color=\"default\">\r\n                <Grid container justify=\"space-between\">\r\n                    <Grid item xs={10}>\r\n                        <Tabs\r\n                            value={currentSubject}\r\n                            indicatorColor=\"primary\"\r\n                            textColor=\"primary\"\r\n                            onChange={(event, newValue) => {\r\n                                setCurrentSubject(newValue);\r\n                                if (newValue == currentSubject)\r\n                                    setCurrentSubject(newValue);\r\n                            }}\r\n                            variant=\"scrollable\"\r\n                            scrollButtons=\"auto\"\r\n                        >\r\n                            <Tab label=\"Registered\" />\r\n                            {user.userInfo.subjects.map((subject) => (\r\n                                <Tab label={subject} key={subject} />\r\n                            ))}\r\n                        </Tabs>\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                        <Select\r\n                            value={sortBy}\r\n                            onChange={(e) => setSortBy(e.target.value)}\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                        >\r\n                            <MenuItem key=\"time\" value=\"time\">\r\n                                time\r\n                            </MenuItem>\r\n                            <MenuItem key=\"trending\" value=\"trending\">\r\n                                trending\r\n                            </MenuItem>\r\n                        </Select>\r\n                    </Grid>\r\n                </Grid>\r\n            </AppBar>\r\n            <Grid container justify=\"space-around\" alignItems=\"center\">\r\n                {!loading\r\n                    ? hubs.map((hub, index) => (\r\n                          <Grid key={index} item xs={5} className={classes.hub}>\r\n                              <HubCard\r\n                                  hub={hub}\r\n                                  loading={loading}\r\n                                  time={(index + 1) * 200}\r\n                                  setDeleteHub={setDeleteHub}\r\n                                  setLoading={setLoading}\r\n                                  setHubs={setHubs}\r\n                                  fetchHubs={fetchHubs}\r\n                                  currentSubject={currentSubject}\r\n                                  detectAlert={detectAlert}\r\n                                  userInfo={userInfo}\r\n                              />\r\n                          </Grid>\r\n                      ))\r\n                    : [0, 1, 2, 3].map((index) => (\r\n                          <Grid key={index} item xs={5} className={classes.hub}>\r\n                              <Card className={classes.card}>\r\n                                  <CardHeader\r\n                                      avatar={\r\n                                          <Skeleton\r\n                                              animation=\"wave\"\r\n                                              variant=\"circle\"\r\n                                              width={40}\r\n                                              height={40}\r\n                                          />\r\n                                      }\r\n                                      title={\r\n                                          <Skeleton\r\n                                              animation=\"wave\"\r\n                                              height={10}\r\n                                              width=\"80%\"\r\n                                              style={{ marginBottom: 6 }}\r\n                                          />\r\n                                      }\r\n                                      subheader={\r\n                                          <Skeleton\r\n                                              animation=\"wave\"\r\n                                              height={10}\r\n                                              width=\"40%\"\r\n                                          />\r\n                                      }\r\n                                  />\r\n\r\n                                  <Skeleton\r\n                                      animation=\"wave\"\r\n                                      variant=\"rect\"\r\n                                      className={classes.media}\r\n                                  />\r\n                              </Card>\r\n                          </Grid>\r\n                      ))}\r\n            </Grid>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { UserContext, myFetch } from \"../Methods\";\r\nimport Layout from \"../Navigation/Layout\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Student from \"./Student\";\r\nimport { useRadioGroup } from \"@material-ui/core\";\r\n\r\nexport default () => {\r\n    const history = useHistory();\r\n    //Set the routes.\r\n    const {\r\n        setSelectedRoute,\r\n        closeAlert,\r\n        detectAlert,\r\n        loadingRoute,\r\n        setLoadingRoute,\r\n        user,\r\n        fetchUser,\r\n    } = useContext(UserContext);\r\n\r\n    //Loading user information.\r\n    useEffect(() => {\r\n        setSelectedRoute(\"hubs\");\r\n        fetchUser().then((user) => {\r\n            if (user.type !== \"student\") {\r\n                history.push(\"/Settings\");\r\n            }\r\n\r\n            setLoadingRoute(false);\r\n        });\r\n    }, []);\r\n\r\n    if (loadingRoute || !user.type) return <Layout />;\r\n\r\n    return <Layout content={<Student />} type={user.type} />;\r\n};\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport {\r\n    Grid,\r\n    CardContent,\r\n    withWidth,\r\n    isWidthUp,\r\n    Button,\r\n    Paper,\r\n    Typography,\r\n    LinearProgress,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles, withStyles, lighten } from \"@material-ui/core/styles\";\r\nimport { UserContext } from \"../Methods\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        maxWidth: \"100%\",\r\n        marginTop: theme.spacing(10),\r\n    },\r\n}));\r\n\r\nexport default () => {\r\n    const classes = useStyles();\r\n    const { user } = useContext(UserContext);\r\n    console.log(user);\r\n    const { type, userInfo } = user;\r\n    const { firstName, lastName } = userInfo;\r\n\r\n    return (\r\n        <h1>\r\n            Welcome {type} {firstName} {lastName}\r\n        </h1>\r\n    );\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { UserContext, myFetch } from \"../Methods\";\r\nimport Layout from \"../Navigation/Layout\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Staff from \"./Staff\";\r\n\r\nexport default () => {\r\n    const history = useHistory();\r\n    //Set the routes.\r\n    const {\r\n        setSelectedRoute,\r\n        closeAlert,\r\n        detectAlert,\r\n        loadingRoute,\r\n        setLoadingRoute,\r\n        fetchUser,\r\n        user,\r\n    } = useContext(UserContext);\r\n\r\n    //Loading user information.\r\n    useEffect(() => {\r\n        setSelectedRoute(\"analytic\");\r\n        fetchUser().then(setLoadingRoute(false));\r\n    }, []);\r\n\r\n    if (loadingRoute || !user.type) return <Layout />;\r\n\r\n    return <Layout content={<Staff />} type={user.type} />;\r\n};\r\n","import React from \"react\";\r\n\r\nimport {\r\n  Grid,\r\n  Container,\r\n  Hidden,\r\n  withWidth,\r\n  isWidthUp,\r\n  Typography,\r\n  Grow,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\n\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport AppBar from \"../Navigation/AppBar\";\r\nimport aboutImg from \"./img/about.png\";\r\nimport { cyan } from \"@material-ui/core/colors\";\r\nimport Login from \"../Login/login\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  c1: {\r\n    backgroundColor: theme.palette.secondary.light,\r\n  },\r\n  c2: {\r\n    backgroundColor: theme.palette.primary.light,\r\n  },\r\n  root: {\r\n    //backgroundColor: \"#e0f2f1\",\r\n\r\n    backgroundImage: \"linear-gradient(45deg, #b2dfdb 20%, #fafafa 100% )\",\r\n    minHeight: \"120VH\",\r\n  },\r\n  images: {\r\n    position: \"relative\",\r\n    //top: \"10VH\",\r\n    //margin: \"auto\",\r\n    maxHeight: \"30VH\",\r\n  },\r\n  card: {\r\n    position: \"relative\",\r\n    borderRadius: 30,\r\n    top: \"20VH\",\r\n    margin: \"auto\",\r\n    background: \"inherit\",\r\n    borderColor: cyan,\r\n    border: \"solid  #4dd0e1 5px\",\r\n    maxHeight: \"90VH\",\r\n  },\r\n}));\r\n\r\nexport default () => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar />\r\n      <Login />\r\n      <Grid container justify=\"space-around\" alignItems=\"center\">\r\n        <Grid item xs={5}>\r\n          <Grid container justify=\"center\" className={classes.images}>\r\n            <img style={{ maxWidth: \"100%\" }} src={aboutImg} alt=\"about\" />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={5}>\r\n          <Grid container justify=\"center\">\r\n            <Card className={classes.card} color=\"\">\r\n              <CardHeader\r\n                title={\r\n                  <Typography\r\n                    align=\"center\"\r\n                    style={{\r\n                      fontSize: \"30px\",\r\n                      color: \"#37474f\",\r\n                      fontWeight: 900,\r\n                      fontFamily: \"Arial\",\r\n                      textTransform: \"none\",\r\n                    }}\r\n                  >\r\n                    Who is MeeTute?\r\n                  </Typography>\r\n                }\r\n              ></CardHeader>\r\n              <Divider style={{ width: \"80%\", margin: \"auto\" }} />\r\n              <CardContent>\r\n                <Typography\r\n                  align=\"center\"\r\n                  style={{\r\n                    fontSize: \"20px\",\r\n                    color: \"#37474f\",\r\n                    fontWeight: 900,\r\n                    fontFamily: \"Arial\",\r\n                    textTransform: \"none\",\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  Our mission is to optimise your time management for a better\r\n                  working life.\r\n                  <br />\r\n                  <br />\r\n                </Typography>\r\n\r\n                <Typography>\r\n                  {\" \"}\r\n                  MeeTute identifies the problem of the underutilisation of\r\n                  consultation hours during off-peak times, potentially leading\r\n                  to a negative impact on the work efficiency of our teaching\r\n                  staff. In addition, as students, we truly understand the\r\n                  challenges of getting the help we need from teaching staff\r\n                  during assignment or exam seasons. This is an issue that\r\n                  affects over 48,000 students and staff, and probably the wider\r\n                  community.\r\n                  <br />\r\n                  <br />\r\n                </Typography>\r\n                <Typography>\r\n                  MeeTute wants to implement a platform for staff to better\r\n                  manage their consultation hours and for students to easily\r\n                  book private appointments with their lecturers/tutors and form\r\n                  study groups with their fellow peers. The ultimate goal of our\r\n                  solution is to better connect students with teaching staff as\r\n                  well as fellow classmates.\r\n                  <br />\r\n                  <br />\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport Signup from \"./component/Signup/Signup\";\r\nimport Cookies from \"js-cookie\";\r\nimport Home from \"./component/Home/home\";\r\nimport Test from \"./component/Test/Test\";\r\nimport Test2 from \"./component/Test/Test2\";\r\nimport Test3 from \"./component/Test/Test3\";\r\nimport Test4 from \"./component/Test/Test4\";\r\n\r\nimport Appointment from \"./component/Appointment/Appointment\";\r\nimport Consultation from \"./component/Consultation/Consultation\";\r\nimport Setting from \"./component/Setting/Setting\";\r\nimport Hub from \"./component/StudyHub/Hub\";\r\nimport Analytic from \"./component/Analytic/Analytic\";\r\nimport About from \"./component/About/About\";\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport { AuthApi, UserContext, myFetch } from \"./component/Methods\";\r\n\r\nconst HomeRoute = ({ component: Component, ...rest }) => {\r\n  const { auth } = useContext(AuthApi);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={() => (!auth ? <Component /> : <Redirect to=\"/Settings\" />)}\r\n    />\r\n  );\r\n};\r\n\r\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\r\n  const { auth } = useContext(AuthApi);\r\n  let checkAuth = false;\r\n\r\n  const cookie = Cookies.get(\"meetute\");\r\n  if (cookie) {\r\n    checkAuth = true;\r\n  }\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={() => (checkAuth || auth ? <Component /> : <Redirect to=\"/\" />)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default () => {\r\n  //Authentication state...\r\n  const [auth, setAuth] = useState(false);\r\n  const [loginEl, setLoginEl] = useState(null);\r\n  const [openLogin, setOpenLogin] = React.useState(false);\r\n\r\n  //Loading routes context...\r\n  const [selectedRoute, setSelectedRoute] = useState(\"settings\");\r\n  const [loadingRoute, setLoadingRoute] = useState(true);\r\n\r\n  //user information...\r\n  const [user, setUser] = useState({});\r\n\r\n  //Alerting responses from back end (eg. back end error)...\r\n  const [alert, setAlert] = useState({ status: \"\", message: \"\" });\r\n  const closeAlert = () => setAlert({ status: \"\", message: \"\" });\r\n  const detectAlert = (res, succeed, info) => {\r\n    if (res.success) {\r\n      if (succeed) {\r\n        setAlert({\r\n          status: \"success\",\r\n          message: succeed,\r\n        });\r\n      } else if (info) {\r\n        setAlert({\r\n          status: \"info\",\r\n          message: info,\r\n        });\r\n      }\r\n    } else {\r\n      let message = \"Unknown error.\";\r\n      if (res.error) message = res.error;\r\n      else if (res.message) message = res.message;\r\n\r\n      setAlert({\r\n        status: \"error\",\r\n        message: message,\r\n      });\r\n    }\r\n  };\r\n\r\n  //Loading user information.\r\n  const fetchUser = async () => {\r\n    setLoadingRoute(true);\r\n    const res = await myFetch(\"/api/shared/users/info\", \"GET\");\r\n    detectAlert(res);\r\n    setUser(res);\r\n    return res;\r\n  };\r\n\r\n  //Make authentication.\r\n  useEffect(() => {\r\n    const cookie = Cookies.get(\"meetute\");\r\n    if (cookie) setAuth(true);\r\n  }, [auth]);\r\n\r\n  return (\r\n    <AuthApi.Provider\r\n      value={{\r\n        auth,\r\n        setAuth,\r\n        loginEl,\r\n        setLoginEl,\r\n        openLogin,\r\n        setOpenLogin,\r\n      }}\r\n    >\r\n      <UserContext.Provider\r\n        value={{\r\n          selectedRoute,\r\n          setSelectedRoute,\r\n          alert,\r\n          detectAlert,\r\n          closeAlert,\r\n          setAlert,\r\n          loadingRoute,\r\n          setLoadingRoute,\r\n          fetchUser,\r\n          user,\r\n          setUser,\r\n        }}\r\n      >\r\n        <Router>\r\n          <Switch>\r\n            <ProtectedRoute\r\n              exact\r\n              path=\"/Consultations\"\r\n              component={Consultation}\r\n            />\r\n            <ProtectedRoute exact path=\"/Hubs\" component={Hub} />\r\n            <ProtectedRoute exact path=\"/Analytic\" component={Analytic} />\r\n            <ProtectedRoute\r\n              exact\r\n              path=\"/Appointments\"\r\n              component={Appointment}\r\n            />\r\n            <ProtectedRoute exact path=\"/Settings\" component={Setting} />\r\n            <HomeRoute exact path=\"/\" component={Home} />\r\n            <Route exact path=\"/about\" component={About} />\r\n            <Route exact path=\"/signup\" component={Signup} />\r\n            <Route exact path=\"/test\" component={Test} />\r\n            <Route exact path=\"/test2\" component={Test2} />\r\n            <Route exact path=\"/test3\" component={Test3} />\r\n            <Route exact path=\"/test4\" component={Test4} />\r\n          </Switch>\r\n        </Router>\r\n      </UserContext.Provider>\r\n    </AuthApi.Provider>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core\";\r\nimport { cyan, lightGreen } from \"@material-ui/core/colors\";\r\nconst theme = createMuiTheme({\r\n\tpalette: {\r\n\t\tprimary: {\r\n\t\t\tmain: cyan[800],\r\n\t\t\tlight: cyan[50],\r\n\t\t\tdark: cyan[900],\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tmain: lightGreen.A200,\r\n\t\t\tlight: lightGreen[100],\r\n\t\t\tdark: lightGreen[400],\r\n\t\t},\r\n\t},\r\n\ttypography: {\r\n\t\tfontFamily: \"sans-serif\",\r\n\t\th1: {\r\n\t\t\tfontWeight: 900,\r\n\t\t},\r\n\t\th2: {\r\n\t\t\tfontWeight: 700,\r\n\t\t\tfontStyle: \"italic\",\r\n\t\t},\r\n\t\th3: {\r\n\t\t\tfontWeight: 900,\r\n\t\t},\r\n\t\th4: {\r\n\t\t\tfontWeight: 900,\r\n\t\t\tfontSize: 30,\r\n\t\t},\r\n\t\th5: {\r\n\t\t\tfontWeight: 500,\r\n\t\t},\r\n\r\n\t\tsubtitle1: {\r\n\t\t\tfontSize: 12,\r\n\t\t},\r\n\t\tbutton: {\r\n\t\t\tfontWeight: 900,\r\n\t\t\tfontSize: \"20px\",\r\n\t\t},\r\n\t},\r\n\tshape: {},\r\n\tbackground: \"linear-gradient(to right,#ffffff 0%, #b9e2fa 100%)\",\r\n});\r\n\r\nReactDOM.render(\r\n\t<MuiThemeProvider theme={theme}>\r\n\t\t<App />\r\n\t</MuiThemeProvider>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}